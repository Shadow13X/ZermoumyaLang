
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLTGTleftSUMSUBleftMULDIVASSIGN BOOLEAN BREAK COLON COMMA COMMENT CONTINUE DECR DIV DIV_ASS ELSE EQ FOR FUNCTION GE GT ID IDIV IDIV_ASS IF INCR LAND LBRACE LBRACKET LE LNOT LOR LPAREN LT MOD MOD_ASS MUL MUL_ASS NE NEWLINE NULL NUMBER PRINT QUES RBRACE RBRACKET RESERVED RETURN RPAREN SCAN SEMI STRING SUB SUB_ASS SUM SUM_ASS WHILEprogram : program statement\n               | statementprogram : errorstatement : statement command\n                 | command\n            command : function_def\n               | function_call\n               | conditional\n               | expression\n               | assignment\n               | expression_ass\n               | input\n               | output\n               | for_loop\n               | while_loop\n               | return\n               | break\n               | continue\n               | COMMENT\n               | NEWLINE\n            assignment : ID ASSIGN expression\n                  | ID ASSIGN LBRACKET list RBRACKET\n            input : SCAN LPAREN ID RPAREN\n            output : PRINT LPAREN plist RPAREN\n            plist : pitem\n             | plist COMMA pitem\n            pitem : expressioncondition : expression GT expression\n                 | expression LT expression\n                 | expression GE expression\n                 | expression LE expression\n                 | expression NE expression\n                 | expression EQ expression\n                 | expression LAND expression\n                 | expression LOR expression\n                 | LNOT expression\n                 | BOOLEAN\n                ternary_condition : LPAREN condition RPAREN QUES bloc COLON blocif_bloc : IF LPAREN condition RPAREN blocif_elif_bloc : if_elif_bloc ELSE if_bloc\n                    | if_blocconditional : if_elif_bloc ELSE bloc\n                   | if_elif_bloc\n                bloc : LBRACE stat_bloc RBRACE\n        stat_bloc : stat_bloc command\n                 | command\n            function_def : FUNCTION ID LPAREN param_list RPAREN bloc\n                    | FUNCTION ID LPAREN RPAREN blocfunction_call : ID LPAREN param_list RPAREN SEMIparam_list : param_list COMMA param\n                  | param\n            param : IDreturn : RETURN expression\n              | RETURN expression SEMI\n    for_loop : FOR LPAREN assignment SEMI condition SEMI expression RPAREN blocwhile_loop : WHILE LPAREN condition RPAREN bloccontinue : CONTINUE\n                | CONTINUE SEMIbreak : BREAK\n             | BREAK SEMIexpression : expression SUM term\n                  | expression SUB term\n       term       : term MUL factor\n                  | term DIV factor\n                  | term IDIV factor\n                  | term MOD factor\n    expression : expression DECR\n                  | expression INCR\n    expression_ass : ID SUM_ASS expression\n                      | ID SUB_ASS expression\n                      | ID MUL_ASS expression\n                      | ID DIV_ASS expression\n                      | ID IDIV_ASS expression\n                      | ID MOD_ASS expression\n    expression : condition\n                  | ternary_condition\n                  | term\n                  | NULL\n            term : factor\n    factor : NUMBER\n              | ID\n              | STRING \n              | ID LBRACKET expression RBRACKET\n        factor : LPAREN expression RPAREN list : list COMMA factor\n             | factor\n             |  '
    
_lr_action_items = {'error':([0,],[3,]),'COMMENT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,98,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,144,145,147,150,151,154,155,156,160,163,],[18,18,18,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,-43,-77,-75,-76,-78,-59,-57,-41,-37,-79,-80,-82,18,-4,-67,-68,-81,-53,-60,-58,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-69,-70,-71,-72,-73,-74,-84,-42,-40,18,-63,-64,-65,-66,-54,-83,18,-46,-23,-24,-48,-49,-22,-44,-45,-56,-39,-47,-38,-55,]),'NEWLINE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,98,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,144,145,147,150,151,154,155,156,160,163,],[19,19,19,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,-43,-77,-75,-76,-78,-59,-57,-41,-37,-79,-80,-82,19,-4,-67,-68,-81,-53,-60,-58,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-69,-70,-71,-72,-73,-74,-84,-42,-40,19,-63,-64,-65,-66,-54,-83,19,-46,-23,-24,-48,-49,-22,-44,-45,-56,-39,-47,-38,-55,]),'FUNCTION':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,98,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,144,145,147,150,151,154,155,156,160,163,],[20,20,20,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,-43,-77,-75,-76,-78,-59,-57,-41,-37,-79,-80,-82,20,-4,-67,-68,-81,-53,-60,-58,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-69,-70,-71,-72,-73,-74,-84,-42,-40,20,-63,-64,-65,-66,-54,-83,20,-46,-23,-24,-48,-49,-22,-44,-45,-56,-39,-47,-38,-55,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,130,133,135,136,137,138,139,140,144,145,147,148,150,151,154,155,156,159,160,163,],[21,21,21,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,56,-81,68,-43,-77,-75,-76,-78,68,-59,-57,-41,68,-37,-79,-80,-82,21,-4,68,68,-67,-68,68,68,68,68,68,68,68,68,95,68,68,68,68,68,68,68,68,-81,68,68,68,68,116,68,121,68,-53,-60,-58,-36,68,-61,68,-62,-28,-29,-30,-31,-32,-33,-34,-35,95,-21,68,-69,-70,-71,-72,-73,-74,-84,-42,-40,21,-63,-64,-65,-66,-54,95,-83,21,-46,-23,-24,68,68,-48,-49,-22,68,-44,-45,-56,-39,-47,68,-38,-55,]),'NULL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,32,33,34,35,36,37,38,40,41,42,43,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,68,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,139,140,144,145,147,150,151,154,155,156,159,160,163,],[27,27,27,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,27,-43,-77,-75,-76,-78,27,-59,-57,-41,27,-37,-79,-80,-82,27,-4,-67,-68,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-81,27,27,-53,-60,-58,-36,27,-61,27,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-69,-70,-71,-72,-73,-74,-84,-42,-40,27,-63,-64,-65,-66,-54,-83,27,-46,-23,-24,27,27,-48,-49,-22,-44,-45,-56,-39,-47,27,-38,-55,]),'SCAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,98,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,144,145,147,150,151,154,155,156,160,163,],[28,28,28,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,-43,-77,-75,-76,-78,-59,-57,-41,-37,-79,-80,-82,28,-4,-67,-68,-81,-53,-60,-58,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-69,-70,-71,-72,-73,-74,-84,-42,-40,28,-63,-64,-65,-66,-54,-83,28,-46,-23,-24,-48,-49,-22,-44,-45,-56,-39,-47,-38,-55,]),'PRINT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,98,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,144,145,147,150,151,154,155,156,160,163,],[29,29,29,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,-43,-77,-75,-76,-78,-59,-57,-41,-37,-79,-80,-82,29,-4,-67,-68,-81,-53,-60,-58,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-69,-70,-71,-72,-73,-74,-84,-42,-40,29,-63,-64,-65,-66,-54,-83,29,-46,-23,-24,-48,-49,-22,-44,-45,-56,-39,-47,-38,-55,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,98,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,144,145,147,150,151,154,155,156,160,163,],[30,30,30,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,-43,-77,-75,-76,-78,-59,-57,-41,-37,-79,-80,-82,30,-4,-67,-68,-81,-53,-60,-58,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-69,-70,-71,-72,-73,-74,-84,-42,-40,30,-63,-64,-65,-66,-54,-83,30,-46,-23,-24,-48,-49,-22,-44,-45,-56,-39,-47,-38,-55,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,98,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,144,145,147,150,151,154,155,156,160,163,],[31,31,31,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,-43,-77,-75,-76,-78,-59,-57,-41,-37,-79,-80,-82,31,-4,-67,-68,-81,-53,-60,-58,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-69,-70,-71,-72,-73,-74,-84,-42,-40,31,-63,-64,-65,-66,-54,-83,31,-46,-23,-24,-48,-49,-22,-44,-45,-56,-39,-47,-38,-55,]),'RETURN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,98,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,144,145,147,150,151,154,155,156,160,163,],[32,32,32,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,-43,-77,-75,-76,-78,-59,-57,-41,-37,-79,-80,-82,32,-4,-67,-68,-81,-53,-60,-58,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-69,-70,-71,-72,-73,-74,-84,-42,-40,32,-63,-64,-65,-66,-54,-83,32,-46,-23,-24,-48,-49,-22,-44,-45,-56,-39,-47,-38,-55,]),'BREAK':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,98,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,144,145,147,150,151,154,155,156,160,163,],[33,33,33,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,-43,-77,-75,-76,-78,-59,-57,-41,-37,-79,-80,-82,33,-4,-67,-68,-81,-53,-60,-58,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-69,-70,-71,-72,-73,-74,-84,-42,-40,33,-63,-64,-65,-66,-54,-83,33,-46,-23,-24,-48,-49,-22,-44,-45,-56,-39,-47,-38,-55,]),'CONTINUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,98,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,144,145,147,150,151,154,155,156,160,163,],[34,34,34,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,-43,-77,-75,-76,-78,-59,-57,-41,-37,-79,-80,-82,34,-4,-67,-68,-81,-53,-60,-58,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-69,-70,-71,-72,-73,-74,-84,-42,-40,34,-63,-64,-65,-66,-54,-83,34,-46,-23,-24,-48,-49,-22,-44,-45,-56,-39,-47,-38,-55,]),'LNOT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,32,33,34,35,36,37,38,40,41,42,43,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,68,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,139,140,144,145,147,150,151,154,155,156,159,160,163,],[36,36,36,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,36,-43,-77,-75,-76,-78,36,-59,-57,-41,36,-37,-79,-80,-82,36,-4,-67,-68,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-81,36,36,-53,-60,-58,-36,36,-61,36,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-69,-70,-71,-72,-73,-74,-84,-42,-40,36,-63,-64,-65,-66,-54,-83,36,-46,-23,-24,36,36,-48,-49,-22,-44,-45,-56,-39,-47,36,-38,-55,]),'BOOLEAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,32,33,34,35,36,37,38,40,41,42,43,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,68,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,139,140,144,145,147,150,151,154,155,156,159,160,163,],[37,37,37,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,37,-43,-77,-75,-76,-78,37,-59,-57,-41,37,-37,-79,-80,-82,37,-4,-67,-68,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-81,37,37,-53,-60,-58,-36,37,-61,37,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-69,-70,-71,-72,-73,-74,-84,-42,-40,37,-63,-64,-65,-66,-54,-83,37,-46,-23,-24,37,37,-48,-49,-22,-44,-45,-56,-39,-47,37,-38,-55,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,68,70,71,72,73,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,99,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,139,140,144,145,147,148,150,151,154,155,156,159,160,163,],[22,22,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,57,22,-43,-77,-75,-76,-78,74,75,76,77,22,-59,-57,-41,22,-37,-79,82,-80,-82,22,-4,84,84,-67,-68,22,22,22,22,22,22,22,22,94,22,22,22,22,22,22,22,22,-81,84,84,84,84,22,22,-53,-60,-58,-36,22,-61,22,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,84,-69,-70,-71,-72,-73,-74,-84,-42,-40,22,-63,-64,-65,-66,-54,-83,22,-46,-23,-24,22,22,-48,-49,-22,84,-44,-45,-56,-39,-47,22,-38,-55,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,69,78,79,80,81,83,85,86,87,88,89,90,91,92,93,98,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,144,145,147,150,151,154,155,156,160,163,],[39,39,39,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,-43,-77,-75,-76,-78,-59,-57,-41,-37,-79,-80,-82,39,-4,-67,-68,-81,39,-53,-60,-58,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-69,-70,-71,-72,-73,-74,-84,-42,-40,39,-63,-64,-65,-66,-54,-83,39,-46,-23,-24,-48,-49,-22,-44,-45,-56,-39,-47,-38,-55,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,68,70,71,72,73,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,99,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,139,140,144,145,147,148,150,151,154,155,156,159,160,163,],[40,40,40,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,40,-43,-77,-75,-76,-78,40,-59,-57,-41,40,-37,-79,-80,-82,40,-4,40,40,-67,-68,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-81,40,40,40,40,40,40,-53,-60,-58,-36,40,-61,40,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,40,-69,-70,-71,-72,-73,-74,-84,-42,-40,40,-63,-64,-65,-66,-54,-83,40,-46,-23,-24,40,40,-48,-49,-22,40,-44,-45,-56,-39,-47,40,-38,-55,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,68,70,71,72,73,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,99,101,102,103,104,105,106,108,109,110,111,112,113,114,115,124,133,135,136,137,138,139,140,144,145,147,148,150,151,154,155,156,159,160,163,],[41,41,41,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,41,-43,-77,-75,-76,-78,41,-59,-57,-41,41,-37,-79,-80,-82,41,-4,41,41,-67,-68,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-81,41,41,41,41,41,41,-53,-60,-58,-36,41,-61,41,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,41,-69,-70,-71,-72,-73,-74,-84,-42,-40,41,-63,-64,-65,-66,-54,-83,41,-46,-23,-24,41,41,-48,-49,-22,41,-44,-45,-56,-39,-47,41,-38,-55,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,98,101,102,103,104,105,106,108,109,110,112,113,114,115,124,133,137,138,144,145,147,150,154,155,156,160,163,],[0,-2,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,-43,-77,-75,-76,-78,-59,-57,-41,-37,-79,-80,-82,-1,-4,-67,-68,-81,-53,-60,-58,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-69,-70,-71,-72,-73,-74,-84,-42,-40,-63,-64,-65,-66,-54,-83,-23,-24,-48,-49,-22,-44,-56,-39,-47,-38,-55,]),'RBRACE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,98,101,102,103,104,105,106,108,109,110,112,113,114,115,124,133,135,136,137,138,144,145,147,150,151,154,155,156,160,163,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-81,-43,-77,-75,-76,-78,-59,-57,-41,-37,-79,-80,-82,-67,-68,-81,-53,-60,-58,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-69,-70,-71,-72,-73,-74,-84,-42,-40,-63,-64,-65,-66,-54,-83,150,-46,-23,-24,-48,-49,-22,-44,-45,-56,-39,-47,-38,-55,]),'SUM':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,98,100,101,102,103,104,105,106,108,112,113,114,115,119,122,123,125,126,133,150,153,160,161,],[44,-81,-77,-75,-76,-78,-37,-79,-80,-82,-67,-68,-75,44,-81,44,44,-61,-62,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-84,-63,-64,-65,-66,44,-75,44,-75,44,-83,-44,-75,-38,44,]),'SUB':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,98,100,101,102,103,104,105,106,108,112,113,114,115,119,122,123,125,126,133,150,153,160,161,],[45,-81,-77,-75,-76,-78,-37,-79,-80,-82,-67,-68,-75,45,-81,45,45,-61,-62,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-84,-63,-64,-65,-66,45,-75,45,-75,45,-83,-44,-75,-38,45,]),'DECR':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,98,100,101,102,103,104,105,106,108,112,113,114,115,119,122,123,125,126,133,150,153,160,161,],[46,-81,-77,-75,-76,-78,-37,-79,-80,-82,-67,-68,-75,46,-81,46,46,-61,-62,-28,-29,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-84,-63,-64,-65,-66,46,-75,46,-75,46,-83,-44,-75,-38,46,]),'INCR':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,98,100,101,102,103,104,105,106,108,112,113,114,115,119,122,123,125,126,133,150,153,160,161,],[47,-81,-77,-75,-76,-78,-37,-79,-80,-82,-67,-68,-75,47,-81,47,47,-61,-62,-28,-29,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-84,-63,-64,-65,-66,47,-75,47,-75,47,-83,-44,-75,-38,47,]),'GT':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,98,100,101,102,103,104,105,106,108,112,113,114,115,119,122,123,125,126,133,150,153,160,161,],[48,-81,-77,-75,-76,-78,-37,-79,-80,-82,-67,-68,-75,48,-81,48,48,-61,-62,None,None,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-84,-63,-64,-65,-66,48,-75,48,-75,48,-83,-44,-75,-38,48,]),'LT':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,98,100,101,102,103,104,105,106,108,112,113,114,115,119,122,123,125,126,133,150,153,160,161,],[49,-81,-77,-75,-76,-78,-37,-79,-80,-82,-67,-68,-75,49,-81,49,49,-61,-62,None,None,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-84,-63,-64,-65,-66,49,-75,49,-75,49,-83,-44,-75,-38,49,]),'GE':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,98,100,101,102,103,104,105,106,108,112,113,114,115,119,122,123,125,126,133,150,153,160,161,],[50,-81,-77,-75,-76,-78,-37,-79,-80,-82,-67,-68,-75,50,-81,50,50,-61,-62,-28,-29,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-84,-63,-64,-65,-66,50,-75,50,-75,50,-83,-44,-75,-38,50,]),'LE':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,98,100,101,102,103,104,105,106,108,112,113,114,115,119,122,123,125,126,133,150,153,160,161,],[51,-81,-77,-75,-76,-78,-37,-79,-80,-82,-67,-68,-75,51,-81,51,51,-61,-62,-28,-29,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-84,-63,-64,-65,-66,51,-75,51,-75,51,-83,-44,-75,-38,51,]),'NE':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,98,100,101,102,103,104,105,106,108,112,113,114,115,119,122,123,125,126,133,150,153,160,161,],[52,-81,-77,-75,-76,-78,-37,-79,-80,-82,-67,-68,-75,52,-81,52,52,-61,-62,-28,-29,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-84,-63,-64,-65,-66,52,-75,52,-75,52,-83,-44,-75,-38,52,]),'EQ':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,98,100,101,102,103,104,105,106,108,112,113,114,115,119,122,123,125,126,133,150,153,160,161,],[53,-81,-77,-75,-76,-78,-37,-79,-80,-82,-67,-68,-75,53,-81,53,53,-61,-62,-28,-29,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-84,-63,-64,-65,-66,53,-75,53,-75,53,-83,-44,-75,-38,53,]),'LAND':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,98,100,101,102,103,104,105,106,108,112,113,114,115,119,122,123,125,126,133,150,153,160,161,],[54,-81,-77,-75,-76,-78,-37,-79,-80,-82,-67,-68,-75,54,-81,54,54,-61,-62,-28,-29,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-84,-63,-64,-65,-66,54,-75,54,-75,54,-83,-44,-75,-38,54,]),'LOR':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,98,100,101,102,103,104,105,106,108,112,113,114,115,119,122,123,125,126,133,150,153,160,161,],[55,-81,-77,-75,-76,-78,-37,-79,-80,-82,-67,-68,-75,55,-81,55,55,-61,-62,-28,-29,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-84,-63,-64,-65,-66,55,-75,55,-75,55,-83,-44,-75,-38,55,]),'ASSIGN':([21,121,],[58,58,]),'SUM_ASS':([21,],[60,]),'SUB_ASS':([21,],[61,]),'MUL_ASS':([21,],[62,]),'DIV_ASS':([21,],[63,]),'IDIV_ASS':([21,],[64,]),'MOD_ASS':([21,],[65,]),'MUL':([21,24,38,40,41,68,83,85,108,112,113,114,115,133,],[-81,70,-79,-80,-82,-81,70,70,-84,-63,-64,-65,-66,-83,]),'DIV':([21,24,38,40,41,68,83,85,108,112,113,114,115,133,],[-81,71,-79,-80,-82,-81,71,71,-84,-63,-64,-65,-66,-83,]),'IDIV':([21,24,38,40,41,68,83,85,108,112,113,114,115,133,],[-81,72,-79,-80,-82,-81,72,72,-84,-63,-64,-65,-66,-83,]),'MOD':([21,24,38,40,41,68,83,85,108,112,113,114,115,133,],[-81,73,-79,-80,-82,-81,73,73,-84,-63,-64,-65,-66,-83,]),'LBRACKET':([21,58,68,],[59,99,59,]),'ELSE':([23,35,110,150,155,],[69,-41,-40,-44,-39,]),'RPAREN':([24,25,26,27,37,38,40,41,46,47,66,67,68,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,108,112,113,114,115,116,117,118,119,122,125,126,127,133,146,150,152,160,161,],[-77,-75,-76,-78,-37,-79,-80,-82,-67,-68,107,108,-81,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,128,-52,129,-51,-84,-63,-64,-65,-66,137,138,-25,-27,141,142,108,143,-83,-50,-44,-26,-38,162,]),'SEMI':([24,25,26,27,33,34,37,38,40,41,46,47,68,78,81,83,85,86,87,88,89,90,91,92,93,98,108,112,113,114,115,120,129,133,147,150,153,160,],[-77,-75,-76,-78,79,80,-37,-79,-80,-82,-67,-68,-81,124,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,-21,-84,-63,-64,-65,-66,140,145,-83,-22,-44,159,-38,]),'RBRACKET':([24,25,26,27,37,38,40,41,46,47,68,81,83,85,86,87,88,89,90,91,92,93,99,100,108,112,113,114,115,131,132,133,150,157,160,],[-77,-75,-76,-78,-37,-79,-80,-82,-67,-68,-81,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,-87,133,-84,-63,-64,-65,-66,147,-86,-83,-44,-85,-38,]),'COMMA':([24,25,26,27,37,38,40,41,46,47,68,81,83,85,86,87,88,89,90,91,92,93,95,96,97,99,108,112,113,114,115,117,118,119,127,131,132,133,146,150,152,157,160,],[-77,-75,-76,-78,-37,-79,-80,-82,-67,-68,-81,-36,-61,-62,-28,-29,-30,-31,-32,-33,-34,-35,-52,130,-51,-87,-84,-63,-64,-65,-66,139,-25,-27,130,148,-86,-83,-50,-44,-26,-85,-38,]),'LBRACE':([69,128,134,141,142,143,158,162,],[111,111,111,111,111,111,111,111,]),'QUES':([107,],[134,]),'COLON':([149,150,],[158,-44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,1,],[2,42,]),'command':([0,1,2,42,111,135,],[4,4,43,43,136,151,]),'function_def':([0,1,2,42,111,135,],[5,5,5,5,5,5,]),'function_call':([0,1,2,42,111,135,],[6,6,6,6,6,6,]),'conditional':([0,1,2,42,111,135,],[7,7,7,7,7,7,]),'expression':([0,1,2,22,32,36,42,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,75,77,82,84,111,135,139,140,159,],[8,8,8,67,78,81,8,86,87,88,89,90,91,92,93,98,100,101,102,103,104,105,106,119,123,123,126,8,8,119,123,161,]),'assignment':([0,1,2,42,76,111,135,],[9,9,9,9,120,9,9,]),'expression_ass':([0,1,2,42,111,135,],[10,10,10,10,10,10,]),'input':([0,1,2,42,111,135,],[11,11,11,11,11,11,]),'output':([0,1,2,42,111,135,],[12,12,12,12,12,12,]),'for_loop':([0,1,2,42,111,135,],[13,13,13,13,13,13,]),'while_loop':([0,1,2,42,111,135,],[14,14,14,14,14,14,]),'return':([0,1,2,42,111,135,],[15,15,15,15,15,15,]),'break':([0,1,2,42,111,135,],[16,16,16,16,16,16,]),'continue':([0,1,2,42,111,135,],[17,17,17,17,17,17,]),'if_elif_bloc':([0,1,2,42,111,135,],[23,23,23,23,23,23,]),'term':([0,1,2,22,32,36,42,44,45,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,75,77,82,84,111,135,139,140,159,],[24,24,24,24,24,24,24,83,85,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'condition':([0,1,2,22,32,36,42,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,75,77,82,84,111,135,139,140,159,],[25,25,25,66,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,122,125,25,25,25,25,153,25,]),'ternary_condition':([0,1,2,22,32,36,42,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,75,77,82,84,111,135,139,140,159,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'if_bloc':([0,1,2,42,69,111,135,],[35,35,35,35,110,35,35,]),'factor':([0,1,2,22,32,36,42,44,45,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,70,71,72,73,75,77,82,84,99,111,135,139,140,148,159,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,112,113,114,115,38,38,38,38,132,38,38,38,38,157,38,]),'param_list':([57,94,],[96,127,]),'param':([57,94,130,],[97,97,146,]),'bloc':([69,128,134,141,142,143,158,162,],[109,144,149,154,155,156,160,163,]),'plist':([75,],[117,]),'pitem':([75,139,],[118,152,]),'list':([99,],[131,]),'stat_bloc':([111,],[135,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program statement','program',2,'p_program','Parsing.py',12),
  ('program -> statement','program',1,'p_program','Parsing.py',13),
  ('program -> error','program',1,'p_program_error','Parsing.py',16),
  ('statement -> statement command','statement',2,'p_statement','Parsing.py',21),
  ('statement -> command','statement',1,'p_statement','Parsing.py',22),
  ('command -> function_def','command',1,'p_command','Parsing.py',26),
  ('command -> function_call','command',1,'p_command','Parsing.py',27),
  ('command -> conditional','command',1,'p_command','Parsing.py',28),
  ('command -> expression','command',1,'p_command','Parsing.py',29),
  ('command -> assignment','command',1,'p_command','Parsing.py',30),
  ('command -> expression_ass','command',1,'p_command','Parsing.py',31),
  ('command -> input','command',1,'p_command','Parsing.py',32),
  ('command -> output','command',1,'p_command','Parsing.py',33),
  ('command -> for_loop','command',1,'p_command','Parsing.py',34),
  ('command -> while_loop','command',1,'p_command','Parsing.py',35),
  ('command -> return','command',1,'p_command','Parsing.py',36),
  ('command -> break','command',1,'p_command','Parsing.py',37),
  ('command -> continue','command',1,'p_command','Parsing.py',38),
  ('command -> COMMENT','command',1,'p_command','Parsing.py',39),
  ('command -> NEWLINE','command',1,'p_command','Parsing.py',40),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','Parsing.py',46),
  ('assignment -> ID ASSIGN LBRACKET list RBRACKET','assignment',5,'p_assignment','Parsing.py',47),
  ('input -> SCAN LPAREN ID RPAREN','input',4,'p_input','Parsing.py',57),
  ('output -> PRINT LPAREN plist RPAREN','output',4,'p_output','Parsing.py',62),
  ('plist -> pitem','plist',1,'p_plist','Parsing.py',69),
  ('plist -> plist COMMA pitem','plist',3,'p_plist','Parsing.py',70),
  ('pitem -> expression','pitem',1,'p_item_expr','Parsing.py',78),
  ('condition -> expression GT expression','condition',3,'p_condition','Parsing.py',82),
  ('condition -> expression LT expression','condition',3,'p_condition','Parsing.py',83),
  ('condition -> expression GE expression','condition',3,'p_condition','Parsing.py',84),
  ('condition -> expression LE expression','condition',3,'p_condition','Parsing.py',85),
  ('condition -> expression NE expression','condition',3,'p_condition','Parsing.py',86),
  ('condition -> expression EQ expression','condition',3,'p_condition','Parsing.py',87),
  ('condition -> expression LAND expression','condition',3,'p_condition','Parsing.py',88),
  ('condition -> expression LOR expression','condition',3,'p_condition','Parsing.py',89),
  ('condition -> LNOT expression','condition',2,'p_condition','Parsing.py',90),
  ('condition -> BOOLEAN','condition',1,'p_condition','Parsing.py',91),
  ('ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc','ternary_condition',7,'p_ternary','Parsing.py',100),
  ('if_bloc -> IF LPAREN condition RPAREN bloc','if_bloc',5,'p_if_bloc','Parsing.py',103),
  ('if_elif_bloc -> if_elif_bloc ELSE if_bloc','if_elif_bloc',3,'p_if_elif_bloc','Parsing.py',106),
  ('if_elif_bloc -> if_bloc','if_elif_bloc',1,'p_if_elif_bloc','Parsing.py',107),
  ('conditional -> if_elif_bloc ELSE bloc','conditional',3,'p_conditional','Parsing.py',114),
  ('conditional -> if_elif_bloc','conditional',1,'p_conditional','Parsing.py',115),
  ('bloc -> LBRACE stat_bloc RBRACE','bloc',3,'p_bloc','Parsing.py',122),
  ('stat_bloc -> stat_bloc command','stat_bloc',2,'p_stat_bloc','Parsing.py',126),
  ('stat_bloc -> command','stat_bloc',1,'p_stat_bloc','Parsing.py',127),
  ('function_def -> FUNCTION ID LPAREN param_list RPAREN bloc','function_def',6,'p_function_def','Parsing.py',136),
  ('function_def -> FUNCTION ID LPAREN RPAREN bloc','function_def',5,'p_function_def','Parsing.py',137),
  ('function_call -> ID LPAREN param_list RPAREN SEMI','function_call',5,'p_function_call','Parsing.py',143),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','Parsing.py',146),
  ('param_list -> param','param_list',1,'p_param_list','Parsing.py',147),
  ('param -> ID','param',1,'p_param','Parsing.py',155),
  ('return -> RETURN expression','return',2,'p_return','Parsing.py',158),
  ('return -> RETURN expression SEMI','return',3,'p_return','Parsing.py',159),
  ('for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc','for_loop',9,'p_for_loop','Parsing.py',164),
  ('while_loop -> WHILE LPAREN condition RPAREN bloc','while_loop',5,'p_while_loop','Parsing.py',167),
  ('continue -> CONTINUE','continue',1,'p_continue','Parsing.py',170),
  ('continue -> CONTINUE SEMI','continue',2,'p_continue','Parsing.py',171),
  ('break -> BREAK','break',1,'p_break','Parsing.py',174),
  ('break -> BREAK SEMI','break',2,'p_break','Parsing.py',175),
  ('expression -> expression SUM term','expression',3,'p_binary_operators','Parsing.py',179),
  ('expression -> expression SUB term','expression',3,'p_binary_operators','Parsing.py',180),
  ('term -> term MUL factor','term',3,'p_binary_operators','Parsing.py',181),
  ('term -> term DIV factor','term',3,'p_binary_operators','Parsing.py',182),
  ('term -> term IDIV factor','term',3,'p_binary_operators','Parsing.py',183),
  ('term -> term MOD factor','term',3,'p_binary_operators','Parsing.py',184),
  ('expression -> expression DECR','expression',2,'p_unary_operators','Parsing.py',199),
  ('expression -> expression INCR','expression',2,'p_unary_operators','Parsing.py',200),
  ('expression_ass -> ID SUM_ASS expression','expression_ass',3,'p_binary_operators_ass','Parsing.py',207),
  ('expression_ass -> ID SUB_ASS expression','expression_ass',3,'p_binary_operators_ass','Parsing.py',208),
  ('expression_ass -> ID MUL_ASS expression','expression_ass',3,'p_binary_operators_ass','Parsing.py',209),
  ('expression_ass -> ID DIV_ASS expression','expression_ass',3,'p_binary_operators_ass','Parsing.py',210),
  ('expression_ass -> ID IDIV_ASS expression','expression_ass',3,'p_binary_operators_ass','Parsing.py',211),
  ('expression_ass -> ID MOD_ASS expression','expression_ass',3,'p_binary_operators_ass','Parsing.py',212),
  ('expression -> condition','expression',1,'p_expression','Parsing.py',227),
  ('expression -> ternary_condition','expression',1,'p_expression','Parsing.py',228),
  ('expression -> term','expression',1,'p_expression','Parsing.py',229),
  ('expression -> NULL','expression',1,'p_expression','Parsing.py',230),
  ('term -> factor','term',1,'p_term_factor','Parsing.py',234),
  ('factor -> NUMBER','factor',1,'p_factor_num','Parsing.py',238),
  ('factor -> ID','factor',1,'p_factor_num','Parsing.py',239),
  ('factor -> STRING','factor',1,'p_factor_num','Parsing.py',240),
  ('factor -> ID LBRACKET expression RBRACKET','factor',4,'p_factor_num','Parsing.py',241),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','Parsing.py',253),
  ('list -> list COMMA factor','list',3,'p_list','Parsing.py',256),
  ('list -> factor','list',1,'p_list','Parsing.py',257),
  ('list -> <empty>','list',0,'p_list','Parsing.py',258),
]
