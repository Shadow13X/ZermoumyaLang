
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLTGTleftSUMSUBleftMULDIVASSIGN BOOLEAN BREAK COLON COMMA COMMENT CONTINUE DECR DIV DIV_ASS ELSE EQ FOR FUNCTION GE GT ID IDIV IDIV_ASS IF INCR LAND LBRACE LBRACKET LE LNOT LOR LPAREN LT MOD MOD_ASS MUL MUL_ASS NE NEWLINE NULL NUMBER PRINT QUES RBRACE RBRACKET RESERVED RETURN RPAREN SCAN SEMI STRING SUB SUB_ASS SUM SUM_ASS WHILEprogram : program statement\n               | statementprogram : errorstatement : statement command\n                 | command\n            command : function_def\n               | function_call\n               | conditional\n               | expression\n               | assignment\n               | expression_ass\n               | input\n               | output\n               | for_loop\n               | while_loop\n               | return\n               | break\n               | continue\n               | COMMENT\n               | NEWLINE\n            assignment : ID ASSIGN expression\n                  | ID ASSIGN LBRACKET list RBRACKET\n            input : SCAN LPAREN ID RPAREN\n            output : PRINT LPAREN plist RPAREN\n            plist : pitem\n             | plist COMMA pitem\n            pitem : expressioncondition : expression GT expression\n                 | expression LT expression\n                 | expression GE expression\n                 | expression LE expression\n                 | expression NE expression\n                 | expression EQ expression\n                 | expression LAND expression\n                 | expression LOR expression\n                 | LNOT expression\n                 | BOOLEAN\n                ternary_condition : LPAREN condition RPAREN QUES bloc COLON blocif_bloc : IF LPAREN condition RPAREN blocif_elif_bloc : if_elif_bloc ELSE if_bloc\n                    | if_blocconditional : if_elif_bloc ELSE bloc\n                   | if_elif_bloc\n                bloc : LBRACE stat_bloc RBRACE\n        stat_bloc : stat_bloc command\n                 | command\n            function_def : FUNCTION ID LPAREN param_list RPAREN bloc\n                    | FUNCTION ID LPAREN RPAREN blocfunction_call : ID LPAREN param_list_call RPAREN\n                     | ID LPAREN RPAREN param_list_call : param_list_call COMMA param_call\n                       | param_call\n            param_call : factorparam_list : param_list COMMA param\n                  | param\n            param : IDreturn : RETURN expression\n              | RETURN expression SEMI\n    for_loop : FOR LPAREN assignment SEMI condition SEMI expression RPAREN blocwhile_loop : WHILE LPAREN condition RPAREN bloccontinue : CONTINUE\n                | CONTINUE SEMIbreak : BREAK\n             | BREAK SEMIexpression : expression SUM term\n                  | expression SUB term\n       term       : term MUL factor\n                  | term DIV factor\n                  | term IDIV factor\n                  | term MOD factor\n    expression : expression DECR\n                  | expression INCR\n    expression_ass : ID SUM_ASS expression\n                      | ID SUB_ASS expression\n                      | ID MUL_ASS expression\n                      | ID DIV_ASS expression\n                      | ID IDIV_ASS expression\n                      | ID MOD_ASS expression\n    expression : condition\n                  | ternary_condition\n                  | term\n                  | NULL\n            term : factor\n    factor : NUMBER\n              | ID\n              | STRING \n              | ID LBRACKET expression RBRACKET\n        factor : LPAREN expression RPAREN list : list COMMA factor\n             | factor\n             |  '
    
_lr_action_items = {'error':([0,],[3,]),'COMMENT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,96,99,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,136,138,139,140,141,148,150,153,154,157,158,159,164,167,],[18,18,18,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,-43,-81,-79,-80,-82,-63,-61,-41,-37,-83,-84,-86,18,-4,-71,-72,-85,-57,-64,-62,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,-73,-74,-75,-76,-77,-78,-88,-42,-40,18,-67,-68,-69,-70,-58,-49,-87,18,-46,-23,-24,-48,-22,-44,-45,-60,-39,-47,-38,-59,]),'NEWLINE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,96,99,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,136,138,139,140,141,148,150,153,154,157,158,159,164,167,],[19,19,19,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,-43,-81,-79,-80,-82,-63,-61,-41,-37,-83,-84,-86,19,-4,-71,-72,-85,-57,-64,-62,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,-73,-74,-75,-76,-77,-78,-88,-42,-40,19,-67,-68,-69,-70,-58,-49,-87,19,-46,-23,-24,-48,-22,-44,-45,-60,-39,-47,-38,-59,]),'FUNCTION':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,96,99,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,136,138,139,140,141,148,150,153,154,157,158,159,164,167,],[20,20,20,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,-43,-81,-79,-80,-82,-63,-61,-41,-37,-83,-84,-86,20,-4,-71,-72,-85,-57,-64,-62,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,-73,-74,-75,-76,-77,-78,-88,-42,-40,20,-67,-68,-69,-70,-58,-49,-87,20,-46,-23,-24,-48,-22,-44,-45,-60,-39,-47,-38,-59,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,133,136,138,139,140,141,142,143,147,148,150,151,153,154,157,158,159,163,164,167,],[21,21,21,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,56,-85,68,-43,-81,-79,-80,-82,68,-63,-61,-41,68,-37,-83,-84,-86,21,-4,68,68,-71,-72,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-85,68,68,68,68,117,68,122,68,-57,-64,-62,-36,68,-65,68,-66,-28,-29,-30,-31,-32,-33,-34,-35,128,-50,-21,68,-73,-74,-75,-76,-77,-78,-88,-42,-40,21,-67,-68,-69,-70,-58,-49,68,-87,21,-46,-23,-24,68,68,128,-48,-22,68,-44,-45,-60,-39,-47,68,-38,-59,]),'NULL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,32,33,34,35,36,37,38,40,41,42,43,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,68,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,99,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,136,138,139,140,141,142,143,148,150,153,154,157,158,159,163,164,167,],[27,27,27,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,27,-43,-81,-79,-80,-82,27,-63,-61,-41,27,-37,-83,-84,-86,27,-4,-71,-72,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-85,27,27,-57,-64,-62,-36,27,-65,27,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,-73,-74,-75,-76,-77,-78,-88,-42,-40,27,-67,-68,-69,-70,-58,-49,-87,27,-46,-23,-24,27,27,-48,-22,-44,-45,-60,-39,-47,27,-38,-59,]),'SCAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,96,99,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,136,138,139,140,141,148,150,153,154,157,158,159,164,167,],[28,28,28,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,-43,-81,-79,-80,-82,-63,-61,-41,-37,-83,-84,-86,28,-4,-71,-72,-85,-57,-64,-62,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,-73,-74,-75,-76,-77,-78,-88,-42,-40,28,-67,-68,-69,-70,-58,-49,-87,28,-46,-23,-24,-48,-22,-44,-45,-60,-39,-47,-38,-59,]),'PRINT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,96,99,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,136,138,139,140,141,148,150,153,154,157,158,159,164,167,],[29,29,29,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,-43,-81,-79,-80,-82,-63,-61,-41,-37,-83,-84,-86,29,-4,-71,-72,-85,-57,-64,-62,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,-73,-74,-75,-76,-77,-78,-88,-42,-40,29,-67,-68,-69,-70,-58,-49,-87,29,-46,-23,-24,-48,-22,-44,-45,-60,-39,-47,-38,-59,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,96,99,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,136,138,139,140,141,148,150,153,154,157,158,159,164,167,],[30,30,30,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,-43,-81,-79,-80,-82,-63,-61,-41,-37,-83,-84,-86,30,-4,-71,-72,-85,-57,-64,-62,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,-73,-74,-75,-76,-77,-78,-88,-42,-40,30,-67,-68,-69,-70,-58,-49,-87,30,-46,-23,-24,-48,-22,-44,-45,-60,-39,-47,-38,-59,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,96,99,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,136,138,139,140,141,148,150,153,154,157,158,159,164,167,],[31,31,31,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,-43,-81,-79,-80,-82,-63,-61,-41,-37,-83,-84,-86,31,-4,-71,-72,-85,-57,-64,-62,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,-73,-74,-75,-76,-77,-78,-88,-42,-40,31,-67,-68,-69,-70,-58,-49,-87,31,-46,-23,-24,-48,-22,-44,-45,-60,-39,-47,-38,-59,]),'RETURN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,96,99,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,136,138,139,140,141,148,150,153,154,157,158,159,164,167,],[32,32,32,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,-43,-81,-79,-80,-82,-63,-61,-41,-37,-83,-84,-86,32,-4,-71,-72,-85,-57,-64,-62,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,-73,-74,-75,-76,-77,-78,-88,-42,-40,32,-67,-68,-69,-70,-58,-49,-87,32,-46,-23,-24,-48,-22,-44,-45,-60,-39,-47,-38,-59,]),'BREAK':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,96,99,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,136,138,139,140,141,148,150,153,154,157,158,159,164,167,],[33,33,33,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,-43,-81,-79,-80,-82,-63,-61,-41,-37,-83,-84,-86,33,-4,-71,-72,-85,-57,-64,-62,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,-73,-74,-75,-76,-77,-78,-88,-42,-40,33,-67,-68,-69,-70,-58,-49,-87,33,-46,-23,-24,-48,-22,-44,-45,-60,-39,-47,-38,-59,]),'CONTINUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,96,99,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,136,138,139,140,141,148,150,153,154,157,158,159,164,167,],[34,34,34,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,-43,-81,-79,-80,-82,-63,-61,-41,-37,-83,-84,-86,34,-4,-71,-72,-85,-57,-64,-62,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,-73,-74,-75,-76,-77,-78,-88,-42,-40,34,-67,-68,-69,-70,-58,-49,-87,34,-46,-23,-24,-48,-22,-44,-45,-60,-39,-47,-38,-59,]),'LNOT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,32,33,34,35,36,37,38,40,41,42,43,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,68,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,99,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,136,138,139,140,141,142,143,148,150,153,154,157,158,159,163,164,167,],[36,36,36,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,36,-43,-81,-79,-80,-82,36,-63,-61,-41,36,-37,-83,-84,-86,36,-4,-71,-72,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-85,36,36,-57,-64,-62,-36,36,-65,36,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,-73,-74,-75,-76,-77,-78,-88,-42,-40,36,-67,-68,-69,-70,-58,-49,-87,36,-46,-23,-24,36,36,-48,-22,-44,-45,-60,-39,-47,36,-38,-59,]),'BOOLEAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,32,33,34,35,36,37,38,40,41,42,43,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,68,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,99,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,136,138,139,140,141,142,143,148,150,153,154,157,158,159,163,164,167,],[37,37,37,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,37,-43,-81,-79,-80,-82,37,-63,-61,-41,37,-37,-83,-84,-86,37,-4,-71,-72,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-85,37,37,-57,-64,-62,-36,37,-65,37,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,-73,-74,-75,-76,-77,-78,-88,-42,-40,37,-67,-68,-69,-70,-58,-49,-87,37,-46,-23,-24,37,37,-48,-22,-44,-45,-60,-39,-47,37,-38,-59,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,70,71,72,73,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,133,136,138,139,140,141,142,143,148,150,151,153,154,157,158,159,163,164,167,],[22,22,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,57,22,-43,-81,-79,-80,-82,74,75,76,77,22,-63,-61,-41,22,-37,-83,82,-84,-86,22,-4,84,84,-71,-72,22,22,22,22,22,22,22,22,94,84,22,22,22,22,22,22,22,22,-85,84,84,84,84,22,22,-57,-64,-62,-36,22,-65,22,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,84,-73,-74,-75,-76,-77,-78,-88,-42,-40,22,-67,-68,-69,-70,-58,-49,84,-87,22,-46,-23,-24,22,22,-48,-22,84,-44,-45,-60,-39,-47,22,-38,-59,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,69,78,79,80,81,83,85,86,87,88,89,90,91,92,93,96,99,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,136,138,139,140,141,148,150,153,154,157,158,159,164,167,],[39,39,39,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,-43,-81,-79,-80,-82,-63,-61,-41,-37,-83,-84,-86,39,-4,-71,-72,-85,39,-57,-64,-62,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,-73,-74,-75,-76,-77,-78,-88,-42,-40,39,-67,-68,-69,-70,-58,-49,-87,39,-46,-23,-24,-48,-22,-44,-45,-60,-39,-47,-38,-59,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,68,70,71,72,73,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,133,136,138,139,140,141,142,143,148,150,151,153,154,157,158,159,163,164,167,],[40,40,40,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,40,-43,-81,-79,-80,-82,40,-63,-61,-41,40,-37,-83,-84,-86,40,-4,40,40,-71,-72,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-85,40,40,40,40,40,40,-57,-64,-62,-36,40,-65,40,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,40,-73,-74,-75,-76,-77,-78,-88,-42,-40,40,-67,-68,-69,-70,-58,-49,40,-87,40,-46,-23,-24,40,40,-48,-22,40,-44,-45,-60,-39,-47,40,-38,-59,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,68,70,71,72,73,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,125,132,133,136,138,139,140,141,142,143,148,150,151,153,154,157,158,159,163,164,167,],[41,41,41,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,41,-43,-81,-79,-80,-82,41,-63,-61,-41,41,-37,-83,-84,-86,41,-4,41,41,-71,-72,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-85,41,41,41,41,41,41,-57,-64,-62,-36,41,-65,41,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,41,-73,-74,-75,-76,-77,-78,-88,-42,-40,41,-67,-68,-69,-70,-58,-49,41,-87,41,-46,-23,-24,41,41,-48,-22,41,-44,-45,-60,-39,-47,41,-38,-59,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,42,43,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,96,99,102,103,104,105,106,107,109,110,111,113,114,115,116,125,132,136,140,141,148,150,153,157,158,159,164,167,],[0,-2,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,-43,-81,-79,-80,-82,-63,-61,-41,-37,-83,-84,-86,-1,-4,-71,-72,-85,-57,-64,-62,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,-73,-74,-75,-76,-77,-78,-88,-42,-40,-67,-68,-69,-70,-58,-49,-87,-23,-24,-48,-22,-44,-60,-39,-47,-38,-59,]),'RBRACE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,33,34,35,37,38,40,41,46,47,68,78,79,80,81,83,85,86,87,88,89,90,91,92,93,96,99,102,103,104,105,106,107,109,110,111,113,114,115,116,125,132,136,138,139,140,141,148,150,153,154,157,158,159,164,167,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-85,-43,-81,-79,-80,-82,-63,-61,-41,-37,-83,-84,-86,-71,-72,-85,-57,-64,-62,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,-50,-21,-73,-74,-75,-76,-77,-78,-88,-42,-40,-67,-68,-69,-70,-58,-49,-87,153,-46,-23,-24,-48,-22,-44,-45,-60,-39,-47,-38,-59,]),'SUM':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,99,101,102,103,104,105,106,107,109,113,114,115,116,120,123,124,126,127,136,153,156,164,165,],[44,-85,-81,-79,-80,-82,-37,-83,-84,-86,-71,-72,-79,44,-85,44,44,-65,-66,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-88,-67,-68,-69,-70,44,-79,44,-79,44,-87,-44,-79,-38,44,]),'SUB':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,99,101,102,103,104,105,106,107,109,113,114,115,116,120,123,124,126,127,136,153,156,164,165,],[45,-85,-81,-79,-80,-82,-37,-83,-84,-86,-71,-72,-79,45,-85,45,45,-65,-66,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-88,-67,-68,-69,-70,45,-79,45,-79,45,-87,-44,-79,-38,45,]),'DECR':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,99,101,102,103,104,105,106,107,109,113,114,115,116,120,123,124,126,127,136,153,156,164,165,],[46,-85,-81,-79,-80,-82,-37,-83,-84,-86,-71,-72,-79,46,-85,46,46,-65,-66,-28,-29,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-88,-67,-68,-69,-70,46,-79,46,-79,46,-87,-44,-79,-38,46,]),'INCR':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,99,101,102,103,104,105,106,107,109,113,114,115,116,120,123,124,126,127,136,153,156,164,165,],[47,-85,-81,-79,-80,-82,-37,-83,-84,-86,-71,-72,-79,47,-85,47,47,-65,-66,-28,-29,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-88,-67,-68,-69,-70,47,-79,47,-79,47,-87,-44,-79,-38,47,]),'GT':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,99,101,102,103,104,105,106,107,109,113,114,115,116,120,123,124,126,127,136,153,156,164,165,],[48,-85,-81,-79,-80,-82,-37,-83,-84,-86,-71,-72,-79,48,-85,48,48,-65,-66,None,None,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-88,-67,-68,-69,-70,48,-79,48,-79,48,-87,-44,-79,-38,48,]),'LT':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,99,101,102,103,104,105,106,107,109,113,114,115,116,120,123,124,126,127,136,153,156,164,165,],[49,-85,-81,-79,-80,-82,-37,-83,-84,-86,-71,-72,-79,49,-85,49,49,-65,-66,None,None,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-88,-67,-68,-69,-70,49,-79,49,-79,49,-87,-44,-79,-38,49,]),'GE':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,99,101,102,103,104,105,106,107,109,113,114,115,116,120,123,124,126,127,136,153,156,164,165,],[50,-85,-81,-79,-80,-82,-37,-83,-84,-86,-71,-72,-79,50,-85,50,50,-65,-66,-28,-29,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-88,-67,-68,-69,-70,50,-79,50,-79,50,-87,-44,-79,-38,50,]),'LE':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,99,101,102,103,104,105,106,107,109,113,114,115,116,120,123,124,126,127,136,153,156,164,165,],[51,-85,-81,-79,-80,-82,-37,-83,-84,-86,-71,-72,-79,51,-85,51,51,-65,-66,-28,-29,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-88,-67,-68,-69,-70,51,-79,51,-79,51,-87,-44,-79,-38,51,]),'NE':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,99,101,102,103,104,105,106,107,109,113,114,115,116,120,123,124,126,127,136,153,156,164,165,],[52,-85,-81,-79,-80,-82,-37,-83,-84,-86,-71,-72,-79,52,-85,52,52,-65,-66,-28,-29,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-88,-67,-68,-69,-70,52,-79,52,-79,52,-87,-44,-79,-38,52,]),'EQ':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,99,101,102,103,104,105,106,107,109,113,114,115,116,120,123,124,126,127,136,153,156,164,165,],[53,-85,-81,-79,-80,-82,-37,-83,-84,-86,-71,-72,-79,53,-85,53,53,-65,-66,-28,-29,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-88,-67,-68,-69,-70,53,-79,53,-79,53,-87,-44,-79,-38,53,]),'LAND':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,99,101,102,103,104,105,106,107,109,113,114,115,116,120,123,124,126,127,136,153,156,164,165,],[54,-85,-81,-79,-80,-82,-37,-83,-84,-86,-71,-72,-79,54,-85,54,54,-65,-66,-28,-29,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-88,-67,-68,-69,-70,54,-79,54,-79,54,-87,-44,-79,-38,54,]),'LOR':([8,21,24,25,26,27,37,38,40,41,46,47,66,67,68,78,81,83,85,86,87,88,89,90,91,92,93,99,101,102,103,104,105,106,107,109,113,114,115,116,120,123,124,126,127,136,153,156,164,165,],[55,-85,-81,-79,-80,-82,-37,-83,-84,-86,-71,-72,-79,55,-85,55,55,-65,-66,-28,-29,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-88,-67,-68,-69,-70,55,-79,55,-79,55,-87,-44,-79,-38,55,]),'ASSIGN':([21,122,],[58,58,]),'SUM_ASS':([21,],[60,]),'SUB_ASS':([21,],[61,]),'MUL_ASS':([21,],[62,]),'DIV_ASS':([21,],[63,]),'IDIV_ASS':([21,],[64,]),'MOD_ASS':([21,],[65,]),'MUL':([21,24,38,40,41,68,83,85,109,113,114,115,116,136,],[-85,70,-83,-84,-86,-85,70,70,-88,-67,-68,-69,-70,-87,]),'DIV':([21,24,38,40,41,68,83,85,109,113,114,115,116,136,],[-85,71,-83,-84,-86,-85,71,71,-88,-67,-68,-69,-70,-87,]),'IDIV':([21,24,38,40,41,68,83,85,109,113,114,115,116,136,],[-85,72,-83,-84,-86,-85,72,72,-88,-67,-68,-69,-70,-87,]),'MOD':([21,24,38,40,41,68,83,85,109,113,114,115,116,136,],[-85,73,-83,-84,-86,-85,73,73,-88,-67,-68,-69,-70,-87,]),'LBRACKET':([21,58,68,],[59,100,59,]),'ELSE':([23,35,111,153,158,],[69,-41,-40,-44,-39,]),'RPAREN':([24,25,26,27,37,38,40,41,46,47,57,66,67,68,81,83,85,86,87,88,89,90,91,92,93,94,95,97,98,109,113,114,115,116,117,118,119,120,123,126,127,128,129,131,136,149,153,155,160,164,165,],[-81,-79,-80,-82,-37,-83,-84,-86,-71,-72,96,108,109,-85,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,130,132,-52,-53,-88,-67,-68,-69,-70,140,141,-25,-27,144,145,109,-56,146,-55,-87,-51,-44,-26,-54,-38,166,]),'SEMI':([24,25,26,27,33,34,37,38,40,41,46,47,68,78,81,83,85,86,87,88,89,90,91,92,93,99,109,113,114,115,116,121,136,150,153,156,164,],[-81,-79,-80,-82,79,80,-37,-83,-84,-86,-71,-72,-85,125,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,-21,-88,-67,-68,-69,-70,143,-87,-22,-44,163,-38,]),'RBRACKET':([24,25,26,27,37,38,40,41,46,47,68,81,83,85,86,87,88,89,90,91,92,93,100,101,109,113,114,115,116,134,135,136,153,161,164,],[-81,-79,-80,-82,-37,-83,-84,-86,-71,-72,-85,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,-91,136,-88,-67,-68,-69,-70,150,-90,-87,-44,-89,-38,]),'COMMA':([24,25,26,27,37,38,40,41,46,47,68,81,83,85,86,87,88,89,90,91,92,93,95,97,98,100,109,113,114,115,116,118,119,120,128,129,131,134,135,136,149,153,155,160,161,164,],[-81,-79,-80,-82,-37,-83,-84,-86,-71,-72,-85,-36,-65,-66,-28,-29,-30,-31,-32,-33,-34,-35,133,-52,-53,-91,-88,-67,-68,-69,-70,142,-25,-27,-56,147,-55,151,-90,-87,-51,-44,-26,-54,-89,-38,]),'LBRACE':([69,130,137,144,145,146,162,166,],[112,112,112,112,112,112,112,112,]),'QUES':([108,],[137,]),'COLON':([152,153,],[162,-44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,1,],[2,42,]),'command':([0,1,2,42,112,138,],[4,4,43,43,139,154,]),'function_def':([0,1,2,42,112,138,],[5,5,5,5,5,5,]),'function_call':([0,1,2,42,112,138,],[6,6,6,6,6,6,]),'conditional':([0,1,2,42,112,138,],[7,7,7,7,7,7,]),'expression':([0,1,2,22,32,36,42,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,75,77,82,84,112,138,142,143,163,],[8,8,8,67,78,81,8,86,87,88,89,90,91,92,93,99,101,102,103,104,105,106,107,120,124,124,127,8,8,120,124,165,]),'assignment':([0,1,2,42,76,112,138,],[9,9,9,9,121,9,9,]),'expression_ass':([0,1,2,42,112,138,],[10,10,10,10,10,10,]),'input':([0,1,2,42,112,138,],[11,11,11,11,11,11,]),'output':([0,1,2,42,112,138,],[12,12,12,12,12,12,]),'for_loop':([0,1,2,42,112,138,],[13,13,13,13,13,13,]),'while_loop':([0,1,2,42,112,138,],[14,14,14,14,14,14,]),'return':([0,1,2,42,112,138,],[15,15,15,15,15,15,]),'break':([0,1,2,42,112,138,],[16,16,16,16,16,16,]),'continue':([0,1,2,42,112,138,],[17,17,17,17,17,17,]),'if_elif_bloc':([0,1,2,42,112,138,],[23,23,23,23,23,23,]),'term':([0,1,2,22,32,36,42,44,45,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,75,77,82,84,112,138,142,143,163,],[24,24,24,24,24,24,24,83,85,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'condition':([0,1,2,22,32,36,42,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,75,77,82,84,112,138,142,143,163,],[25,25,25,66,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,123,126,25,25,25,25,156,25,]),'ternary_condition':([0,1,2,22,32,36,42,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,75,77,82,84,112,138,142,143,163,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'if_bloc':([0,1,2,42,69,112,138,],[35,35,35,35,111,35,35,]),'factor':([0,1,2,22,32,36,42,44,45,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,70,71,72,73,75,77,82,84,100,112,133,138,142,143,151,163,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,98,38,38,38,38,38,38,38,38,113,114,115,116,38,38,38,38,135,38,98,38,38,38,161,38,]),'param_list_call':([57,],[95,]),'param_call':([57,133,],[97,149,]),'bloc':([69,130,137,144,145,146,162,166,],[110,148,152,157,158,159,164,167,]),'plist':([75,],[118,]),'pitem':([75,142,],[119,155,]),'param_list':([94,],[129,]),'param':([94,147,],[131,160,]),'list':([100,],[134,]),'stat_bloc':([112,],[138,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program statement','program',2,'p_program','Parsing.py',12),
  ('program -> statement','program',1,'p_program','Parsing.py',13),
  ('program -> error','program',1,'p_program_error','Parsing.py',16),
  ('statement -> statement command','statement',2,'p_statement','Parsing.py',21),
  ('statement -> command','statement',1,'p_statement','Parsing.py',22),
  ('command -> function_def','command',1,'p_command','Parsing.py',26),
  ('command -> function_call','command',1,'p_command','Parsing.py',27),
  ('command -> conditional','command',1,'p_command','Parsing.py',28),
  ('command -> expression','command',1,'p_command','Parsing.py',29),
  ('command -> assignment','command',1,'p_command','Parsing.py',30),
  ('command -> expression_ass','command',1,'p_command','Parsing.py',31),
  ('command -> input','command',1,'p_command','Parsing.py',32),
  ('command -> output','command',1,'p_command','Parsing.py',33),
  ('command -> for_loop','command',1,'p_command','Parsing.py',34),
  ('command -> while_loop','command',1,'p_command','Parsing.py',35),
  ('command -> return','command',1,'p_command','Parsing.py',36),
  ('command -> break','command',1,'p_command','Parsing.py',37),
  ('command -> continue','command',1,'p_command','Parsing.py',38),
  ('command -> COMMENT','command',1,'p_command','Parsing.py',39),
  ('command -> NEWLINE','command',1,'p_command','Parsing.py',40),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','Parsing.py',46),
  ('assignment -> ID ASSIGN LBRACKET list RBRACKET','assignment',5,'p_assignment','Parsing.py',47),
  ('input -> SCAN LPAREN ID RPAREN','input',4,'p_input','Parsing.py',57),
  ('output -> PRINT LPAREN plist RPAREN','output',4,'p_output','Parsing.py',62),
  ('plist -> pitem','plist',1,'p_plist','Parsing.py',69),
  ('plist -> plist COMMA pitem','plist',3,'p_plist','Parsing.py',70),
  ('pitem -> expression','pitem',1,'p_item_expr','Parsing.py',78),
  ('condition -> expression GT expression','condition',3,'p_condition','Parsing.py',82),
  ('condition -> expression LT expression','condition',3,'p_condition','Parsing.py',83),
  ('condition -> expression GE expression','condition',3,'p_condition','Parsing.py',84),
  ('condition -> expression LE expression','condition',3,'p_condition','Parsing.py',85),
  ('condition -> expression NE expression','condition',3,'p_condition','Parsing.py',86),
  ('condition -> expression EQ expression','condition',3,'p_condition','Parsing.py',87),
  ('condition -> expression LAND expression','condition',3,'p_condition','Parsing.py',88),
  ('condition -> expression LOR expression','condition',3,'p_condition','Parsing.py',89),
  ('condition -> LNOT expression','condition',2,'p_condition','Parsing.py',90),
  ('condition -> BOOLEAN','condition',1,'p_condition','Parsing.py',91),
  ('ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc','ternary_condition',7,'p_ternary','Parsing.py',100),
  ('if_bloc -> IF LPAREN condition RPAREN bloc','if_bloc',5,'p_if_bloc','Parsing.py',103),
  ('if_elif_bloc -> if_elif_bloc ELSE if_bloc','if_elif_bloc',3,'p_if_elif_bloc','Parsing.py',106),
  ('if_elif_bloc -> if_bloc','if_elif_bloc',1,'p_if_elif_bloc','Parsing.py',107),
  ('conditional -> if_elif_bloc ELSE bloc','conditional',3,'p_conditional','Parsing.py',114),
  ('conditional -> if_elif_bloc','conditional',1,'p_conditional','Parsing.py',115),
  ('bloc -> LBRACE stat_bloc RBRACE','bloc',3,'p_bloc','Parsing.py',122),
  ('stat_bloc -> stat_bloc command','stat_bloc',2,'p_stat_bloc','Parsing.py',126),
  ('stat_bloc -> command','stat_bloc',1,'p_stat_bloc','Parsing.py',127),
  ('function_def -> FUNCTION ID LPAREN param_list RPAREN bloc','function_def',6,'p_function_def','Parsing.py',136),
  ('function_def -> FUNCTION ID LPAREN RPAREN bloc','function_def',5,'p_function_def','Parsing.py',137),
  ('function_call -> ID LPAREN param_list_call RPAREN','function_call',4,'p_function_call','Parsing.py',143),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','Parsing.py',144),
  ('param_list_call -> param_list_call COMMA param_call','param_list_call',3,'p_param_list_call','Parsing.py',150),
  ('param_list_call -> param_call','param_list_call',1,'p_param_list_call','Parsing.py',151),
  ('param_call -> factor','param_call',1,'p_param_call','Parsing.py',159),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','Parsing.py',162),
  ('param_list -> param','param_list',1,'p_param_list','Parsing.py',163),
  ('param -> ID','param',1,'p_param','Parsing.py',171),
  ('return -> RETURN expression','return',2,'p_return','Parsing.py',174),
  ('return -> RETURN expression SEMI','return',3,'p_return','Parsing.py',175),
  ('for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc','for_loop',9,'p_for_loop','Parsing.py',180),
  ('while_loop -> WHILE LPAREN condition RPAREN bloc','while_loop',5,'p_while_loop','Parsing.py',183),
  ('continue -> CONTINUE','continue',1,'p_continue','Parsing.py',186),
  ('continue -> CONTINUE SEMI','continue',2,'p_continue','Parsing.py',187),
  ('break -> BREAK','break',1,'p_break','Parsing.py',190),
  ('break -> BREAK SEMI','break',2,'p_break','Parsing.py',191),
  ('expression -> expression SUM term','expression',3,'p_binary_operators','Parsing.py',195),
  ('expression -> expression SUB term','expression',3,'p_binary_operators','Parsing.py',196),
  ('term -> term MUL factor','term',3,'p_binary_operators','Parsing.py',197),
  ('term -> term DIV factor','term',3,'p_binary_operators','Parsing.py',198),
  ('term -> term IDIV factor','term',3,'p_binary_operators','Parsing.py',199),
  ('term -> term MOD factor','term',3,'p_binary_operators','Parsing.py',200),
  ('expression -> expression DECR','expression',2,'p_unary_operators','Parsing.py',223),
  ('expression -> expression INCR','expression',2,'p_unary_operators','Parsing.py',224),
  ('expression_ass -> ID SUM_ASS expression','expression_ass',3,'p_binary_operators_ass','Parsing.py',231),
  ('expression_ass -> ID SUB_ASS expression','expression_ass',3,'p_binary_operators_ass','Parsing.py',232),
  ('expression_ass -> ID MUL_ASS expression','expression_ass',3,'p_binary_operators_ass','Parsing.py',233),
  ('expression_ass -> ID DIV_ASS expression','expression_ass',3,'p_binary_operators_ass','Parsing.py',234),
  ('expression_ass -> ID IDIV_ASS expression','expression_ass',3,'p_binary_operators_ass','Parsing.py',235),
  ('expression_ass -> ID MOD_ASS expression','expression_ass',3,'p_binary_operators_ass','Parsing.py',236),
  ('expression -> condition','expression',1,'p_expression','Parsing.py',251),
  ('expression -> ternary_condition','expression',1,'p_expression','Parsing.py',252),
  ('expression -> term','expression',1,'p_expression','Parsing.py',253),
  ('expression -> NULL','expression',1,'p_expression','Parsing.py',254),
  ('term -> factor','term',1,'p_term_factor','Parsing.py',258),
  ('factor -> NUMBER','factor',1,'p_factor_num','Parsing.py',262),
  ('factor -> ID','factor',1,'p_factor_num','Parsing.py',263),
  ('factor -> STRING','factor',1,'p_factor_num','Parsing.py',264),
  ('factor -> ID LBRACKET expression RBRACKET','factor',4,'p_factor_num','Parsing.py',265),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','Parsing.py',283),
  ('list -> list COMMA factor','list',3,'p_list','Parsing.py',286),
  ('list -> factor','list',1,'p_list','Parsing.py',287),
  ('list -> <empty>','list',0,'p_list','Parsing.py',288),
]
