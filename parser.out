Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RESERVED

Grammar

Rule 0     S' -> program
Rule 1     program -> program statement
Rule 2     program -> statement
Rule 3     program -> error
Rule 4     statement -> statement command
Rule 5     statement -> command
Rule 6     command -> function_def
Rule 7     command -> function_call
Rule 8     command -> conditional
Rule 9     command -> expression
Rule 10    command -> assignment
Rule 11    command -> expression_ass
Rule 12    command -> input
Rule 13    command -> output
Rule 14    command -> for_loop
Rule 15    command -> while_loop
Rule 16    command -> return
Rule 17    command -> break
Rule 18    command -> continue
Rule 19    command -> COMMENT
Rule 20    command -> NEWLINE
Rule 21    assignment -> ID ASSIGN expression
Rule 22    assignment -> ID ASSIGN LBRACKET list RBRACKET
Rule 23    input -> SCAN LPAREN ID RPAREN
Rule 24    output -> PRINT LPAREN plist RPAREN
Rule 25    plist -> pitem
Rule 26    plist -> plist COMMA pitem
Rule 27    pitem -> expression
Rule 28    condition -> expression GT expression
Rule 29    condition -> expression LT expression
Rule 30    condition -> expression GE expression
Rule 31    condition -> expression LE expression
Rule 32    condition -> expression NE expression
Rule 33    condition -> expression EQ expression
Rule 34    condition -> expression LAND expression
Rule 35    condition -> expression LOR expression
Rule 36    condition -> LNOT expression
Rule 37    condition -> BOOLEAN
Rule 38    ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc
Rule 39    if_bloc -> IF LPAREN condition RPAREN bloc
Rule 40    if_elif_bloc -> if_elif_bloc ELSE if_bloc
Rule 41    if_elif_bloc -> if_bloc
Rule 42    conditional -> if_elif_bloc ELSE bloc
Rule 43    conditional -> if_elif_bloc
Rule 44    bloc -> LBRACE stat_bloc RBRACE
Rule 45    stat_bloc -> stat_bloc command
Rule 46    stat_bloc -> command
Rule 47    function_def -> FUNCTION ID LPAREN param_list RPAREN bloc
Rule 48    function_def -> FUNCTION ID LPAREN RPAREN bloc
Rule 49    function_call -> ID LPAREN param_list_call RPAREN
Rule 50    function_call -> ID LPAREN RPAREN
Rule 51    param_list_call -> param_list_call COMMA param_call
Rule 52    param_list_call -> param_call
Rule 53    param_call -> factor
Rule 54    param_list -> param_list COMMA param
Rule 55    param_list -> param
Rule 56    param -> ID
Rule 57    return -> RETURN expression
Rule 58    return -> RETURN expression SEMI
Rule 59    for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc
Rule 60    while_loop -> WHILE LPAREN condition RPAREN bloc
Rule 61    continue -> CONTINUE
Rule 62    continue -> CONTINUE SEMI
Rule 63    break -> BREAK
Rule 64    break -> BREAK SEMI
Rule 65    expression -> expression SUM term
Rule 66    expression -> expression SUB term
Rule 67    term -> term MUL factor
Rule 68    term -> term DIV factor
Rule 69    term -> term IDIV factor
Rule 70    term -> term MOD factor
Rule 71    expression -> expression DECR
Rule 72    expression -> expression INCR
Rule 73    expression_ass -> ID SUM_ASS expression
Rule 74    expression_ass -> ID SUB_ASS expression
Rule 75    expression_ass -> ID MUL_ASS expression
Rule 76    expression_ass -> ID DIV_ASS expression
Rule 77    expression_ass -> ID IDIV_ASS expression
Rule 78    expression_ass -> ID MOD_ASS expression
Rule 79    expression -> condition
Rule 80    expression -> ternary_condition
Rule 81    expression -> term
Rule 82    expression -> NULL
Rule 83    term -> factor
Rule 84    factor -> NUMBER
Rule 85    factor -> ID
Rule 86    factor -> STRING
Rule 87    factor -> ID LBRACKET expression RBRACKET
Rule 88    factor -> LPAREN expression RPAREN
Rule 89    list -> list COMMA factor
Rule 90    list -> factor
Rule 91    list -> <empty>

Terminals, with rules where they appear

ASSIGN               : 21 22
BOOLEAN              : 37
BREAK                : 63 64
COLON                : 38
COMMA                : 26 51 54 89
COMMENT              : 19
CONTINUE             : 61 62
DECR                 : 71
DIV                  : 68
DIV_ASS              : 76
ELSE                 : 40 42
EQ                   : 33
FOR                  : 59
FUNCTION             : 47 48
GE                   : 30
GT                   : 28
ID                   : 21 22 23 47 48 49 50 56 73 74 75 76 77 78 85 87
IDIV                 : 69
IDIV_ASS             : 77
IF                   : 39
INCR                 : 72
LAND                 : 34
LBRACE               : 44
LBRACKET             : 22 87
LE                   : 31
LNOT                 : 36
LOR                  : 35
LPAREN               : 23 24 38 39 47 48 49 50 59 60 88
LT                   : 29
MOD                  : 70
MOD_ASS              : 78
MUL                  : 67
MUL_ASS              : 75
NE                   : 32
NEWLINE              : 20
NULL                 : 82
NUMBER               : 84
PRINT                : 24
QUES                 : 38
RBRACE               : 44
RBRACKET             : 22 87
RESERVED             : 
RETURN               : 57 58
RPAREN               : 23 24 38 39 47 48 49 50 59 60 88
SCAN                 : 23
SEMI                 : 58 59 59 62 64
STRING               : 86
SUB                  : 66
SUB_ASS              : 74
SUM                  : 65
SUM_ASS              : 73
WHILE                : 60
error                : 3

Nonterminals, with rules where they appear

assignment           : 10 59
bloc                 : 38 38 39 42 47 48 59 60
break                : 17
command              : 4 5 45 46
condition            : 38 39 59 60 79
conditional          : 8
continue             : 18
expression           : 9 21 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 57 58 59 65 66 71 72 73 74 75 76 77 78 87 88
expression_ass       : 11
factor               : 53 67 68 69 70 83 89 90
for_loop             : 14
function_call        : 7
function_def         : 6
if_bloc              : 40 41
if_elif_bloc         : 40 42 43
input                : 12
list                 : 22 89
output               : 13
param                : 54 55
param_call           : 51 52
param_list           : 47 54
param_list_call      : 49 51
pitem                : 25 26
plist                : 24 26
program              : 1 0
return               : 16
stat_bloc            : 44 45
statement            : 1 2 4
term                 : 65 66 67 68 69 70 81
ternary_condition    : 80
while_loop           : 15

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . error
    (4) statement -> . statement command
    (5) statement -> . command
    (6) command -> . function_def
    (7) command -> . function_call
    (8) command -> . conditional
    (9) command -> . expression
    (10) command -> . assignment
    (11) command -> . expression_ass
    (12) command -> . input
    (13) command -> . output
    (14) command -> . for_loop
    (15) command -> . while_loop
    (16) command -> . return
    (17) command -> . break
    (18) command -> . continue
    (19) command -> . COMMENT
    (20) command -> . NEWLINE
    (47) function_def -> . FUNCTION ID LPAREN param_list RPAREN bloc
    (48) function_def -> . FUNCTION ID LPAREN RPAREN bloc
    (49) function_call -> . ID LPAREN param_list_call RPAREN
    (50) function_call -> . ID LPAREN RPAREN
    (42) conditional -> . if_elif_bloc ELSE bloc
    (43) conditional -> . if_elif_bloc
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . ID ASSIGN LBRACKET list RBRACKET
    (73) expression_ass -> . ID SUM_ASS expression
    (74) expression_ass -> . ID SUB_ASS expression
    (75) expression_ass -> . ID MUL_ASS expression
    (76) expression_ass -> . ID DIV_ASS expression
    (77) expression_ass -> . ID IDIV_ASS expression
    (78) expression_ass -> . ID MOD_ASS expression
    (23) input -> . SCAN LPAREN ID RPAREN
    (24) output -> . PRINT LPAREN plist RPAREN
    (59) for_loop -> . FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc
    (60) while_loop -> . WHILE LPAREN condition RPAREN bloc
    (57) return -> . RETURN expression
    (58) return -> . RETURN expression SEMI
    (63) break -> . BREAK
    (64) break -> . BREAK SEMI
    (61) continue -> . CONTINUE
    (62) continue -> . CONTINUE SEMI
    (40) if_elif_bloc -> . if_elif_bloc ELSE if_bloc
    (41) if_elif_bloc -> . if_bloc
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (39) if_bloc -> . IF LPAREN condition RPAREN bloc
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    error           shift and go to state 3
    COMMENT         shift and go to state 18
    NEWLINE         shift and go to state 19
    FUNCTION        shift and go to state 20
    ID              shift and go to state 21
    NULL            shift and go to state 27
    SCAN            shift and go to state 28
    PRINT           shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    RETURN          shift and go to state 32
    BREAK           shift and go to state 33
    CONTINUE        shift and go to state 34
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    IF              shift and go to state 39
    NUMBER          shift and go to state 40
    STRING          shift and go to state 41

    program                        shift and go to state 1
    statement                      shift and go to state 2
    command                        shift and go to state 4
    function_def                   shift and go to state 5
    function_call                  shift and go to state 6
    conditional                    shift and go to state 7
    expression                     shift and go to state 8
    assignment                     shift and go to state 9
    expression_ass                 shift and go to state 10
    input                          shift and go to state 11
    output                         shift and go to state 12
    for_loop                       shift and go to state 13
    while_loop                     shift and go to state 14
    return                         shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    if_elif_bloc                   shift and go to state 23
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    if_bloc                        shift and go to state 35
    factor                         shift and go to state 38

state 1

    (0) S' -> program .
    (1) program -> program . statement
    (4) statement -> . statement command
    (5) statement -> . command
    (6) command -> . function_def
    (7) command -> . function_call
    (8) command -> . conditional
    (9) command -> . expression
    (10) command -> . assignment
    (11) command -> . expression_ass
    (12) command -> . input
    (13) command -> . output
    (14) command -> . for_loop
    (15) command -> . while_loop
    (16) command -> . return
    (17) command -> . break
    (18) command -> . continue
    (19) command -> . COMMENT
    (20) command -> . NEWLINE
    (47) function_def -> . FUNCTION ID LPAREN param_list RPAREN bloc
    (48) function_def -> . FUNCTION ID LPAREN RPAREN bloc
    (49) function_call -> . ID LPAREN param_list_call RPAREN
    (50) function_call -> . ID LPAREN RPAREN
    (42) conditional -> . if_elif_bloc ELSE bloc
    (43) conditional -> . if_elif_bloc
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . ID ASSIGN LBRACKET list RBRACKET
    (73) expression_ass -> . ID SUM_ASS expression
    (74) expression_ass -> . ID SUB_ASS expression
    (75) expression_ass -> . ID MUL_ASS expression
    (76) expression_ass -> . ID DIV_ASS expression
    (77) expression_ass -> . ID IDIV_ASS expression
    (78) expression_ass -> . ID MOD_ASS expression
    (23) input -> . SCAN LPAREN ID RPAREN
    (24) output -> . PRINT LPAREN plist RPAREN
    (59) for_loop -> . FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc
    (60) while_loop -> . WHILE LPAREN condition RPAREN bloc
    (57) return -> . RETURN expression
    (58) return -> . RETURN expression SEMI
    (63) break -> . BREAK
    (64) break -> . BREAK SEMI
    (61) continue -> . CONTINUE
    (62) continue -> . CONTINUE SEMI
    (40) if_elif_bloc -> . if_elif_bloc ELSE if_bloc
    (41) if_elif_bloc -> . if_bloc
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (39) if_bloc -> . IF LPAREN condition RPAREN bloc
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    COMMENT         shift and go to state 18
    NEWLINE         shift and go to state 19
    FUNCTION        shift and go to state 20
    ID              shift and go to state 21
    NULL            shift and go to state 27
    SCAN            shift and go to state 28
    PRINT           shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    RETURN          shift and go to state 32
    BREAK           shift and go to state 33
    CONTINUE        shift and go to state 34
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    IF              shift and go to state 39
    NUMBER          shift and go to state 40
    STRING          shift and go to state 41

    statement                      shift and go to state 42
    command                        shift and go to state 4
    function_def                   shift and go to state 5
    function_call                  shift and go to state 6
    conditional                    shift and go to state 7
    expression                     shift and go to state 8
    assignment                     shift and go to state 9
    expression_ass                 shift and go to state 10
    input                          shift and go to state 11
    output                         shift and go to state 12
    for_loop                       shift and go to state 13
    while_loop                     shift and go to state 14
    return                         shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    if_elif_bloc                   shift and go to state 23
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    if_bloc                        shift and go to state 35
    factor                         shift and go to state 38

state 2

    (2) program -> statement .
    (4) statement -> statement . command
    (6) command -> . function_def
    (7) command -> . function_call
    (8) command -> . conditional
    (9) command -> . expression
    (10) command -> . assignment
    (11) command -> . expression_ass
    (12) command -> . input
    (13) command -> . output
    (14) command -> . for_loop
    (15) command -> . while_loop
    (16) command -> . return
    (17) command -> . break
    (18) command -> . continue
    (19) command -> . COMMENT
    (20) command -> . NEWLINE
    (47) function_def -> . FUNCTION ID LPAREN param_list RPAREN bloc
    (48) function_def -> . FUNCTION ID LPAREN RPAREN bloc
    (49) function_call -> . ID LPAREN param_list_call RPAREN
    (50) function_call -> . ID LPAREN RPAREN
    (42) conditional -> . if_elif_bloc ELSE bloc
    (43) conditional -> . if_elif_bloc
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . ID ASSIGN LBRACKET list RBRACKET
    (73) expression_ass -> . ID SUM_ASS expression
    (74) expression_ass -> . ID SUB_ASS expression
    (75) expression_ass -> . ID MUL_ASS expression
    (76) expression_ass -> . ID DIV_ASS expression
    (77) expression_ass -> . ID IDIV_ASS expression
    (78) expression_ass -> . ID MOD_ASS expression
    (23) input -> . SCAN LPAREN ID RPAREN
    (24) output -> . PRINT LPAREN plist RPAREN
    (59) for_loop -> . FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc
    (60) while_loop -> . WHILE LPAREN condition RPAREN bloc
    (57) return -> . RETURN expression
    (58) return -> . RETURN expression SEMI
    (63) break -> . BREAK
    (64) break -> . BREAK SEMI
    (61) continue -> . CONTINUE
    (62) continue -> . CONTINUE SEMI
    (40) if_elif_bloc -> . if_elif_bloc ELSE if_bloc
    (41) if_elif_bloc -> . if_bloc
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (39) if_bloc -> . IF LPAREN condition RPAREN bloc
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for SCAN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LNOT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 2 (program -> statement .)
    COMMENT         shift and go to state 18
    NEWLINE         shift and go to state 19
    FUNCTION        shift and go to state 20
    ID              shift and go to state 21
    NULL            shift and go to state 27
    SCAN            shift and go to state 28
    PRINT           shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    RETURN          shift and go to state 32
    BREAK           shift and go to state 33
    CONTINUE        shift and go to state 34
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    IF              shift and go to state 39
    NUMBER          shift and go to state 40
    STRING          shift and go to state 41

  ! COMMENT         [ reduce using rule 2 (program -> statement .) ]
  ! NEWLINE         [ reduce using rule 2 (program -> statement .) ]
  ! FUNCTION        [ reduce using rule 2 (program -> statement .) ]
  ! ID              [ reduce using rule 2 (program -> statement .) ]
  ! NULL            [ reduce using rule 2 (program -> statement .) ]
  ! SCAN            [ reduce using rule 2 (program -> statement .) ]
  ! PRINT           [ reduce using rule 2 (program -> statement .) ]
  ! FOR             [ reduce using rule 2 (program -> statement .) ]
  ! WHILE           [ reduce using rule 2 (program -> statement .) ]
  ! RETURN          [ reduce using rule 2 (program -> statement .) ]
  ! BREAK           [ reduce using rule 2 (program -> statement .) ]
  ! CONTINUE        [ reduce using rule 2 (program -> statement .) ]
  ! LNOT            [ reduce using rule 2 (program -> statement .) ]
  ! BOOLEAN         [ reduce using rule 2 (program -> statement .) ]
  ! LPAREN          [ reduce using rule 2 (program -> statement .) ]
  ! IF              [ reduce using rule 2 (program -> statement .) ]
  ! NUMBER          [ reduce using rule 2 (program -> statement .) ]
  ! STRING          [ reduce using rule 2 (program -> statement .) ]

    command                        shift and go to state 43
    function_def                   shift and go to state 5
    function_call                  shift and go to state 6
    conditional                    shift and go to state 7
    expression                     shift and go to state 8
    assignment                     shift and go to state 9
    expression_ass                 shift and go to state 10
    input                          shift and go to state 11
    output                         shift and go to state 12
    for_loop                       shift and go to state 13
    while_loop                     shift and go to state 14
    return                         shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    if_elif_bloc                   shift and go to state 23
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    if_bloc                        shift and go to state 35
    factor                         shift and go to state 38

state 3

    (3) program -> error .

    COMMENT         reduce using rule 3 (program -> error .)
    NEWLINE         reduce using rule 3 (program -> error .)
    FUNCTION        reduce using rule 3 (program -> error .)
    ID              reduce using rule 3 (program -> error .)
    NULL            reduce using rule 3 (program -> error .)
    SCAN            reduce using rule 3 (program -> error .)
    PRINT           reduce using rule 3 (program -> error .)
    FOR             reduce using rule 3 (program -> error .)
    WHILE           reduce using rule 3 (program -> error .)
    RETURN          reduce using rule 3 (program -> error .)
    BREAK           reduce using rule 3 (program -> error .)
    CONTINUE        reduce using rule 3 (program -> error .)
    LNOT            reduce using rule 3 (program -> error .)
    BOOLEAN         reduce using rule 3 (program -> error .)
    LPAREN          reduce using rule 3 (program -> error .)
    IF              reduce using rule 3 (program -> error .)
    NUMBER          reduce using rule 3 (program -> error .)
    STRING          reduce using rule 3 (program -> error .)
    $end            reduce using rule 3 (program -> error .)


state 4

    (5) statement -> command .

    COMMENT         reduce using rule 5 (statement -> command .)
    NEWLINE         reduce using rule 5 (statement -> command .)
    FUNCTION        reduce using rule 5 (statement -> command .)
    ID              reduce using rule 5 (statement -> command .)
    NULL            reduce using rule 5 (statement -> command .)
    SCAN            reduce using rule 5 (statement -> command .)
    PRINT           reduce using rule 5 (statement -> command .)
    FOR             reduce using rule 5 (statement -> command .)
    WHILE           reduce using rule 5 (statement -> command .)
    RETURN          reduce using rule 5 (statement -> command .)
    BREAK           reduce using rule 5 (statement -> command .)
    CONTINUE        reduce using rule 5 (statement -> command .)
    LNOT            reduce using rule 5 (statement -> command .)
    BOOLEAN         reduce using rule 5 (statement -> command .)
    LPAREN          reduce using rule 5 (statement -> command .)
    IF              reduce using rule 5 (statement -> command .)
    NUMBER          reduce using rule 5 (statement -> command .)
    STRING          reduce using rule 5 (statement -> command .)
    $end            reduce using rule 5 (statement -> command .)


state 5

    (6) command -> function_def .

    COMMENT         reduce using rule 6 (command -> function_def .)
    NEWLINE         reduce using rule 6 (command -> function_def .)
    FUNCTION        reduce using rule 6 (command -> function_def .)
    ID              reduce using rule 6 (command -> function_def .)
    NULL            reduce using rule 6 (command -> function_def .)
    SCAN            reduce using rule 6 (command -> function_def .)
    PRINT           reduce using rule 6 (command -> function_def .)
    FOR             reduce using rule 6 (command -> function_def .)
    WHILE           reduce using rule 6 (command -> function_def .)
    RETURN          reduce using rule 6 (command -> function_def .)
    BREAK           reduce using rule 6 (command -> function_def .)
    CONTINUE        reduce using rule 6 (command -> function_def .)
    LNOT            reduce using rule 6 (command -> function_def .)
    BOOLEAN         reduce using rule 6 (command -> function_def .)
    LPAREN          reduce using rule 6 (command -> function_def .)
    IF              reduce using rule 6 (command -> function_def .)
    NUMBER          reduce using rule 6 (command -> function_def .)
    STRING          reduce using rule 6 (command -> function_def .)
    $end            reduce using rule 6 (command -> function_def .)
    RBRACE          reduce using rule 6 (command -> function_def .)


state 6

    (7) command -> function_call .

    COMMENT         reduce using rule 7 (command -> function_call .)
    NEWLINE         reduce using rule 7 (command -> function_call .)
    FUNCTION        reduce using rule 7 (command -> function_call .)
    ID              reduce using rule 7 (command -> function_call .)
    NULL            reduce using rule 7 (command -> function_call .)
    SCAN            reduce using rule 7 (command -> function_call .)
    PRINT           reduce using rule 7 (command -> function_call .)
    FOR             reduce using rule 7 (command -> function_call .)
    WHILE           reduce using rule 7 (command -> function_call .)
    RETURN          reduce using rule 7 (command -> function_call .)
    BREAK           reduce using rule 7 (command -> function_call .)
    CONTINUE        reduce using rule 7 (command -> function_call .)
    LNOT            reduce using rule 7 (command -> function_call .)
    BOOLEAN         reduce using rule 7 (command -> function_call .)
    LPAREN          reduce using rule 7 (command -> function_call .)
    IF              reduce using rule 7 (command -> function_call .)
    NUMBER          reduce using rule 7 (command -> function_call .)
    STRING          reduce using rule 7 (command -> function_call .)
    $end            reduce using rule 7 (command -> function_call .)
    RBRACE          reduce using rule 7 (command -> function_call .)


state 7

    (8) command -> conditional .

    COMMENT         reduce using rule 8 (command -> conditional .)
    NEWLINE         reduce using rule 8 (command -> conditional .)
    FUNCTION        reduce using rule 8 (command -> conditional .)
    ID              reduce using rule 8 (command -> conditional .)
    NULL            reduce using rule 8 (command -> conditional .)
    SCAN            reduce using rule 8 (command -> conditional .)
    PRINT           reduce using rule 8 (command -> conditional .)
    FOR             reduce using rule 8 (command -> conditional .)
    WHILE           reduce using rule 8 (command -> conditional .)
    RETURN          reduce using rule 8 (command -> conditional .)
    BREAK           reduce using rule 8 (command -> conditional .)
    CONTINUE        reduce using rule 8 (command -> conditional .)
    LNOT            reduce using rule 8 (command -> conditional .)
    BOOLEAN         reduce using rule 8 (command -> conditional .)
    LPAREN          reduce using rule 8 (command -> conditional .)
    IF              reduce using rule 8 (command -> conditional .)
    NUMBER          reduce using rule 8 (command -> conditional .)
    STRING          reduce using rule 8 (command -> conditional .)
    $end            reduce using rule 8 (command -> conditional .)
    RBRACE          reduce using rule 8 (command -> conditional .)


state 8

    (9) command -> expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

    COMMENT         reduce using rule 9 (command -> expression .)
    NEWLINE         reduce using rule 9 (command -> expression .)
    FUNCTION        reduce using rule 9 (command -> expression .)
    ID              reduce using rule 9 (command -> expression .)
    NULL            reduce using rule 9 (command -> expression .)
    SCAN            reduce using rule 9 (command -> expression .)
    PRINT           reduce using rule 9 (command -> expression .)
    FOR             reduce using rule 9 (command -> expression .)
    WHILE           reduce using rule 9 (command -> expression .)
    RETURN          reduce using rule 9 (command -> expression .)
    BREAK           reduce using rule 9 (command -> expression .)
    CONTINUE        reduce using rule 9 (command -> expression .)
    LNOT            reduce using rule 9 (command -> expression .)
    BOOLEAN         reduce using rule 9 (command -> expression .)
    LPAREN          reduce using rule 9 (command -> expression .)
    IF              reduce using rule 9 (command -> expression .)
    NUMBER          reduce using rule 9 (command -> expression .)
    STRING          reduce using rule 9 (command -> expression .)
    $end            reduce using rule 9 (command -> expression .)
    RBRACE          reduce using rule 9 (command -> expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55


state 9

    (10) command -> assignment .

    COMMENT         reduce using rule 10 (command -> assignment .)
    NEWLINE         reduce using rule 10 (command -> assignment .)
    FUNCTION        reduce using rule 10 (command -> assignment .)
    ID              reduce using rule 10 (command -> assignment .)
    NULL            reduce using rule 10 (command -> assignment .)
    SCAN            reduce using rule 10 (command -> assignment .)
    PRINT           reduce using rule 10 (command -> assignment .)
    FOR             reduce using rule 10 (command -> assignment .)
    WHILE           reduce using rule 10 (command -> assignment .)
    RETURN          reduce using rule 10 (command -> assignment .)
    BREAK           reduce using rule 10 (command -> assignment .)
    CONTINUE        reduce using rule 10 (command -> assignment .)
    LNOT            reduce using rule 10 (command -> assignment .)
    BOOLEAN         reduce using rule 10 (command -> assignment .)
    LPAREN          reduce using rule 10 (command -> assignment .)
    IF              reduce using rule 10 (command -> assignment .)
    NUMBER          reduce using rule 10 (command -> assignment .)
    STRING          reduce using rule 10 (command -> assignment .)
    $end            reduce using rule 10 (command -> assignment .)
    RBRACE          reduce using rule 10 (command -> assignment .)


state 10

    (11) command -> expression_ass .

    COMMENT         reduce using rule 11 (command -> expression_ass .)
    NEWLINE         reduce using rule 11 (command -> expression_ass .)
    FUNCTION        reduce using rule 11 (command -> expression_ass .)
    ID              reduce using rule 11 (command -> expression_ass .)
    NULL            reduce using rule 11 (command -> expression_ass .)
    SCAN            reduce using rule 11 (command -> expression_ass .)
    PRINT           reduce using rule 11 (command -> expression_ass .)
    FOR             reduce using rule 11 (command -> expression_ass .)
    WHILE           reduce using rule 11 (command -> expression_ass .)
    RETURN          reduce using rule 11 (command -> expression_ass .)
    BREAK           reduce using rule 11 (command -> expression_ass .)
    CONTINUE        reduce using rule 11 (command -> expression_ass .)
    LNOT            reduce using rule 11 (command -> expression_ass .)
    BOOLEAN         reduce using rule 11 (command -> expression_ass .)
    LPAREN          reduce using rule 11 (command -> expression_ass .)
    IF              reduce using rule 11 (command -> expression_ass .)
    NUMBER          reduce using rule 11 (command -> expression_ass .)
    STRING          reduce using rule 11 (command -> expression_ass .)
    $end            reduce using rule 11 (command -> expression_ass .)
    RBRACE          reduce using rule 11 (command -> expression_ass .)


state 11

    (12) command -> input .

    COMMENT         reduce using rule 12 (command -> input .)
    NEWLINE         reduce using rule 12 (command -> input .)
    FUNCTION        reduce using rule 12 (command -> input .)
    ID              reduce using rule 12 (command -> input .)
    NULL            reduce using rule 12 (command -> input .)
    SCAN            reduce using rule 12 (command -> input .)
    PRINT           reduce using rule 12 (command -> input .)
    FOR             reduce using rule 12 (command -> input .)
    WHILE           reduce using rule 12 (command -> input .)
    RETURN          reduce using rule 12 (command -> input .)
    BREAK           reduce using rule 12 (command -> input .)
    CONTINUE        reduce using rule 12 (command -> input .)
    LNOT            reduce using rule 12 (command -> input .)
    BOOLEAN         reduce using rule 12 (command -> input .)
    LPAREN          reduce using rule 12 (command -> input .)
    IF              reduce using rule 12 (command -> input .)
    NUMBER          reduce using rule 12 (command -> input .)
    STRING          reduce using rule 12 (command -> input .)
    $end            reduce using rule 12 (command -> input .)
    RBRACE          reduce using rule 12 (command -> input .)


state 12

    (13) command -> output .

    COMMENT         reduce using rule 13 (command -> output .)
    NEWLINE         reduce using rule 13 (command -> output .)
    FUNCTION        reduce using rule 13 (command -> output .)
    ID              reduce using rule 13 (command -> output .)
    NULL            reduce using rule 13 (command -> output .)
    SCAN            reduce using rule 13 (command -> output .)
    PRINT           reduce using rule 13 (command -> output .)
    FOR             reduce using rule 13 (command -> output .)
    WHILE           reduce using rule 13 (command -> output .)
    RETURN          reduce using rule 13 (command -> output .)
    BREAK           reduce using rule 13 (command -> output .)
    CONTINUE        reduce using rule 13 (command -> output .)
    LNOT            reduce using rule 13 (command -> output .)
    BOOLEAN         reduce using rule 13 (command -> output .)
    LPAREN          reduce using rule 13 (command -> output .)
    IF              reduce using rule 13 (command -> output .)
    NUMBER          reduce using rule 13 (command -> output .)
    STRING          reduce using rule 13 (command -> output .)
    $end            reduce using rule 13 (command -> output .)
    RBRACE          reduce using rule 13 (command -> output .)


state 13

    (14) command -> for_loop .

    COMMENT         reduce using rule 14 (command -> for_loop .)
    NEWLINE         reduce using rule 14 (command -> for_loop .)
    FUNCTION        reduce using rule 14 (command -> for_loop .)
    ID              reduce using rule 14 (command -> for_loop .)
    NULL            reduce using rule 14 (command -> for_loop .)
    SCAN            reduce using rule 14 (command -> for_loop .)
    PRINT           reduce using rule 14 (command -> for_loop .)
    FOR             reduce using rule 14 (command -> for_loop .)
    WHILE           reduce using rule 14 (command -> for_loop .)
    RETURN          reduce using rule 14 (command -> for_loop .)
    BREAK           reduce using rule 14 (command -> for_loop .)
    CONTINUE        reduce using rule 14 (command -> for_loop .)
    LNOT            reduce using rule 14 (command -> for_loop .)
    BOOLEAN         reduce using rule 14 (command -> for_loop .)
    LPAREN          reduce using rule 14 (command -> for_loop .)
    IF              reduce using rule 14 (command -> for_loop .)
    NUMBER          reduce using rule 14 (command -> for_loop .)
    STRING          reduce using rule 14 (command -> for_loop .)
    $end            reduce using rule 14 (command -> for_loop .)
    RBRACE          reduce using rule 14 (command -> for_loop .)


state 14

    (15) command -> while_loop .

    COMMENT         reduce using rule 15 (command -> while_loop .)
    NEWLINE         reduce using rule 15 (command -> while_loop .)
    FUNCTION        reduce using rule 15 (command -> while_loop .)
    ID              reduce using rule 15 (command -> while_loop .)
    NULL            reduce using rule 15 (command -> while_loop .)
    SCAN            reduce using rule 15 (command -> while_loop .)
    PRINT           reduce using rule 15 (command -> while_loop .)
    FOR             reduce using rule 15 (command -> while_loop .)
    WHILE           reduce using rule 15 (command -> while_loop .)
    RETURN          reduce using rule 15 (command -> while_loop .)
    BREAK           reduce using rule 15 (command -> while_loop .)
    CONTINUE        reduce using rule 15 (command -> while_loop .)
    LNOT            reduce using rule 15 (command -> while_loop .)
    BOOLEAN         reduce using rule 15 (command -> while_loop .)
    LPAREN          reduce using rule 15 (command -> while_loop .)
    IF              reduce using rule 15 (command -> while_loop .)
    NUMBER          reduce using rule 15 (command -> while_loop .)
    STRING          reduce using rule 15 (command -> while_loop .)
    $end            reduce using rule 15 (command -> while_loop .)
    RBRACE          reduce using rule 15 (command -> while_loop .)


state 15

    (16) command -> return .

    COMMENT         reduce using rule 16 (command -> return .)
    NEWLINE         reduce using rule 16 (command -> return .)
    FUNCTION        reduce using rule 16 (command -> return .)
    ID              reduce using rule 16 (command -> return .)
    NULL            reduce using rule 16 (command -> return .)
    SCAN            reduce using rule 16 (command -> return .)
    PRINT           reduce using rule 16 (command -> return .)
    FOR             reduce using rule 16 (command -> return .)
    WHILE           reduce using rule 16 (command -> return .)
    RETURN          reduce using rule 16 (command -> return .)
    BREAK           reduce using rule 16 (command -> return .)
    CONTINUE        reduce using rule 16 (command -> return .)
    LNOT            reduce using rule 16 (command -> return .)
    BOOLEAN         reduce using rule 16 (command -> return .)
    LPAREN          reduce using rule 16 (command -> return .)
    IF              reduce using rule 16 (command -> return .)
    NUMBER          reduce using rule 16 (command -> return .)
    STRING          reduce using rule 16 (command -> return .)
    $end            reduce using rule 16 (command -> return .)
    RBRACE          reduce using rule 16 (command -> return .)


state 16

    (17) command -> break .

    COMMENT         reduce using rule 17 (command -> break .)
    NEWLINE         reduce using rule 17 (command -> break .)
    FUNCTION        reduce using rule 17 (command -> break .)
    ID              reduce using rule 17 (command -> break .)
    NULL            reduce using rule 17 (command -> break .)
    SCAN            reduce using rule 17 (command -> break .)
    PRINT           reduce using rule 17 (command -> break .)
    FOR             reduce using rule 17 (command -> break .)
    WHILE           reduce using rule 17 (command -> break .)
    RETURN          reduce using rule 17 (command -> break .)
    BREAK           reduce using rule 17 (command -> break .)
    CONTINUE        reduce using rule 17 (command -> break .)
    LNOT            reduce using rule 17 (command -> break .)
    BOOLEAN         reduce using rule 17 (command -> break .)
    LPAREN          reduce using rule 17 (command -> break .)
    IF              reduce using rule 17 (command -> break .)
    NUMBER          reduce using rule 17 (command -> break .)
    STRING          reduce using rule 17 (command -> break .)
    $end            reduce using rule 17 (command -> break .)
    RBRACE          reduce using rule 17 (command -> break .)


state 17

    (18) command -> continue .

    COMMENT         reduce using rule 18 (command -> continue .)
    NEWLINE         reduce using rule 18 (command -> continue .)
    FUNCTION        reduce using rule 18 (command -> continue .)
    ID              reduce using rule 18 (command -> continue .)
    NULL            reduce using rule 18 (command -> continue .)
    SCAN            reduce using rule 18 (command -> continue .)
    PRINT           reduce using rule 18 (command -> continue .)
    FOR             reduce using rule 18 (command -> continue .)
    WHILE           reduce using rule 18 (command -> continue .)
    RETURN          reduce using rule 18 (command -> continue .)
    BREAK           reduce using rule 18 (command -> continue .)
    CONTINUE        reduce using rule 18 (command -> continue .)
    LNOT            reduce using rule 18 (command -> continue .)
    BOOLEAN         reduce using rule 18 (command -> continue .)
    LPAREN          reduce using rule 18 (command -> continue .)
    IF              reduce using rule 18 (command -> continue .)
    NUMBER          reduce using rule 18 (command -> continue .)
    STRING          reduce using rule 18 (command -> continue .)
    $end            reduce using rule 18 (command -> continue .)
    RBRACE          reduce using rule 18 (command -> continue .)


state 18

    (19) command -> COMMENT .

    COMMENT         reduce using rule 19 (command -> COMMENT .)
    NEWLINE         reduce using rule 19 (command -> COMMENT .)
    FUNCTION        reduce using rule 19 (command -> COMMENT .)
    ID              reduce using rule 19 (command -> COMMENT .)
    NULL            reduce using rule 19 (command -> COMMENT .)
    SCAN            reduce using rule 19 (command -> COMMENT .)
    PRINT           reduce using rule 19 (command -> COMMENT .)
    FOR             reduce using rule 19 (command -> COMMENT .)
    WHILE           reduce using rule 19 (command -> COMMENT .)
    RETURN          reduce using rule 19 (command -> COMMENT .)
    BREAK           reduce using rule 19 (command -> COMMENT .)
    CONTINUE        reduce using rule 19 (command -> COMMENT .)
    LNOT            reduce using rule 19 (command -> COMMENT .)
    BOOLEAN         reduce using rule 19 (command -> COMMENT .)
    LPAREN          reduce using rule 19 (command -> COMMENT .)
    IF              reduce using rule 19 (command -> COMMENT .)
    NUMBER          reduce using rule 19 (command -> COMMENT .)
    STRING          reduce using rule 19 (command -> COMMENT .)
    $end            reduce using rule 19 (command -> COMMENT .)
    RBRACE          reduce using rule 19 (command -> COMMENT .)


state 19

    (20) command -> NEWLINE .

    COMMENT         reduce using rule 20 (command -> NEWLINE .)
    NEWLINE         reduce using rule 20 (command -> NEWLINE .)
    FUNCTION        reduce using rule 20 (command -> NEWLINE .)
    ID              reduce using rule 20 (command -> NEWLINE .)
    NULL            reduce using rule 20 (command -> NEWLINE .)
    SCAN            reduce using rule 20 (command -> NEWLINE .)
    PRINT           reduce using rule 20 (command -> NEWLINE .)
    FOR             reduce using rule 20 (command -> NEWLINE .)
    WHILE           reduce using rule 20 (command -> NEWLINE .)
    RETURN          reduce using rule 20 (command -> NEWLINE .)
    BREAK           reduce using rule 20 (command -> NEWLINE .)
    CONTINUE        reduce using rule 20 (command -> NEWLINE .)
    LNOT            reduce using rule 20 (command -> NEWLINE .)
    BOOLEAN         reduce using rule 20 (command -> NEWLINE .)
    LPAREN          reduce using rule 20 (command -> NEWLINE .)
    IF              reduce using rule 20 (command -> NEWLINE .)
    NUMBER          reduce using rule 20 (command -> NEWLINE .)
    STRING          reduce using rule 20 (command -> NEWLINE .)
    $end            reduce using rule 20 (command -> NEWLINE .)
    RBRACE          reduce using rule 20 (command -> NEWLINE .)


state 20

    (47) function_def -> FUNCTION . ID LPAREN param_list RPAREN bloc
    (48) function_def -> FUNCTION . ID LPAREN RPAREN bloc

    ID              shift and go to state 56


state 21

    (49) function_call -> ID . LPAREN param_list_call RPAREN
    (50) function_call -> ID . LPAREN RPAREN
    (21) assignment -> ID . ASSIGN expression
    (22) assignment -> ID . ASSIGN LBRACKET list RBRACKET
    (73) expression_ass -> ID . SUM_ASS expression
    (74) expression_ass -> ID . SUB_ASS expression
    (75) expression_ass -> ID . MUL_ASS expression
    (76) expression_ass -> ID . DIV_ASS expression
    (77) expression_ass -> ID . IDIV_ASS expression
    (78) expression_ass -> ID . MOD_ASS expression
    (85) factor -> ID .
    (87) factor -> ID . LBRACKET expression RBRACKET

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 57
    ASSIGN          shift and go to state 58
    SUM_ASS         shift and go to state 60
    SUB_ASS         shift and go to state 61
    MUL_ASS         shift and go to state 62
    DIV_ASS         shift and go to state 63
    IDIV_ASS        shift and go to state 64
    MOD_ASS         shift and go to state 65
    MUL             reduce using rule 85 (factor -> ID .)
    DIV             reduce using rule 85 (factor -> ID .)
    IDIV            reduce using rule 85 (factor -> ID .)
    MOD             reduce using rule 85 (factor -> ID .)
    SUM             reduce using rule 85 (factor -> ID .)
    SUB             reduce using rule 85 (factor -> ID .)
    DECR            reduce using rule 85 (factor -> ID .)
    INCR            reduce using rule 85 (factor -> ID .)
    GT              reduce using rule 85 (factor -> ID .)
    LT              reduce using rule 85 (factor -> ID .)
    GE              reduce using rule 85 (factor -> ID .)
    LE              reduce using rule 85 (factor -> ID .)
    NE              reduce using rule 85 (factor -> ID .)
    EQ              reduce using rule 85 (factor -> ID .)
    LAND            reduce using rule 85 (factor -> ID .)
    LOR             reduce using rule 85 (factor -> ID .)
    COMMENT         reduce using rule 85 (factor -> ID .)
    NEWLINE         reduce using rule 85 (factor -> ID .)
    FUNCTION        reduce using rule 85 (factor -> ID .)
    ID              reduce using rule 85 (factor -> ID .)
    NULL            reduce using rule 85 (factor -> ID .)
    SCAN            reduce using rule 85 (factor -> ID .)
    PRINT           reduce using rule 85 (factor -> ID .)
    FOR             reduce using rule 85 (factor -> ID .)
    WHILE           reduce using rule 85 (factor -> ID .)
    RETURN          reduce using rule 85 (factor -> ID .)
    BREAK           reduce using rule 85 (factor -> ID .)
    CONTINUE        reduce using rule 85 (factor -> ID .)
    LNOT            reduce using rule 85 (factor -> ID .)
    BOOLEAN         reduce using rule 85 (factor -> ID .)
    IF              reduce using rule 85 (factor -> ID .)
    NUMBER          reduce using rule 85 (factor -> ID .)
    STRING          reduce using rule 85 (factor -> ID .)
    $end            reduce using rule 85 (factor -> ID .)
    RBRACE          reduce using rule 85 (factor -> ID .)
    LBRACKET        shift and go to state 59

  ! LPAREN          [ reduce using rule 85 (factor -> ID .) ]


state 22

    (38) ternary_condition -> LPAREN . condition RPAREN QUES bloc COLON bloc
    (88) factor -> LPAREN . expression RPAREN
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    NULL            shift and go to state 27
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    condition                      shift and go to state 66
    expression                     shift and go to state 67
    term                           shift and go to state 24
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 23

    (42) conditional -> if_elif_bloc . ELSE bloc
    (43) conditional -> if_elif_bloc .
    (40) if_elif_bloc -> if_elif_bloc . ELSE if_bloc

    ELSE            shift and go to state 69
    COMMENT         reduce using rule 43 (conditional -> if_elif_bloc .)
    NEWLINE         reduce using rule 43 (conditional -> if_elif_bloc .)
    FUNCTION        reduce using rule 43 (conditional -> if_elif_bloc .)
    ID              reduce using rule 43 (conditional -> if_elif_bloc .)
    NULL            reduce using rule 43 (conditional -> if_elif_bloc .)
    SCAN            reduce using rule 43 (conditional -> if_elif_bloc .)
    PRINT           reduce using rule 43 (conditional -> if_elif_bloc .)
    FOR             reduce using rule 43 (conditional -> if_elif_bloc .)
    WHILE           reduce using rule 43 (conditional -> if_elif_bloc .)
    RETURN          reduce using rule 43 (conditional -> if_elif_bloc .)
    BREAK           reduce using rule 43 (conditional -> if_elif_bloc .)
    CONTINUE        reduce using rule 43 (conditional -> if_elif_bloc .)
    LNOT            reduce using rule 43 (conditional -> if_elif_bloc .)
    BOOLEAN         reduce using rule 43 (conditional -> if_elif_bloc .)
    LPAREN          reduce using rule 43 (conditional -> if_elif_bloc .)
    IF              reduce using rule 43 (conditional -> if_elif_bloc .)
    NUMBER          reduce using rule 43 (conditional -> if_elif_bloc .)
    STRING          reduce using rule 43 (conditional -> if_elif_bloc .)
    $end            reduce using rule 43 (conditional -> if_elif_bloc .)
    RBRACE          reduce using rule 43 (conditional -> if_elif_bloc .)


state 24

    (81) expression -> term .
    (67) term -> term . MUL factor
    (68) term -> term . DIV factor
    (69) term -> term . IDIV factor
    (70) term -> term . MOD factor

    SUM             reduce using rule 81 (expression -> term .)
    SUB             reduce using rule 81 (expression -> term .)
    DECR            reduce using rule 81 (expression -> term .)
    INCR            reduce using rule 81 (expression -> term .)
    GT              reduce using rule 81 (expression -> term .)
    LT              reduce using rule 81 (expression -> term .)
    GE              reduce using rule 81 (expression -> term .)
    LE              reduce using rule 81 (expression -> term .)
    NE              reduce using rule 81 (expression -> term .)
    EQ              reduce using rule 81 (expression -> term .)
    LAND            reduce using rule 81 (expression -> term .)
    LOR             reduce using rule 81 (expression -> term .)
    COMMENT         reduce using rule 81 (expression -> term .)
    NEWLINE         reduce using rule 81 (expression -> term .)
    FUNCTION        reduce using rule 81 (expression -> term .)
    ID              reduce using rule 81 (expression -> term .)
    NULL            reduce using rule 81 (expression -> term .)
    SCAN            reduce using rule 81 (expression -> term .)
    PRINT           reduce using rule 81 (expression -> term .)
    FOR             reduce using rule 81 (expression -> term .)
    WHILE           reduce using rule 81 (expression -> term .)
    RETURN          reduce using rule 81 (expression -> term .)
    BREAK           reduce using rule 81 (expression -> term .)
    CONTINUE        reduce using rule 81 (expression -> term .)
    LNOT            reduce using rule 81 (expression -> term .)
    BOOLEAN         reduce using rule 81 (expression -> term .)
    LPAREN          reduce using rule 81 (expression -> term .)
    IF              reduce using rule 81 (expression -> term .)
    NUMBER          reduce using rule 81 (expression -> term .)
    STRING          reduce using rule 81 (expression -> term .)
    $end            reduce using rule 81 (expression -> term .)
    RPAREN          reduce using rule 81 (expression -> term .)
    SEMI            reduce using rule 81 (expression -> term .)
    RBRACE          reduce using rule 81 (expression -> term .)
    RBRACKET        reduce using rule 81 (expression -> term .)
    COMMA           reduce using rule 81 (expression -> term .)
    MUL             shift and go to state 70
    DIV             shift and go to state 71
    IDIV            shift and go to state 72
    MOD             shift and go to state 73


state 25

    (79) expression -> condition .

    SUM             reduce using rule 79 (expression -> condition .)
    SUB             reduce using rule 79 (expression -> condition .)
    DECR            reduce using rule 79 (expression -> condition .)
    INCR            reduce using rule 79 (expression -> condition .)
    GT              reduce using rule 79 (expression -> condition .)
    LT              reduce using rule 79 (expression -> condition .)
    GE              reduce using rule 79 (expression -> condition .)
    LE              reduce using rule 79 (expression -> condition .)
    NE              reduce using rule 79 (expression -> condition .)
    EQ              reduce using rule 79 (expression -> condition .)
    LAND            reduce using rule 79 (expression -> condition .)
    LOR             reduce using rule 79 (expression -> condition .)
    COMMENT         reduce using rule 79 (expression -> condition .)
    NEWLINE         reduce using rule 79 (expression -> condition .)
    FUNCTION        reduce using rule 79 (expression -> condition .)
    ID              reduce using rule 79 (expression -> condition .)
    NULL            reduce using rule 79 (expression -> condition .)
    SCAN            reduce using rule 79 (expression -> condition .)
    PRINT           reduce using rule 79 (expression -> condition .)
    FOR             reduce using rule 79 (expression -> condition .)
    WHILE           reduce using rule 79 (expression -> condition .)
    RETURN          reduce using rule 79 (expression -> condition .)
    BREAK           reduce using rule 79 (expression -> condition .)
    CONTINUE        reduce using rule 79 (expression -> condition .)
    LNOT            reduce using rule 79 (expression -> condition .)
    BOOLEAN         reduce using rule 79 (expression -> condition .)
    LPAREN          reduce using rule 79 (expression -> condition .)
    IF              reduce using rule 79 (expression -> condition .)
    NUMBER          reduce using rule 79 (expression -> condition .)
    STRING          reduce using rule 79 (expression -> condition .)
    $end            reduce using rule 79 (expression -> condition .)
    SEMI            reduce using rule 79 (expression -> condition .)
    RBRACE          reduce using rule 79 (expression -> condition .)
    RPAREN          reduce using rule 79 (expression -> condition .)
    RBRACKET        reduce using rule 79 (expression -> condition .)
    COMMA           reduce using rule 79 (expression -> condition .)


state 26

    (80) expression -> ternary_condition .

    SUM             reduce using rule 80 (expression -> ternary_condition .)
    SUB             reduce using rule 80 (expression -> ternary_condition .)
    DECR            reduce using rule 80 (expression -> ternary_condition .)
    INCR            reduce using rule 80 (expression -> ternary_condition .)
    GT              reduce using rule 80 (expression -> ternary_condition .)
    LT              reduce using rule 80 (expression -> ternary_condition .)
    GE              reduce using rule 80 (expression -> ternary_condition .)
    LE              reduce using rule 80 (expression -> ternary_condition .)
    NE              reduce using rule 80 (expression -> ternary_condition .)
    EQ              reduce using rule 80 (expression -> ternary_condition .)
    LAND            reduce using rule 80 (expression -> ternary_condition .)
    LOR             reduce using rule 80 (expression -> ternary_condition .)
    COMMENT         reduce using rule 80 (expression -> ternary_condition .)
    NEWLINE         reduce using rule 80 (expression -> ternary_condition .)
    FUNCTION        reduce using rule 80 (expression -> ternary_condition .)
    ID              reduce using rule 80 (expression -> ternary_condition .)
    NULL            reduce using rule 80 (expression -> ternary_condition .)
    SCAN            reduce using rule 80 (expression -> ternary_condition .)
    PRINT           reduce using rule 80 (expression -> ternary_condition .)
    FOR             reduce using rule 80 (expression -> ternary_condition .)
    WHILE           reduce using rule 80 (expression -> ternary_condition .)
    RETURN          reduce using rule 80 (expression -> ternary_condition .)
    BREAK           reduce using rule 80 (expression -> ternary_condition .)
    CONTINUE        reduce using rule 80 (expression -> ternary_condition .)
    LNOT            reduce using rule 80 (expression -> ternary_condition .)
    BOOLEAN         reduce using rule 80 (expression -> ternary_condition .)
    LPAREN          reduce using rule 80 (expression -> ternary_condition .)
    IF              reduce using rule 80 (expression -> ternary_condition .)
    NUMBER          reduce using rule 80 (expression -> ternary_condition .)
    STRING          reduce using rule 80 (expression -> ternary_condition .)
    $end            reduce using rule 80 (expression -> ternary_condition .)
    RPAREN          reduce using rule 80 (expression -> ternary_condition .)
    SEMI            reduce using rule 80 (expression -> ternary_condition .)
    RBRACE          reduce using rule 80 (expression -> ternary_condition .)
    RBRACKET        reduce using rule 80 (expression -> ternary_condition .)
    COMMA           reduce using rule 80 (expression -> ternary_condition .)


state 27

    (82) expression -> NULL .

    SUM             reduce using rule 82 (expression -> NULL .)
    SUB             reduce using rule 82 (expression -> NULL .)
    DECR            reduce using rule 82 (expression -> NULL .)
    INCR            reduce using rule 82 (expression -> NULL .)
    GT              reduce using rule 82 (expression -> NULL .)
    LT              reduce using rule 82 (expression -> NULL .)
    GE              reduce using rule 82 (expression -> NULL .)
    LE              reduce using rule 82 (expression -> NULL .)
    NE              reduce using rule 82 (expression -> NULL .)
    EQ              reduce using rule 82 (expression -> NULL .)
    LAND            reduce using rule 82 (expression -> NULL .)
    LOR             reduce using rule 82 (expression -> NULL .)
    COMMENT         reduce using rule 82 (expression -> NULL .)
    NEWLINE         reduce using rule 82 (expression -> NULL .)
    FUNCTION        reduce using rule 82 (expression -> NULL .)
    ID              reduce using rule 82 (expression -> NULL .)
    NULL            reduce using rule 82 (expression -> NULL .)
    SCAN            reduce using rule 82 (expression -> NULL .)
    PRINT           reduce using rule 82 (expression -> NULL .)
    FOR             reduce using rule 82 (expression -> NULL .)
    WHILE           reduce using rule 82 (expression -> NULL .)
    RETURN          reduce using rule 82 (expression -> NULL .)
    BREAK           reduce using rule 82 (expression -> NULL .)
    CONTINUE        reduce using rule 82 (expression -> NULL .)
    LNOT            reduce using rule 82 (expression -> NULL .)
    BOOLEAN         reduce using rule 82 (expression -> NULL .)
    LPAREN          reduce using rule 82 (expression -> NULL .)
    IF              reduce using rule 82 (expression -> NULL .)
    NUMBER          reduce using rule 82 (expression -> NULL .)
    STRING          reduce using rule 82 (expression -> NULL .)
    $end            reduce using rule 82 (expression -> NULL .)
    RPAREN          reduce using rule 82 (expression -> NULL .)
    SEMI            reduce using rule 82 (expression -> NULL .)
    RBRACE          reduce using rule 82 (expression -> NULL .)
    RBRACKET        reduce using rule 82 (expression -> NULL .)
    COMMA           reduce using rule 82 (expression -> NULL .)


state 28

    (23) input -> SCAN . LPAREN ID RPAREN

    LPAREN          shift and go to state 74


state 29

    (24) output -> PRINT . LPAREN plist RPAREN

    LPAREN          shift and go to state 75


state 30

    (59) for_loop -> FOR . LPAREN assignment SEMI condition SEMI expression RPAREN bloc

    LPAREN          shift and go to state 76


state 31

    (60) while_loop -> WHILE . LPAREN condition RPAREN bloc

    LPAREN          shift and go to state 77


state 32

    (57) return -> RETURN . expression
    (58) return -> RETURN . expression SEMI
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 78
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 33

    (63) break -> BREAK .
    (64) break -> BREAK . SEMI

    COMMENT         reduce using rule 63 (break -> BREAK .)
    NEWLINE         reduce using rule 63 (break -> BREAK .)
    FUNCTION        reduce using rule 63 (break -> BREAK .)
    ID              reduce using rule 63 (break -> BREAK .)
    NULL            reduce using rule 63 (break -> BREAK .)
    SCAN            reduce using rule 63 (break -> BREAK .)
    PRINT           reduce using rule 63 (break -> BREAK .)
    FOR             reduce using rule 63 (break -> BREAK .)
    WHILE           reduce using rule 63 (break -> BREAK .)
    RETURN          reduce using rule 63 (break -> BREAK .)
    BREAK           reduce using rule 63 (break -> BREAK .)
    CONTINUE        reduce using rule 63 (break -> BREAK .)
    LNOT            reduce using rule 63 (break -> BREAK .)
    BOOLEAN         reduce using rule 63 (break -> BREAK .)
    LPAREN          reduce using rule 63 (break -> BREAK .)
    IF              reduce using rule 63 (break -> BREAK .)
    NUMBER          reduce using rule 63 (break -> BREAK .)
    STRING          reduce using rule 63 (break -> BREAK .)
    $end            reduce using rule 63 (break -> BREAK .)
    RBRACE          reduce using rule 63 (break -> BREAK .)
    SEMI            shift and go to state 79


state 34

    (61) continue -> CONTINUE .
    (62) continue -> CONTINUE . SEMI

    COMMENT         reduce using rule 61 (continue -> CONTINUE .)
    NEWLINE         reduce using rule 61 (continue -> CONTINUE .)
    FUNCTION        reduce using rule 61 (continue -> CONTINUE .)
    ID              reduce using rule 61 (continue -> CONTINUE .)
    NULL            reduce using rule 61 (continue -> CONTINUE .)
    SCAN            reduce using rule 61 (continue -> CONTINUE .)
    PRINT           reduce using rule 61 (continue -> CONTINUE .)
    FOR             reduce using rule 61 (continue -> CONTINUE .)
    WHILE           reduce using rule 61 (continue -> CONTINUE .)
    RETURN          reduce using rule 61 (continue -> CONTINUE .)
    BREAK           reduce using rule 61 (continue -> CONTINUE .)
    CONTINUE        reduce using rule 61 (continue -> CONTINUE .)
    LNOT            reduce using rule 61 (continue -> CONTINUE .)
    BOOLEAN         reduce using rule 61 (continue -> CONTINUE .)
    LPAREN          reduce using rule 61 (continue -> CONTINUE .)
    IF              reduce using rule 61 (continue -> CONTINUE .)
    NUMBER          reduce using rule 61 (continue -> CONTINUE .)
    STRING          reduce using rule 61 (continue -> CONTINUE .)
    $end            reduce using rule 61 (continue -> CONTINUE .)
    RBRACE          reduce using rule 61 (continue -> CONTINUE .)
    SEMI            shift and go to state 80


state 35

    (41) if_elif_bloc -> if_bloc .

    ELSE            reduce using rule 41 (if_elif_bloc -> if_bloc .)
    COMMENT         reduce using rule 41 (if_elif_bloc -> if_bloc .)
    NEWLINE         reduce using rule 41 (if_elif_bloc -> if_bloc .)
    FUNCTION        reduce using rule 41 (if_elif_bloc -> if_bloc .)
    ID              reduce using rule 41 (if_elif_bloc -> if_bloc .)
    NULL            reduce using rule 41 (if_elif_bloc -> if_bloc .)
    SCAN            reduce using rule 41 (if_elif_bloc -> if_bloc .)
    PRINT           reduce using rule 41 (if_elif_bloc -> if_bloc .)
    FOR             reduce using rule 41 (if_elif_bloc -> if_bloc .)
    WHILE           reduce using rule 41 (if_elif_bloc -> if_bloc .)
    RETURN          reduce using rule 41 (if_elif_bloc -> if_bloc .)
    BREAK           reduce using rule 41 (if_elif_bloc -> if_bloc .)
    CONTINUE        reduce using rule 41 (if_elif_bloc -> if_bloc .)
    LNOT            reduce using rule 41 (if_elif_bloc -> if_bloc .)
    BOOLEAN         reduce using rule 41 (if_elif_bloc -> if_bloc .)
    LPAREN          reduce using rule 41 (if_elif_bloc -> if_bloc .)
    IF              reduce using rule 41 (if_elif_bloc -> if_bloc .)
    NUMBER          reduce using rule 41 (if_elif_bloc -> if_bloc .)
    STRING          reduce using rule 41 (if_elif_bloc -> if_bloc .)
    $end            reduce using rule 41 (if_elif_bloc -> if_bloc .)
    RBRACE          reduce using rule 41 (if_elif_bloc -> if_bloc .)


state 36

    (36) condition -> LNOT . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 81
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 37

    (37) condition -> BOOLEAN .

    SUM             reduce using rule 37 (condition -> BOOLEAN .)
    SUB             reduce using rule 37 (condition -> BOOLEAN .)
    DECR            reduce using rule 37 (condition -> BOOLEAN .)
    INCR            reduce using rule 37 (condition -> BOOLEAN .)
    GT              reduce using rule 37 (condition -> BOOLEAN .)
    LT              reduce using rule 37 (condition -> BOOLEAN .)
    GE              reduce using rule 37 (condition -> BOOLEAN .)
    LE              reduce using rule 37 (condition -> BOOLEAN .)
    NE              reduce using rule 37 (condition -> BOOLEAN .)
    EQ              reduce using rule 37 (condition -> BOOLEAN .)
    LAND            reduce using rule 37 (condition -> BOOLEAN .)
    LOR             reduce using rule 37 (condition -> BOOLEAN .)
    COMMENT         reduce using rule 37 (condition -> BOOLEAN .)
    NEWLINE         reduce using rule 37 (condition -> BOOLEAN .)
    FUNCTION        reduce using rule 37 (condition -> BOOLEAN .)
    ID              reduce using rule 37 (condition -> BOOLEAN .)
    NULL            reduce using rule 37 (condition -> BOOLEAN .)
    SCAN            reduce using rule 37 (condition -> BOOLEAN .)
    PRINT           reduce using rule 37 (condition -> BOOLEAN .)
    FOR             reduce using rule 37 (condition -> BOOLEAN .)
    WHILE           reduce using rule 37 (condition -> BOOLEAN .)
    RETURN          reduce using rule 37 (condition -> BOOLEAN .)
    BREAK           reduce using rule 37 (condition -> BOOLEAN .)
    CONTINUE        reduce using rule 37 (condition -> BOOLEAN .)
    LNOT            reduce using rule 37 (condition -> BOOLEAN .)
    BOOLEAN         reduce using rule 37 (condition -> BOOLEAN .)
    LPAREN          reduce using rule 37 (condition -> BOOLEAN .)
    IF              reduce using rule 37 (condition -> BOOLEAN .)
    NUMBER          reduce using rule 37 (condition -> BOOLEAN .)
    STRING          reduce using rule 37 (condition -> BOOLEAN .)
    $end            reduce using rule 37 (condition -> BOOLEAN .)
    RPAREN          reduce using rule 37 (condition -> BOOLEAN .)
    SEMI            reduce using rule 37 (condition -> BOOLEAN .)
    RBRACE          reduce using rule 37 (condition -> BOOLEAN .)
    RBRACKET        reduce using rule 37 (condition -> BOOLEAN .)
    COMMA           reduce using rule 37 (condition -> BOOLEAN .)


state 38

    (83) term -> factor .

    MUL             reduce using rule 83 (term -> factor .)
    DIV             reduce using rule 83 (term -> factor .)
    IDIV            reduce using rule 83 (term -> factor .)
    MOD             reduce using rule 83 (term -> factor .)
    SUM             reduce using rule 83 (term -> factor .)
    SUB             reduce using rule 83 (term -> factor .)
    DECR            reduce using rule 83 (term -> factor .)
    INCR            reduce using rule 83 (term -> factor .)
    GT              reduce using rule 83 (term -> factor .)
    LT              reduce using rule 83 (term -> factor .)
    GE              reduce using rule 83 (term -> factor .)
    LE              reduce using rule 83 (term -> factor .)
    NE              reduce using rule 83 (term -> factor .)
    EQ              reduce using rule 83 (term -> factor .)
    LAND            reduce using rule 83 (term -> factor .)
    LOR             reduce using rule 83 (term -> factor .)
    COMMENT         reduce using rule 83 (term -> factor .)
    NEWLINE         reduce using rule 83 (term -> factor .)
    FUNCTION        reduce using rule 83 (term -> factor .)
    ID              reduce using rule 83 (term -> factor .)
    NULL            reduce using rule 83 (term -> factor .)
    SCAN            reduce using rule 83 (term -> factor .)
    PRINT           reduce using rule 83 (term -> factor .)
    FOR             reduce using rule 83 (term -> factor .)
    WHILE           reduce using rule 83 (term -> factor .)
    RETURN          reduce using rule 83 (term -> factor .)
    BREAK           reduce using rule 83 (term -> factor .)
    CONTINUE        reduce using rule 83 (term -> factor .)
    LNOT            reduce using rule 83 (term -> factor .)
    BOOLEAN         reduce using rule 83 (term -> factor .)
    LPAREN          reduce using rule 83 (term -> factor .)
    IF              reduce using rule 83 (term -> factor .)
    NUMBER          reduce using rule 83 (term -> factor .)
    STRING          reduce using rule 83 (term -> factor .)
    $end            reduce using rule 83 (term -> factor .)
    RPAREN          reduce using rule 83 (term -> factor .)
    SEMI            reduce using rule 83 (term -> factor .)
    RBRACE          reduce using rule 83 (term -> factor .)
    RBRACKET        reduce using rule 83 (term -> factor .)
    COMMA           reduce using rule 83 (term -> factor .)


state 39

    (39) if_bloc -> IF . LPAREN condition RPAREN bloc

    LPAREN          shift and go to state 82


state 40

    (84) factor -> NUMBER .

    MUL             reduce using rule 84 (factor -> NUMBER .)
    DIV             reduce using rule 84 (factor -> NUMBER .)
    IDIV            reduce using rule 84 (factor -> NUMBER .)
    MOD             reduce using rule 84 (factor -> NUMBER .)
    SUM             reduce using rule 84 (factor -> NUMBER .)
    SUB             reduce using rule 84 (factor -> NUMBER .)
    DECR            reduce using rule 84 (factor -> NUMBER .)
    INCR            reduce using rule 84 (factor -> NUMBER .)
    GT              reduce using rule 84 (factor -> NUMBER .)
    LT              reduce using rule 84 (factor -> NUMBER .)
    GE              reduce using rule 84 (factor -> NUMBER .)
    LE              reduce using rule 84 (factor -> NUMBER .)
    NE              reduce using rule 84 (factor -> NUMBER .)
    EQ              reduce using rule 84 (factor -> NUMBER .)
    LAND            reduce using rule 84 (factor -> NUMBER .)
    LOR             reduce using rule 84 (factor -> NUMBER .)
    COMMENT         reduce using rule 84 (factor -> NUMBER .)
    NEWLINE         reduce using rule 84 (factor -> NUMBER .)
    FUNCTION        reduce using rule 84 (factor -> NUMBER .)
    ID              reduce using rule 84 (factor -> NUMBER .)
    NULL            reduce using rule 84 (factor -> NUMBER .)
    SCAN            reduce using rule 84 (factor -> NUMBER .)
    PRINT           reduce using rule 84 (factor -> NUMBER .)
    FOR             reduce using rule 84 (factor -> NUMBER .)
    WHILE           reduce using rule 84 (factor -> NUMBER .)
    RETURN          reduce using rule 84 (factor -> NUMBER .)
    BREAK           reduce using rule 84 (factor -> NUMBER .)
    CONTINUE        reduce using rule 84 (factor -> NUMBER .)
    LNOT            reduce using rule 84 (factor -> NUMBER .)
    BOOLEAN         reduce using rule 84 (factor -> NUMBER .)
    LPAREN          reduce using rule 84 (factor -> NUMBER .)
    IF              reduce using rule 84 (factor -> NUMBER .)
    NUMBER          reduce using rule 84 (factor -> NUMBER .)
    STRING          reduce using rule 84 (factor -> NUMBER .)
    $end            reduce using rule 84 (factor -> NUMBER .)
    RPAREN          reduce using rule 84 (factor -> NUMBER .)
    SEMI            reduce using rule 84 (factor -> NUMBER .)
    RBRACE          reduce using rule 84 (factor -> NUMBER .)
    RBRACKET        reduce using rule 84 (factor -> NUMBER .)
    COMMA           reduce using rule 84 (factor -> NUMBER .)


state 41

    (86) factor -> STRING .

    MUL             reduce using rule 86 (factor -> STRING .)
    DIV             reduce using rule 86 (factor -> STRING .)
    IDIV            reduce using rule 86 (factor -> STRING .)
    MOD             reduce using rule 86 (factor -> STRING .)
    SUM             reduce using rule 86 (factor -> STRING .)
    SUB             reduce using rule 86 (factor -> STRING .)
    DECR            reduce using rule 86 (factor -> STRING .)
    INCR            reduce using rule 86 (factor -> STRING .)
    GT              reduce using rule 86 (factor -> STRING .)
    LT              reduce using rule 86 (factor -> STRING .)
    GE              reduce using rule 86 (factor -> STRING .)
    LE              reduce using rule 86 (factor -> STRING .)
    NE              reduce using rule 86 (factor -> STRING .)
    EQ              reduce using rule 86 (factor -> STRING .)
    LAND            reduce using rule 86 (factor -> STRING .)
    LOR             reduce using rule 86 (factor -> STRING .)
    COMMENT         reduce using rule 86 (factor -> STRING .)
    NEWLINE         reduce using rule 86 (factor -> STRING .)
    FUNCTION        reduce using rule 86 (factor -> STRING .)
    ID              reduce using rule 86 (factor -> STRING .)
    NULL            reduce using rule 86 (factor -> STRING .)
    SCAN            reduce using rule 86 (factor -> STRING .)
    PRINT           reduce using rule 86 (factor -> STRING .)
    FOR             reduce using rule 86 (factor -> STRING .)
    WHILE           reduce using rule 86 (factor -> STRING .)
    RETURN          reduce using rule 86 (factor -> STRING .)
    BREAK           reduce using rule 86 (factor -> STRING .)
    CONTINUE        reduce using rule 86 (factor -> STRING .)
    LNOT            reduce using rule 86 (factor -> STRING .)
    BOOLEAN         reduce using rule 86 (factor -> STRING .)
    LPAREN          reduce using rule 86 (factor -> STRING .)
    IF              reduce using rule 86 (factor -> STRING .)
    NUMBER          reduce using rule 86 (factor -> STRING .)
    STRING          reduce using rule 86 (factor -> STRING .)
    $end            reduce using rule 86 (factor -> STRING .)
    RPAREN          reduce using rule 86 (factor -> STRING .)
    SEMI            reduce using rule 86 (factor -> STRING .)
    RBRACE          reduce using rule 86 (factor -> STRING .)
    RBRACKET        reduce using rule 86 (factor -> STRING .)
    COMMA           reduce using rule 86 (factor -> STRING .)


state 42

    (1) program -> program statement .
    (4) statement -> statement . command
    (6) command -> . function_def
    (7) command -> . function_call
    (8) command -> . conditional
    (9) command -> . expression
    (10) command -> . assignment
    (11) command -> . expression_ass
    (12) command -> . input
    (13) command -> . output
    (14) command -> . for_loop
    (15) command -> . while_loop
    (16) command -> . return
    (17) command -> . break
    (18) command -> . continue
    (19) command -> . COMMENT
    (20) command -> . NEWLINE
    (47) function_def -> . FUNCTION ID LPAREN param_list RPAREN bloc
    (48) function_def -> . FUNCTION ID LPAREN RPAREN bloc
    (49) function_call -> . ID LPAREN param_list_call RPAREN
    (50) function_call -> . ID LPAREN RPAREN
    (42) conditional -> . if_elif_bloc ELSE bloc
    (43) conditional -> . if_elif_bloc
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . ID ASSIGN LBRACKET list RBRACKET
    (73) expression_ass -> . ID SUM_ASS expression
    (74) expression_ass -> . ID SUB_ASS expression
    (75) expression_ass -> . ID MUL_ASS expression
    (76) expression_ass -> . ID DIV_ASS expression
    (77) expression_ass -> . ID IDIV_ASS expression
    (78) expression_ass -> . ID MOD_ASS expression
    (23) input -> . SCAN LPAREN ID RPAREN
    (24) output -> . PRINT LPAREN plist RPAREN
    (59) for_loop -> . FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc
    (60) while_loop -> . WHILE LPAREN condition RPAREN bloc
    (57) return -> . RETURN expression
    (58) return -> . RETURN expression SEMI
    (63) break -> . BREAK
    (64) break -> . BREAK SEMI
    (61) continue -> . CONTINUE
    (62) continue -> . CONTINUE SEMI
    (40) if_elif_bloc -> . if_elif_bloc ELSE if_bloc
    (41) if_elif_bloc -> . if_bloc
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (39) if_bloc -> . IF LPAREN condition RPAREN bloc
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for SCAN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LNOT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 1 (program -> program statement .)
    COMMENT         shift and go to state 18
    NEWLINE         shift and go to state 19
    FUNCTION        shift and go to state 20
    ID              shift and go to state 21
    NULL            shift and go to state 27
    SCAN            shift and go to state 28
    PRINT           shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    RETURN          shift and go to state 32
    BREAK           shift and go to state 33
    CONTINUE        shift and go to state 34
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    IF              shift and go to state 39
    NUMBER          shift and go to state 40
    STRING          shift and go to state 41

  ! COMMENT         [ reduce using rule 1 (program -> program statement .) ]
  ! NEWLINE         [ reduce using rule 1 (program -> program statement .) ]
  ! FUNCTION        [ reduce using rule 1 (program -> program statement .) ]
  ! ID              [ reduce using rule 1 (program -> program statement .) ]
  ! NULL            [ reduce using rule 1 (program -> program statement .) ]
  ! SCAN            [ reduce using rule 1 (program -> program statement .) ]
  ! PRINT           [ reduce using rule 1 (program -> program statement .) ]
  ! FOR             [ reduce using rule 1 (program -> program statement .) ]
  ! WHILE           [ reduce using rule 1 (program -> program statement .) ]
  ! RETURN          [ reduce using rule 1 (program -> program statement .) ]
  ! BREAK           [ reduce using rule 1 (program -> program statement .) ]
  ! CONTINUE        [ reduce using rule 1 (program -> program statement .) ]
  ! LNOT            [ reduce using rule 1 (program -> program statement .) ]
  ! BOOLEAN         [ reduce using rule 1 (program -> program statement .) ]
  ! LPAREN          [ reduce using rule 1 (program -> program statement .) ]
  ! IF              [ reduce using rule 1 (program -> program statement .) ]
  ! NUMBER          [ reduce using rule 1 (program -> program statement .) ]
  ! STRING          [ reduce using rule 1 (program -> program statement .) ]

    command                        shift and go to state 43
    function_def                   shift and go to state 5
    function_call                  shift and go to state 6
    conditional                    shift and go to state 7
    expression                     shift and go to state 8
    assignment                     shift and go to state 9
    expression_ass                 shift and go to state 10
    input                          shift and go to state 11
    output                         shift and go to state 12
    for_loop                       shift and go to state 13
    while_loop                     shift and go to state 14
    return                         shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    if_elif_bloc                   shift and go to state 23
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    if_bloc                        shift and go to state 35
    factor                         shift and go to state 38

state 43

    (4) statement -> statement command .

    COMMENT         reduce using rule 4 (statement -> statement command .)
    NEWLINE         reduce using rule 4 (statement -> statement command .)
    FUNCTION        reduce using rule 4 (statement -> statement command .)
    ID              reduce using rule 4 (statement -> statement command .)
    NULL            reduce using rule 4 (statement -> statement command .)
    SCAN            reduce using rule 4 (statement -> statement command .)
    PRINT           reduce using rule 4 (statement -> statement command .)
    FOR             reduce using rule 4 (statement -> statement command .)
    WHILE           reduce using rule 4 (statement -> statement command .)
    RETURN          reduce using rule 4 (statement -> statement command .)
    BREAK           reduce using rule 4 (statement -> statement command .)
    CONTINUE        reduce using rule 4 (statement -> statement command .)
    LNOT            reduce using rule 4 (statement -> statement command .)
    BOOLEAN         reduce using rule 4 (statement -> statement command .)
    LPAREN          reduce using rule 4 (statement -> statement command .)
    IF              reduce using rule 4 (statement -> statement command .)
    NUMBER          reduce using rule 4 (statement -> statement command .)
    STRING          reduce using rule 4 (statement -> statement command .)
    $end            reduce using rule 4 (statement -> statement command .)


state 44

    (65) expression -> expression SUM . term
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41
    LPAREN          shift and go to state 84

    term                           shift and go to state 83
    factor                         shift and go to state 38

state 45

    (66) expression -> expression SUB . term
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41
    LPAREN          shift and go to state 84

    term                           shift and go to state 85
    factor                         shift and go to state 38

state 46

    (71) expression -> expression DECR .

    SUM             reduce using rule 71 (expression -> expression DECR .)
    SUB             reduce using rule 71 (expression -> expression DECR .)
    DECR            reduce using rule 71 (expression -> expression DECR .)
    INCR            reduce using rule 71 (expression -> expression DECR .)
    GT              reduce using rule 71 (expression -> expression DECR .)
    LT              reduce using rule 71 (expression -> expression DECR .)
    GE              reduce using rule 71 (expression -> expression DECR .)
    LE              reduce using rule 71 (expression -> expression DECR .)
    NE              reduce using rule 71 (expression -> expression DECR .)
    EQ              reduce using rule 71 (expression -> expression DECR .)
    LAND            reduce using rule 71 (expression -> expression DECR .)
    LOR             reduce using rule 71 (expression -> expression DECR .)
    COMMENT         reduce using rule 71 (expression -> expression DECR .)
    NEWLINE         reduce using rule 71 (expression -> expression DECR .)
    FUNCTION        reduce using rule 71 (expression -> expression DECR .)
    ID              reduce using rule 71 (expression -> expression DECR .)
    NULL            reduce using rule 71 (expression -> expression DECR .)
    SCAN            reduce using rule 71 (expression -> expression DECR .)
    PRINT           reduce using rule 71 (expression -> expression DECR .)
    FOR             reduce using rule 71 (expression -> expression DECR .)
    WHILE           reduce using rule 71 (expression -> expression DECR .)
    RETURN          reduce using rule 71 (expression -> expression DECR .)
    BREAK           reduce using rule 71 (expression -> expression DECR .)
    CONTINUE        reduce using rule 71 (expression -> expression DECR .)
    LNOT            reduce using rule 71 (expression -> expression DECR .)
    BOOLEAN         reduce using rule 71 (expression -> expression DECR .)
    LPAREN          reduce using rule 71 (expression -> expression DECR .)
    IF              reduce using rule 71 (expression -> expression DECR .)
    NUMBER          reduce using rule 71 (expression -> expression DECR .)
    STRING          reduce using rule 71 (expression -> expression DECR .)
    $end            reduce using rule 71 (expression -> expression DECR .)
    RPAREN          reduce using rule 71 (expression -> expression DECR .)
    SEMI            reduce using rule 71 (expression -> expression DECR .)
    RBRACE          reduce using rule 71 (expression -> expression DECR .)
    RBRACKET        reduce using rule 71 (expression -> expression DECR .)
    COMMA           reduce using rule 71 (expression -> expression DECR .)


state 47

    (72) expression -> expression INCR .

    SUM             reduce using rule 72 (expression -> expression INCR .)
    SUB             reduce using rule 72 (expression -> expression INCR .)
    DECR            reduce using rule 72 (expression -> expression INCR .)
    INCR            reduce using rule 72 (expression -> expression INCR .)
    GT              reduce using rule 72 (expression -> expression INCR .)
    LT              reduce using rule 72 (expression -> expression INCR .)
    GE              reduce using rule 72 (expression -> expression INCR .)
    LE              reduce using rule 72 (expression -> expression INCR .)
    NE              reduce using rule 72 (expression -> expression INCR .)
    EQ              reduce using rule 72 (expression -> expression INCR .)
    LAND            reduce using rule 72 (expression -> expression INCR .)
    LOR             reduce using rule 72 (expression -> expression INCR .)
    COMMENT         reduce using rule 72 (expression -> expression INCR .)
    NEWLINE         reduce using rule 72 (expression -> expression INCR .)
    FUNCTION        reduce using rule 72 (expression -> expression INCR .)
    ID              reduce using rule 72 (expression -> expression INCR .)
    NULL            reduce using rule 72 (expression -> expression INCR .)
    SCAN            reduce using rule 72 (expression -> expression INCR .)
    PRINT           reduce using rule 72 (expression -> expression INCR .)
    FOR             reduce using rule 72 (expression -> expression INCR .)
    WHILE           reduce using rule 72 (expression -> expression INCR .)
    RETURN          reduce using rule 72 (expression -> expression INCR .)
    BREAK           reduce using rule 72 (expression -> expression INCR .)
    CONTINUE        reduce using rule 72 (expression -> expression INCR .)
    LNOT            reduce using rule 72 (expression -> expression INCR .)
    BOOLEAN         reduce using rule 72 (expression -> expression INCR .)
    LPAREN          reduce using rule 72 (expression -> expression INCR .)
    IF              reduce using rule 72 (expression -> expression INCR .)
    NUMBER          reduce using rule 72 (expression -> expression INCR .)
    STRING          reduce using rule 72 (expression -> expression INCR .)
    $end            reduce using rule 72 (expression -> expression INCR .)
    RPAREN          reduce using rule 72 (expression -> expression INCR .)
    SEMI            reduce using rule 72 (expression -> expression INCR .)
    RBRACE          reduce using rule 72 (expression -> expression INCR .)
    RBRACKET        reduce using rule 72 (expression -> expression INCR .)
    COMMA           reduce using rule 72 (expression -> expression INCR .)


state 48

    (28) condition -> expression GT . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 86
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 49

    (29) condition -> expression LT . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 87
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 50

    (30) condition -> expression GE . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 88
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 51

    (31) condition -> expression LE . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 89
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 52

    (32) condition -> expression NE . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 90
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 53

    (33) condition -> expression EQ . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 91
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 54

    (34) condition -> expression LAND . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 92
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 55

    (35) condition -> expression LOR . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 93
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 56

    (47) function_def -> FUNCTION ID . LPAREN param_list RPAREN bloc
    (48) function_def -> FUNCTION ID . LPAREN RPAREN bloc

    LPAREN          shift and go to state 94


state 57

    (49) function_call -> ID LPAREN . param_list_call RPAREN
    (50) function_call -> ID LPAREN . RPAREN
    (51) param_list_call -> . param_list_call COMMA param_call
    (52) param_list_call -> . param_call
    (53) param_call -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    RPAREN          shift and go to state 96
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41
    LPAREN          shift and go to state 84

    param_list_call                shift and go to state 95
    param_call                     shift and go to state 97
    factor                         shift and go to state 98

state 58

    (21) assignment -> ID ASSIGN . expression
    (22) assignment -> ID ASSIGN . LBRACKET list RBRACKET
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    LBRACKET        shift and go to state 100
    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 99
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 59

    (87) factor -> ID LBRACKET . expression RBRACKET
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 101
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 60

    (73) expression_ass -> ID SUM_ASS . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 102
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 61

    (74) expression_ass -> ID SUB_ASS . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 103
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 62

    (75) expression_ass -> ID MUL_ASS . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 104
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 63

    (76) expression_ass -> ID DIV_ASS . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 105
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 64

    (77) expression_ass -> ID IDIV_ASS . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 106
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 65

    (78) expression_ass -> ID MOD_ASS . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 107
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 66

    (38) ternary_condition -> LPAREN condition . RPAREN QUES bloc COLON bloc
    (79) expression -> condition .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 108
    GT              reduce using rule 79 (expression -> condition .)
    LT              reduce using rule 79 (expression -> condition .)
    GE              reduce using rule 79 (expression -> condition .)
    LE              reduce using rule 79 (expression -> condition .)
    NE              reduce using rule 79 (expression -> condition .)
    EQ              reduce using rule 79 (expression -> condition .)
    LAND            reduce using rule 79 (expression -> condition .)
    LOR             reduce using rule 79 (expression -> condition .)
    SUM             reduce using rule 79 (expression -> condition .)
    SUB             reduce using rule 79 (expression -> condition .)
    DECR            reduce using rule 79 (expression -> condition .)
    INCR            reduce using rule 79 (expression -> condition .)

  ! RPAREN          [ reduce using rule 79 (expression -> condition .) ]


state 67

    (88) factor -> LPAREN expression . RPAREN
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR

    RPAREN          shift and go to state 109
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47


state 68

    (85) factor -> ID .
    (87) factor -> ID . LBRACKET expression RBRACKET

    MUL             reduce using rule 85 (factor -> ID .)
    DIV             reduce using rule 85 (factor -> ID .)
    IDIV            reduce using rule 85 (factor -> ID .)
    MOD             reduce using rule 85 (factor -> ID .)
    RPAREN          reduce using rule 85 (factor -> ID .)
    GT              reduce using rule 85 (factor -> ID .)
    LT              reduce using rule 85 (factor -> ID .)
    GE              reduce using rule 85 (factor -> ID .)
    LE              reduce using rule 85 (factor -> ID .)
    NE              reduce using rule 85 (factor -> ID .)
    EQ              reduce using rule 85 (factor -> ID .)
    LAND            reduce using rule 85 (factor -> ID .)
    LOR             reduce using rule 85 (factor -> ID .)
    SUM             reduce using rule 85 (factor -> ID .)
    SUB             reduce using rule 85 (factor -> ID .)
    DECR            reduce using rule 85 (factor -> ID .)
    INCR            reduce using rule 85 (factor -> ID .)
    SEMI            reduce using rule 85 (factor -> ID .)
    COMMENT         reduce using rule 85 (factor -> ID .)
    NEWLINE         reduce using rule 85 (factor -> ID .)
    FUNCTION        reduce using rule 85 (factor -> ID .)
    ID              reduce using rule 85 (factor -> ID .)
    NULL            reduce using rule 85 (factor -> ID .)
    SCAN            reduce using rule 85 (factor -> ID .)
    PRINT           reduce using rule 85 (factor -> ID .)
    FOR             reduce using rule 85 (factor -> ID .)
    WHILE           reduce using rule 85 (factor -> ID .)
    RETURN          reduce using rule 85 (factor -> ID .)
    BREAK           reduce using rule 85 (factor -> ID .)
    CONTINUE        reduce using rule 85 (factor -> ID .)
    LNOT            reduce using rule 85 (factor -> ID .)
    BOOLEAN         reduce using rule 85 (factor -> ID .)
    LPAREN          reduce using rule 85 (factor -> ID .)
    IF              reduce using rule 85 (factor -> ID .)
    NUMBER          reduce using rule 85 (factor -> ID .)
    STRING          reduce using rule 85 (factor -> ID .)
    $end            reduce using rule 85 (factor -> ID .)
    RBRACE          reduce using rule 85 (factor -> ID .)
    RBRACKET        reduce using rule 85 (factor -> ID .)
    COMMA           reduce using rule 85 (factor -> ID .)
    LBRACKET        shift and go to state 59


state 69

    (42) conditional -> if_elif_bloc ELSE . bloc
    (40) if_elif_bloc -> if_elif_bloc ELSE . if_bloc
    (44) bloc -> . LBRACE stat_bloc RBRACE
    (39) if_bloc -> . IF LPAREN condition RPAREN bloc

    LBRACE          shift and go to state 112
    IF              shift and go to state 39

    bloc                           shift and go to state 110
    if_bloc                        shift and go to state 111

state 70

    (67) term -> term MUL . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41
    LPAREN          shift and go to state 84

    factor                         shift and go to state 113

state 71

    (68) term -> term DIV . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41
    LPAREN          shift and go to state 84

    factor                         shift and go to state 114

state 72

    (69) term -> term IDIV . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41
    LPAREN          shift and go to state 84

    factor                         shift and go to state 115

state 73

    (70) term -> term MOD . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41
    LPAREN          shift and go to state 84

    factor                         shift and go to state 116

state 74

    (23) input -> SCAN LPAREN . ID RPAREN

    ID              shift and go to state 117


state 75

    (24) output -> PRINT LPAREN . plist RPAREN
    (25) plist -> . pitem
    (26) plist -> . plist COMMA pitem
    (27) pitem -> . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    plist                          shift and go to state 118
    pitem                          shift and go to state 119
    expression                     shift and go to state 120
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 76

    (59) for_loop -> FOR LPAREN . assignment SEMI condition SEMI expression RPAREN bloc
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . ID ASSIGN LBRACKET list RBRACKET

    ID              shift and go to state 122

    assignment                     shift and go to state 121

state 77

    (60) while_loop -> WHILE LPAREN . condition RPAREN bloc
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    NULL            shift and go to state 27
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    condition                      shift and go to state 123
    expression                     shift and go to state 124
    term                           shift and go to state 24
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 78

    (57) return -> RETURN expression .
    (58) return -> RETURN expression . SEMI
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

    COMMENT         reduce using rule 57 (return -> RETURN expression .)
    NEWLINE         reduce using rule 57 (return -> RETURN expression .)
    FUNCTION        reduce using rule 57 (return -> RETURN expression .)
    ID              reduce using rule 57 (return -> RETURN expression .)
    NULL            reduce using rule 57 (return -> RETURN expression .)
    SCAN            reduce using rule 57 (return -> RETURN expression .)
    PRINT           reduce using rule 57 (return -> RETURN expression .)
    FOR             reduce using rule 57 (return -> RETURN expression .)
    WHILE           reduce using rule 57 (return -> RETURN expression .)
    RETURN          reduce using rule 57 (return -> RETURN expression .)
    BREAK           reduce using rule 57 (return -> RETURN expression .)
    CONTINUE        reduce using rule 57 (return -> RETURN expression .)
    LNOT            reduce using rule 57 (return -> RETURN expression .)
    BOOLEAN         reduce using rule 57 (return -> RETURN expression .)
    LPAREN          reduce using rule 57 (return -> RETURN expression .)
    IF              reduce using rule 57 (return -> RETURN expression .)
    NUMBER          reduce using rule 57 (return -> RETURN expression .)
    STRING          reduce using rule 57 (return -> RETURN expression .)
    $end            reduce using rule 57 (return -> RETURN expression .)
    RBRACE          reduce using rule 57 (return -> RETURN expression .)
    SEMI            shift and go to state 125
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55


state 79

    (64) break -> BREAK SEMI .

    COMMENT         reduce using rule 64 (break -> BREAK SEMI .)
    NEWLINE         reduce using rule 64 (break -> BREAK SEMI .)
    FUNCTION        reduce using rule 64 (break -> BREAK SEMI .)
    ID              reduce using rule 64 (break -> BREAK SEMI .)
    NULL            reduce using rule 64 (break -> BREAK SEMI .)
    SCAN            reduce using rule 64 (break -> BREAK SEMI .)
    PRINT           reduce using rule 64 (break -> BREAK SEMI .)
    FOR             reduce using rule 64 (break -> BREAK SEMI .)
    WHILE           reduce using rule 64 (break -> BREAK SEMI .)
    RETURN          reduce using rule 64 (break -> BREAK SEMI .)
    BREAK           reduce using rule 64 (break -> BREAK SEMI .)
    CONTINUE        reduce using rule 64 (break -> BREAK SEMI .)
    LNOT            reduce using rule 64 (break -> BREAK SEMI .)
    BOOLEAN         reduce using rule 64 (break -> BREAK SEMI .)
    LPAREN          reduce using rule 64 (break -> BREAK SEMI .)
    IF              reduce using rule 64 (break -> BREAK SEMI .)
    NUMBER          reduce using rule 64 (break -> BREAK SEMI .)
    STRING          reduce using rule 64 (break -> BREAK SEMI .)
    $end            reduce using rule 64 (break -> BREAK SEMI .)
    RBRACE          reduce using rule 64 (break -> BREAK SEMI .)


state 80

    (62) continue -> CONTINUE SEMI .

    COMMENT         reduce using rule 62 (continue -> CONTINUE SEMI .)
    NEWLINE         reduce using rule 62 (continue -> CONTINUE SEMI .)
    FUNCTION        reduce using rule 62 (continue -> CONTINUE SEMI .)
    ID              reduce using rule 62 (continue -> CONTINUE SEMI .)
    NULL            reduce using rule 62 (continue -> CONTINUE SEMI .)
    SCAN            reduce using rule 62 (continue -> CONTINUE SEMI .)
    PRINT           reduce using rule 62 (continue -> CONTINUE SEMI .)
    FOR             reduce using rule 62 (continue -> CONTINUE SEMI .)
    WHILE           reduce using rule 62 (continue -> CONTINUE SEMI .)
    RETURN          reduce using rule 62 (continue -> CONTINUE SEMI .)
    BREAK           reduce using rule 62 (continue -> CONTINUE SEMI .)
    CONTINUE        reduce using rule 62 (continue -> CONTINUE SEMI .)
    LNOT            reduce using rule 62 (continue -> CONTINUE SEMI .)
    BOOLEAN         reduce using rule 62 (continue -> CONTINUE SEMI .)
    LPAREN          reduce using rule 62 (continue -> CONTINUE SEMI .)
    IF              reduce using rule 62 (continue -> CONTINUE SEMI .)
    NUMBER          reduce using rule 62 (continue -> CONTINUE SEMI .)
    STRING          reduce using rule 62 (continue -> CONTINUE SEMI .)
    $end            reduce using rule 62 (continue -> CONTINUE SEMI .)
    RBRACE          reduce using rule 62 (continue -> CONTINUE SEMI .)


state 81

    (36) condition -> LNOT expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for DECR resolved as shift
  ! shift/reduce conflict for INCR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
    COMMENT         reduce using rule 36 (condition -> LNOT expression .)
    NEWLINE         reduce using rule 36 (condition -> LNOT expression .)
    FUNCTION        reduce using rule 36 (condition -> LNOT expression .)
    ID              reduce using rule 36 (condition -> LNOT expression .)
    NULL            reduce using rule 36 (condition -> LNOT expression .)
    SCAN            reduce using rule 36 (condition -> LNOT expression .)
    PRINT           reduce using rule 36 (condition -> LNOT expression .)
    FOR             reduce using rule 36 (condition -> LNOT expression .)
    WHILE           reduce using rule 36 (condition -> LNOT expression .)
    RETURN          reduce using rule 36 (condition -> LNOT expression .)
    BREAK           reduce using rule 36 (condition -> LNOT expression .)
    CONTINUE        reduce using rule 36 (condition -> LNOT expression .)
    LNOT            reduce using rule 36 (condition -> LNOT expression .)
    BOOLEAN         reduce using rule 36 (condition -> LNOT expression .)
    LPAREN          reduce using rule 36 (condition -> LNOT expression .)
    IF              reduce using rule 36 (condition -> LNOT expression .)
    NUMBER          reduce using rule 36 (condition -> LNOT expression .)
    STRING          reduce using rule 36 (condition -> LNOT expression .)
    $end            reduce using rule 36 (condition -> LNOT expression .)
    RPAREN          reduce using rule 36 (condition -> LNOT expression .)
    SEMI            reduce using rule 36 (condition -> LNOT expression .)
    RBRACE          reduce using rule 36 (condition -> LNOT expression .)
    RBRACKET        reduce using rule 36 (condition -> LNOT expression .)
    COMMA           reduce using rule 36 (condition -> LNOT expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55

  ! SUM             [ reduce using rule 36 (condition -> LNOT expression .) ]
  ! SUB             [ reduce using rule 36 (condition -> LNOT expression .) ]
  ! DECR            [ reduce using rule 36 (condition -> LNOT expression .) ]
  ! INCR            [ reduce using rule 36 (condition -> LNOT expression .) ]
  ! GT              [ reduce using rule 36 (condition -> LNOT expression .) ]
  ! LT              [ reduce using rule 36 (condition -> LNOT expression .) ]
  ! GE              [ reduce using rule 36 (condition -> LNOT expression .) ]
  ! LE              [ reduce using rule 36 (condition -> LNOT expression .) ]
  ! NE              [ reduce using rule 36 (condition -> LNOT expression .) ]
  ! EQ              [ reduce using rule 36 (condition -> LNOT expression .) ]
  ! LAND            [ reduce using rule 36 (condition -> LNOT expression .) ]
  ! LOR             [ reduce using rule 36 (condition -> LNOT expression .) ]


state 82

    (39) if_bloc -> IF LPAREN . condition RPAREN bloc
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    NULL            shift and go to state 27
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    condition                      shift and go to state 126
    expression                     shift and go to state 124
    term                           shift and go to state 24
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 83

    (65) expression -> expression SUM term .
    (67) term -> term . MUL factor
    (68) term -> term . DIV factor
    (69) term -> term . IDIV factor
    (70) term -> term . MOD factor

    SUM             reduce using rule 65 (expression -> expression SUM term .)
    SUB             reduce using rule 65 (expression -> expression SUM term .)
    DECR            reduce using rule 65 (expression -> expression SUM term .)
    INCR            reduce using rule 65 (expression -> expression SUM term .)
    GT              reduce using rule 65 (expression -> expression SUM term .)
    LT              reduce using rule 65 (expression -> expression SUM term .)
    GE              reduce using rule 65 (expression -> expression SUM term .)
    LE              reduce using rule 65 (expression -> expression SUM term .)
    NE              reduce using rule 65 (expression -> expression SUM term .)
    EQ              reduce using rule 65 (expression -> expression SUM term .)
    LAND            reduce using rule 65 (expression -> expression SUM term .)
    LOR             reduce using rule 65 (expression -> expression SUM term .)
    COMMENT         reduce using rule 65 (expression -> expression SUM term .)
    NEWLINE         reduce using rule 65 (expression -> expression SUM term .)
    FUNCTION        reduce using rule 65 (expression -> expression SUM term .)
    ID              reduce using rule 65 (expression -> expression SUM term .)
    NULL            reduce using rule 65 (expression -> expression SUM term .)
    SCAN            reduce using rule 65 (expression -> expression SUM term .)
    PRINT           reduce using rule 65 (expression -> expression SUM term .)
    FOR             reduce using rule 65 (expression -> expression SUM term .)
    WHILE           reduce using rule 65 (expression -> expression SUM term .)
    RETURN          reduce using rule 65 (expression -> expression SUM term .)
    BREAK           reduce using rule 65 (expression -> expression SUM term .)
    CONTINUE        reduce using rule 65 (expression -> expression SUM term .)
    LNOT            reduce using rule 65 (expression -> expression SUM term .)
    BOOLEAN         reduce using rule 65 (expression -> expression SUM term .)
    LPAREN          reduce using rule 65 (expression -> expression SUM term .)
    IF              reduce using rule 65 (expression -> expression SUM term .)
    NUMBER          reduce using rule 65 (expression -> expression SUM term .)
    STRING          reduce using rule 65 (expression -> expression SUM term .)
    $end            reduce using rule 65 (expression -> expression SUM term .)
    RPAREN          reduce using rule 65 (expression -> expression SUM term .)
    SEMI            reduce using rule 65 (expression -> expression SUM term .)
    RBRACE          reduce using rule 65 (expression -> expression SUM term .)
    RBRACKET        reduce using rule 65 (expression -> expression SUM term .)
    COMMA           reduce using rule 65 (expression -> expression SUM term .)
    MUL             shift and go to state 70
    DIV             shift and go to state 71
    IDIV            shift and go to state 72
    MOD             shift and go to state 73


state 84

    (88) factor -> LPAREN . expression RPAREN
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    expression                     shift and go to state 127
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 85

    (66) expression -> expression SUB term .
    (67) term -> term . MUL factor
    (68) term -> term . DIV factor
    (69) term -> term . IDIV factor
    (70) term -> term . MOD factor

    SUM             reduce using rule 66 (expression -> expression SUB term .)
    SUB             reduce using rule 66 (expression -> expression SUB term .)
    DECR            reduce using rule 66 (expression -> expression SUB term .)
    INCR            reduce using rule 66 (expression -> expression SUB term .)
    GT              reduce using rule 66 (expression -> expression SUB term .)
    LT              reduce using rule 66 (expression -> expression SUB term .)
    GE              reduce using rule 66 (expression -> expression SUB term .)
    LE              reduce using rule 66 (expression -> expression SUB term .)
    NE              reduce using rule 66 (expression -> expression SUB term .)
    EQ              reduce using rule 66 (expression -> expression SUB term .)
    LAND            reduce using rule 66 (expression -> expression SUB term .)
    LOR             reduce using rule 66 (expression -> expression SUB term .)
    COMMENT         reduce using rule 66 (expression -> expression SUB term .)
    NEWLINE         reduce using rule 66 (expression -> expression SUB term .)
    FUNCTION        reduce using rule 66 (expression -> expression SUB term .)
    ID              reduce using rule 66 (expression -> expression SUB term .)
    NULL            reduce using rule 66 (expression -> expression SUB term .)
    SCAN            reduce using rule 66 (expression -> expression SUB term .)
    PRINT           reduce using rule 66 (expression -> expression SUB term .)
    FOR             reduce using rule 66 (expression -> expression SUB term .)
    WHILE           reduce using rule 66 (expression -> expression SUB term .)
    RETURN          reduce using rule 66 (expression -> expression SUB term .)
    BREAK           reduce using rule 66 (expression -> expression SUB term .)
    CONTINUE        reduce using rule 66 (expression -> expression SUB term .)
    LNOT            reduce using rule 66 (expression -> expression SUB term .)
    BOOLEAN         reduce using rule 66 (expression -> expression SUB term .)
    LPAREN          reduce using rule 66 (expression -> expression SUB term .)
    IF              reduce using rule 66 (expression -> expression SUB term .)
    NUMBER          reduce using rule 66 (expression -> expression SUB term .)
    STRING          reduce using rule 66 (expression -> expression SUB term .)
    $end            reduce using rule 66 (expression -> expression SUB term .)
    RPAREN          reduce using rule 66 (expression -> expression SUB term .)
    SEMI            reduce using rule 66 (expression -> expression SUB term .)
    RBRACE          reduce using rule 66 (expression -> expression SUB term .)
    RBRACKET        reduce using rule 66 (expression -> expression SUB term .)
    COMMA           reduce using rule 66 (expression -> expression SUB term .)
    MUL             shift and go to state 70
    DIV             shift and go to state 71
    IDIV            shift and go to state 72
    MOD             shift and go to state 73


state 86

    (28) condition -> expression GT expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

    DECR            reduce using rule 28 (condition -> expression GT expression .)
    INCR            reduce using rule 28 (condition -> expression GT expression .)
    GT              reduce using rule 28 (condition -> expression GT expression .)
    LT              reduce using rule 28 (condition -> expression GT expression .)
    GE              reduce using rule 28 (condition -> expression GT expression .)
    LE              reduce using rule 28 (condition -> expression GT expression .)
    NE              reduce using rule 28 (condition -> expression GT expression .)
    EQ              reduce using rule 28 (condition -> expression GT expression .)
    LAND            reduce using rule 28 (condition -> expression GT expression .)
    LOR             reduce using rule 28 (condition -> expression GT expression .)
    COMMENT         reduce using rule 28 (condition -> expression GT expression .)
    NEWLINE         reduce using rule 28 (condition -> expression GT expression .)
    FUNCTION        reduce using rule 28 (condition -> expression GT expression .)
    ID              reduce using rule 28 (condition -> expression GT expression .)
    NULL            reduce using rule 28 (condition -> expression GT expression .)
    SCAN            reduce using rule 28 (condition -> expression GT expression .)
    PRINT           reduce using rule 28 (condition -> expression GT expression .)
    FOR             reduce using rule 28 (condition -> expression GT expression .)
    WHILE           reduce using rule 28 (condition -> expression GT expression .)
    RETURN          reduce using rule 28 (condition -> expression GT expression .)
    BREAK           reduce using rule 28 (condition -> expression GT expression .)
    CONTINUE        reduce using rule 28 (condition -> expression GT expression .)
    LNOT            reduce using rule 28 (condition -> expression GT expression .)
    BOOLEAN         reduce using rule 28 (condition -> expression GT expression .)
    LPAREN          reduce using rule 28 (condition -> expression GT expression .)
    IF              reduce using rule 28 (condition -> expression GT expression .)
    NUMBER          reduce using rule 28 (condition -> expression GT expression .)
    STRING          reduce using rule 28 (condition -> expression GT expression .)
    $end            reduce using rule 28 (condition -> expression GT expression .)
    RPAREN          reduce using rule 28 (condition -> expression GT expression .)
    SEMI            reduce using rule 28 (condition -> expression GT expression .)
    RBRACE          reduce using rule 28 (condition -> expression GT expression .)
    RBRACKET        reduce using rule 28 (condition -> expression GT expression .)
    COMMA           reduce using rule 28 (condition -> expression GT expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45

  ! SUM             [ reduce using rule 28 (condition -> expression GT expression .) ]
  ! SUB             [ reduce using rule 28 (condition -> expression GT expression .) ]
  ! DECR            [ shift and go to state 46 ]
  ! INCR            [ shift and go to state 47 ]
  ! GT              [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! GE              [ shift and go to state 50 ]
  ! LE              [ shift and go to state 51 ]
  ! NE              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! LAND            [ shift and go to state 54 ]
  ! LOR             [ shift and go to state 55 ]


state 87

    (29) condition -> expression LT expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

    DECR            reduce using rule 29 (condition -> expression LT expression .)
    INCR            reduce using rule 29 (condition -> expression LT expression .)
    GT              reduce using rule 29 (condition -> expression LT expression .)
    LT              reduce using rule 29 (condition -> expression LT expression .)
    GE              reduce using rule 29 (condition -> expression LT expression .)
    LE              reduce using rule 29 (condition -> expression LT expression .)
    NE              reduce using rule 29 (condition -> expression LT expression .)
    EQ              reduce using rule 29 (condition -> expression LT expression .)
    LAND            reduce using rule 29 (condition -> expression LT expression .)
    LOR             reduce using rule 29 (condition -> expression LT expression .)
    COMMENT         reduce using rule 29 (condition -> expression LT expression .)
    NEWLINE         reduce using rule 29 (condition -> expression LT expression .)
    FUNCTION        reduce using rule 29 (condition -> expression LT expression .)
    ID              reduce using rule 29 (condition -> expression LT expression .)
    NULL            reduce using rule 29 (condition -> expression LT expression .)
    SCAN            reduce using rule 29 (condition -> expression LT expression .)
    PRINT           reduce using rule 29 (condition -> expression LT expression .)
    FOR             reduce using rule 29 (condition -> expression LT expression .)
    WHILE           reduce using rule 29 (condition -> expression LT expression .)
    RETURN          reduce using rule 29 (condition -> expression LT expression .)
    BREAK           reduce using rule 29 (condition -> expression LT expression .)
    CONTINUE        reduce using rule 29 (condition -> expression LT expression .)
    LNOT            reduce using rule 29 (condition -> expression LT expression .)
    BOOLEAN         reduce using rule 29 (condition -> expression LT expression .)
    LPAREN          reduce using rule 29 (condition -> expression LT expression .)
    IF              reduce using rule 29 (condition -> expression LT expression .)
    NUMBER          reduce using rule 29 (condition -> expression LT expression .)
    STRING          reduce using rule 29 (condition -> expression LT expression .)
    $end            reduce using rule 29 (condition -> expression LT expression .)
    RPAREN          reduce using rule 29 (condition -> expression LT expression .)
    SEMI            reduce using rule 29 (condition -> expression LT expression .)
    RBRACE          reduce using rule 29 (condition -> expression LT expression .)
    RBRACKET        reduce using rule 29 (condition -> expression LT expression .)
    COMMA           reduce using rule 29 (condition -> expression LT expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45

  ! SUM             [ reduce using rule 29 (condition -> expression LT expression .) ]
  ! SUB             [ reduce using rule 29 (condition -> expression LT expression .) ]
  ! DECR            [ shift and go to state 46 ]
  ! INCR            [ shift and go to state 47 ]
  ! GT              [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! GE              [ shift and go to state 50 ]
  ! LE              [ shift and go to state 51 ]
  ! NE              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! LAND            [ shift and go to state 54 ]
  ! LOR             [ shift and go to state 55 ]


state 88

    (30) condition -> expression GE expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for DECR resolved as shift
  ! shift/reduce conflict for INCR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
    COMMENT         reduce using rule 30 (condition -> expression GE expression .)
    NEWLINE         reduce using rule 30 (condition -> expression GE expression .)
    FUNCTION        reduce using rule 30 (condition -> expression GE expression .)
    ID              reduce using rule 30 (condition -> expression GE expression .)
    NULL            reduce using rule 30 (condition -> expression GE expression .)
    SCAN            reduce using rule 30 (condition -> expression GE expression .)
    PRINT           reduce using rule 30 (condition -> expression GE expression .)
    FOR             reduce using rule 30 (condition -> expression GE expression .)
    WHILE           reduce using rule 30 (condition -> expression GE expression .)
    RETURN          reduce using rule 30 (condition -> expression GE expression .)
    BREAK           reduce using rule 30 (condition -> expression GE expression .)
    CONTINUE        reduce using rule 30 (condition -> expression GE expression .)
    LNOT            reduce using rule 30 (condition -> expression GE expression .)
    BOOLEAN         reduce using rule 30 (condition -> expression GE expression .)
    LPAREN          reduce using rule 30 (condition -> expression GE expression .)
    IF              reduce using rule 30 (condition -> expression GE expression .)
    NUMBER          reduce using rule 30 (condition -> expression GE expression .)
    STRING          reduce using rule 30 (condition -> expression GE expression .)
    $end            reduce using rule 30 (condition -> expression GE expression .)
    RPAREN          reduce using rule 30 (condition -> expression GE expression .)
    SEMI            reduce using rule 30 (condition -> expression GE expression .)
    RBRACE          reduce using rule 30 (condition -> expression GE expression .)
    RBRACKET        reduce using rule 30 (condition -> expression GE expression .)
    COMMA           reduce using rule 30 (condition -> expression GE expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55

  ! SUM             [ reduce using rule 30 (condition -> expression GE expression .) ]
  ! SUB             [ reduce using rule 30 (condition -> expression GE expression .) ]
  ! DECR            [ reduce using rule 30 (condition -> expression GE expression .) ]
  ! INCR            [ reduce using rule 30 (condition -> expression GE expression .) ]
  ! GT              [ reduce using rule 30 (condition -> expression GE expression .) ]
  ! LT              [ reduce using rule 30 (condition -> expression GE expression .) ]
  ! GE              [ reduce using rule 30 (condition -> expression GE expression .) ]
  ! LE              [ reduce using rule 30 (condition -> expression GE expression .) ]
  ! NE              [ reduce using rule 30 (condition -> expression GE expression .) ]
  ! EQ              [ reduce using rule 30 (condition -> expression GE expression .) ]
  ! LAND            [ reduce using rule 30 (condition -> expression GE expression .) ]
  ! LOR             [ reduce using rule 30 (condition -> expression GE expression .) ]


state 89

    (31) condition -> expression LE expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for DECR resolved as shift
  ! shift/reduce conflict for INCR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
    COMMENT         reduce using rule 31 (condition -> expression LE expression .)
    NEWLINE         reduce using rule 31 (condition -> expression LE expression .)
    FUNCTION        reduce using rule 31 (condition -> expression LE expression .)
    ID              reduce using rule 31 (condition -> expression LE expression .)
    NULL            reduce using rule 31 (condition -> expression LE expression .)
    SCAN            reduce using rule 31 (condition -> expression LE expression .)
    PRINT           reduce using rule 31 (condition -> expression LE expression .)
    FOR             reduce using rule 31 (condition -> expression LE expression .)
    WHILE           reduce using rule 31 (condition -> expression LE expression .)
    RETURN          reduce using rule 31 (condition -> expression LE expression .)
    BREAK           reduce using rule 31 (condition -> expression LE expression .)
    CONTINUE        reduce using rule 31 (condition -> expression LE expression .)
    LNOT            reduce using rule 31 (condition -> expression LE expression .)
    BOOLEAN         reduce using rule 31 (condition -> expression LE expression .)
    LPAREN          reduce using rule 31 (condition -> expression LE expression .)
    IF              reduce using rule 31 (condition -> expression LE expression .)
    NUMBER          reduce using rule 31 (condition -> expression LE expression .)
    STRING          reduce using rule 31 (condition -> expression LE expression .)
    $end            reduce using rule 31 (condition -> expression LE expression .)
    RPAREN          reduce using rule 31 (condition -> expression LE expression .)
    SEMI            reduce using rule 31 (condition -> expression LE expression .)
    RBRACE          reduce using rule 31 (condition -> expression LE expression .)
    RBRACKET        reduce using rule 31 (condition -> expression LE expression .)
    COMMA           reduce using rule 31 (condition -> expression LE expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55

  ! SUM             [ reduce using rule 31 (condition -> expression LE expression .) ]
  ! SUB             [ reduce using rule 31 (condition -> expression LE expression .) ]
  ! DECR            [ reduce using rule 31 (condition -> expression LE expression .) ]
  ! INCR            [ reduce using rule 31 (condition -> expression LE expression .) ]
  ! GT              [ reduce using rule 31 (condition -> expression LE expression .) ]
  ! LT              [ reduce using rule 31 (condition -> expression LE expression .) ]
  ! GE              [ reduce using rule 31 (condition -> expression LE expression .) ]
  ! LE              [ reduce using rule 31 (condition -> expression LE expression .) ]
  ! NE              [ reduce using rule 31 (condition -> expression LE expression .) ]
  ! EQ              [ reduce using rule 31 (condition -> expression LE expression .) ]
  ! LAND            [ reduce using rule 31 (condition -> expression LE expression .) ]
  ! LOR             [ reduce using rule 31 (condition -> expression LE expression .) ]


state 90

    (32) condition -> expression NE expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for DECR resolved as shift
  ! shift/reduce conflict for INCR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
    COMMENT         reduce using rule 32 (condition -> expression NE expression .)
    NEWLINE         reduce using rule 32 (condition -> expression NE expression .)
    FUNCTION        reduce using rule 32 (condition -> expression NE expression .)
    ID              reduce using rule 32 (condition -> expression NE expression .)
    NULL            reduce using rule 32 (condition -> expression NE expression .)
    SCAN            reduce using rule 32 (condition -> expression NE expression .)
    PRINT           reduce using rule 32 (condition -> expression NE expression .)
    FOR             reduce using rule 32 (condition -> expression NE expression .)
    WHILE           reduce using rule 32 (condition -> expression NE expression .)
    RETURN          reduce using rule 32 (condition -> expression NE expression .)
    BREAK           reduce using rule 32 (condition -> expression NE expression .)
    CONTINUE        reduce using rule 32 (condition -> expression NE expression .)
    LNOT            reduce using rule 32 (condition -> expression NE expression .)
    BOOLEAN         reduce using rule 32 (condition -> expression NE expression .)
    LPAREN          reduce using rule 32 (condition -> expression NE expression .)
    IF              reduce using rule 32 (condition -> expression NE expression .)
    NUMBER          reduce using rule 32 (condition -> expression NE expression .)
    STRING          reduce using rule 32 (condition -> expression NE expression .)
    $end            reduce using rule 32 (condition -> expression NE expression .)
    RPAREN          reduce using rule 32 (condition -> expression NE expression .)
    SEMI            reduce using rule 32 (condition -> expression NE expression .)
    RBRACE          reduce using rule 32 (condition -> expression NE expression .)
    RBRACKET        reduce using rule 32 (condition -> expression NE expression .)
    COMMA           reduce using rule 32 (condition -> expression NE expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55

  ! SUM             [ reduce using rule 32 (condition -> expression NE expression .) ]
  ! SUB             [ reduce using rule 32 (condition -> expression NE expression .) ]
  ! DECR            [ reduce using rule 32 (condition -> expression NE expression .) ]
  ! INCR            [ reduce using rule 32 (condition -> expression NE expression .) ]
  ! GT              [ reduce using rule 32 (condition -> expression NE expression .) ]
  ! LT              [ reduce using rule 32 (condition -> expression NE expression .) ]
  ! GE              [ reduce using rule 32 (condition -> expression NE expression .) ]
  ! LE              [ reduce using rule 32 (condition -> expression NE expression .) ]
  ! NE              [ reduce using rule 32 (condition -> expression NE expression .) ]
  ! EQ              [ reduce using rule 32 (condition -> expression NE expression .) ]
  ! LAND            [ reduce using rule 32 (condition -> expression NE expression .) ]
  ! LOR             [ reduce using rule 32 (condition -> expression NE expression .) ]


state 91

    (33) condition -> expression EQ expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for DECR resolved as shift
  ! shift/reduce conflict for INCR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
    COMMENT         reduce using rule 33 (condition -> expression EQ expression .)
    NEWLINE         reduce using rule 33 (condition -> expression EQ expression .)
    FUNCTION        reduce using rule 33 (condition -> expression EQ expression .)
    ID              reduce using rule 33 (condition -> expression EQ expression .)
    NULL            reduce using rule 33 (condition -> expression EQ expression .)
    SCAN            reduce using rule 33 (condition -> expression EQ expression .)
    PRINT           reduce using rule 33 (condition -> expression EQ expression .)
    FOR             reduce using rule 33 (condition -> expression EQ expression .)
    WHILE           reduce using rule 33 (condition -> expression EQ expression .)
    RETURN          reduce using rule 33 (condition -> expression EQ expression .)
    BREAK           reduce using rule 33 (condition -> expression EQ expression .)
    CONTINUE        reduce using rule 33 (condition -> expression EQ expression .)
    LNOT            reduce using rule 33 (condition -> expression EQ expression .)
    BOOLEAN         reduce using rule 33 (condition -> expression EQ expression .)
    LPAREN          reduce using rule 33 (condition -> expression EQ expression .)
    IF              reduce using rule 33 (condition -> expression EQ expression .)
    NUMBER          reduce using rule 33 (condition -> expression EQ expression .)
    STRING          reduce using rule 33 (condition -> expression EQ expression .)
    $end            reduce using rule 33 (condition -> expression EQ expression .)
    RPAREN          reduce using rule 33 (condition -> expression EQ expression .)
    SEMI            reduce using rule 33 (condition -> expression EQ expression .)
    RBRACE          reduce using rule 33 (condition -> expression EQ expression .)
    RBRACKET        reduce using rule 33 (condition -> expression EQ expression .)
    COMMA           reduce using rule 33 (condition -> expression EQ expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55

  ! SUM             [ reduce using rule 33 (condition -> expression EQ expression .) ]
  ! SUB             [ reduce using rule 33 (condition -> expression EQ expression .) ]
  ! DECR            [ reduce using rule 33 (condition -> expression EQ expression .) ]
  ! INCR            [ reduce using rule 33 (condition -> expression EQ expression .) ]
  ! GT              [ reduce using rule 33 (condition -> expression EQ expression .) ]
  ! LT              [ reduce using rule 33 (condition -> expression EQ expression .) ]
  ! GE              [ reduce using rule 33 (condition -> expression EQ expression .) ]
  ! LE              [ reduce using rule 33 (condition -> expression EQ expression .) ]
  ! NE              [ reduce using rule 33 (condition -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 33 (condition -> expression EQ expression .) ]
  ! LAND            [ reduce using rule 33 (condition -> expression EQ expression .) ]
  ! LOR             [ reduce using rule 33 (condition -> expression EQ expression .) ]


state 92

    (34) condition -> expression LAND expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for DECR resolved as shift
  ! shift/reduce conflict for INCR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
    COMMENT         reduce using rule 34 (condition -> expression LAND expression .)
    NEWLINE         reduce using rule 34 (condition -> expression LAND expression .)
    FUNCTION        reduce using rule 34 (condition -> expression LAND expression .)
    ID              reduce using rule 34 (condition -> expression LAND expression .)
    NULL            reduce using rule 34 (condition -> expression LAND expression .)
    SCAN            reduce using rule 34 (condition -> expression LAND expression .)
    PRINT           reduce using rule 34 (condition -> expression LAND expression .)
    FOR             reduce using rule 34 (condition -> expression LAND expression .)
    WHILE           reduce using rule 34 (condition -> expression LAND expression .)
    RETURN          reduce using rule 34 (condition -> expression LAND expression .)
    BREAK           reduce using rule 34 (condition -> expression LAND expression .)
    CONTINUE        reduce using rule 34 (condition -> expression LAND expression .)
    LNOT            reduce using rule 34 (condition -> expression LAND expression .)
    BOOLEAN         reduce using rule 34 (condition -> expression LAND expression .)
    LPAREN          reduce using rule 34 (condition -> expression LAND expression .)
    IF              reduce using rule 34 (condition -> expression LAND expression .)
    NUMBER          reduce using rule 34 (condition -> expression LAND expression .)
    STRING          reduce using rule 34 (condition -> expression LAND expression .)
    $end            reduce using rule 34 (condition -> expression LAND expression .)
    RPAREN          reduce using rule 34 (condition -> expression LAND expression .)
    SEMI            reduce using rule 34 (condition -> expression LAND expression .)
    RBRACE          reduce using rule 34 (condition -> expression LAND expression .)
    RBRACKET        reduce using rule 34 (condition -> expression LAND expression .)
    COMMA           reduce using rule 34 (condition -> expression LAND expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55

  ! SUM             [ reduce using rule 34 (condition -> expression LAND expression .) ]
  ! SUB             [ reduce using rule 34 (condition -> expression LAND expression .) ]
  ! DECR            [ reduce using rule 34 (condition -> expression LAND expression .) ]
  ! INCR            [ reduce using rule 34 (condition -> expression LAND expression .) ]
  ! GT              [ reduce using rule 34 (condition -> expression LAND expression .) ]
  ! LT              [ reduce using rule 34 (condition -> expression LAND expression .) ]
  ! GE              [ reduce using rule 34 (condition -> expression LAND expression .) ]
  ! LE              [ reduce using rule 34 (condition -> expression LAND expression .) ]
  ! NE              [ reduce using rule 34 (condition -> expression LAND expression .) ]
  ! EQ              [ reduce using rule 34 (condition -> expression LAND expression .) ]
  ! LAND            [ reduce using rule 34 (condition -> expression LAND expression .) ]
  ! LOR             [ reduce using rule 34 (condition -> expression LAND expression .) ]


state 93

    (35) condition -> expression LOR expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for DECR resolved as shift
  ! shift/reduce conflict for INCR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
    COMMENT         reduce using rule 35 (condition -> expression LOR expression .)
    NEWLINE         reduce using rule 35 (condition -> expression LOR expression .)
    FUNCTION        reduce using rule 35 (condition -> expression LOR expression .)
    ID              reduce using rule 35 (condition -> expression LOR expression .)
    NULL            reduce using rule 35 (condition -> expression LOR expression .)
    SCAN            reduce using rule 35 (condition -> expression LOR expression .)
    PRINT           reduce using rule 35 (condition -> expression LOR expression .)
    FOR             reduce using rule 35 (condition -> expression LOR expression .)
    WHILE           reduce using rule 35 (condition -> expression LOR expression .)
    RETURN          reduce using rule 35 (condition -> expression LOR expression .)
    BREAK           reduce using rule 35 (condition -> expression LOR expression .)
    CONTINUE        reduce using rule 35 (condition -> expression LOR expression .)
    LNOT            reduce using rule 35 (condition -> expression LOR expression .)
    BOOLEAN         reduce using rule 35 (condition -> expression LOR expression .)
    LPAREN          reduce using rule 35 (condition -> expression LOR expression .)
    IF              reduce using rule 35 (condition -> expression LOR expression .)
    NUMBER          reduce using rule 35 (condition -> expression LOR expression .)
    STRING          reduce using rule 35 (condition -> expression LOR expression .)
    $end            reduce using rule 35 (condition -> expression LOR expression .)
    RPAREN          reduce using rule 35 (condition -> expression LOR expression .)
    SEMI            reduce using rule 35 (condition -> expression LOR expression .)
    RBRACE          reduce using rule 35 (condition -> expression LOR expression .)
    RBRACKET        reduce using rule 35 (condition -> expression LOR expression .)
    COMMA           reduce using rule 35 (condition -> expression LOR expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55

  ! SUM             [ reduce using rule 35 (condition -> expression LOR expression .) ]
  ! SUB             [ reduce using rule 35 (condition -> expression LOR expression .) ]
  ! DECR            [ reduce using rule 35 (condition -> expression LOR expression .) ]
  ! INCR            [ reduce using rule 35 (condition -> expression LOR expression .) ]
  ! GT              [ reduce using rule 35 (condition -> expression LOR expression .) ]
  ! LT              [ reduce using rule 35 (condition -> expression LOR expression .) ]
  ! GE              [ reduce using rule 35 (condition -> expression LOR expression .) ]
  ! LE              [ reduce using rule 35 (condition -> expression LOR expression .) ]
  ! NE              [ reduce using rule 35 (condition -> expression LOR expression .) ]
  ! EQ              [ reduce using rule 35 (condition -> expression LOR expression .) ]
  ! LAND            [ reduce using rule 35 (condition -> expression LOR expression .) ]
  ! LOR             [ reduce using rule 35 (condition -> expression LOR expression .) ]


state 94

    (47) function_def -> FUNCTION ID LPAREN . param_list RPAREN bloc
    (48) function_def -> FUNCTION ID LPAREN . RPAREN bloc
    (54) param_list -> . param_list COMMA param
    (55) param_list -> . param
    (56) param -> . ID

    RPAREN          shift and go to state 130
    ID              shift and go to state 128

    param_list                     shift and go to state 129
    param                          shift and go to state 131

state 95

    (49) function_call -> ID LPAREN param_list_call . RPAREN
    (51) param_list_call -> param_list_call . COMMA param_call

    RPAREN          shift and go to state 132
    COMMA           shift and go to state 133


state 96

    (50) function_call -> ID LPAREN RPAREN .

    COMMENT         reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    NEWLINE         reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    FUNCTION        reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    ID              reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    NULL            reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    SCAN            reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    PRINT           reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    FOR             reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    WHILE           reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    BREAK           reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    CONTINUE        reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    LNOT            reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    BOOLEAN         reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    LPAREN          reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    IF              reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    NUMBER          reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    STRING          reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    $end            reduce using rule 50 (function_call -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 50 (function_call -> ID LPAREN RPAREN .)


state 97

    (52) param_list_call -> param_call .

    RPAREN          reduce using rule 52 (param_list_call -> param_call .)
    COMMA           reduce using rule 52 (param_list_call -> param_call .)


state 98

    (53) param_call -> factor .

    RPAREN          reduce using rule 53 (param_call -> factor .)
    COMMA           reduce using rule 53 (param_call -> factor .)


state 99

    (21) assignment -> ID ASSIGN expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

    COMMENT         reduce using rule 21 (assignment -> ID ASSIGN expression .)
    NEWLINE         reduce using rule 21 (assignment -> ID ASSIGN expression .)
    FUNCTION        reduce using rule 21 (assignment -> ID ASSIGN expression .)
    ID              reduce using rule 21 (assignment -> ID ASSIGN expression .)
    NULL            reduce using rule 21 (assignment -> ID ASSIGN expression .)
    SCAN            reduce using rule 21 (assignment -> ID ASSIGN expression .)
    PRINT           reduce using rule 21 (assignment -> ID ASSIGN expression .)
    FOR             reduce using rule 21 (assignment -> ID ASSIGN expression .)
    WHILE           reduce using rule 21 (assignment -> ID ASSIGN expression .)
    RETURN          reduce using rule 21 (assignment -> ID ASSIGN expression .)
    BREAK           reduce using rule 21 (assignment -> ID ASSIGN expression .)
    CONTINUE        reduce using rule 21 (assignment -> ID ASSIGN expression .)
    LNOT            reduce using rule 21 (assignment -> ID ASSIGN expression .)
    BOOLEAN         reduce using rule 21 (assignment -> ID ASSIGN expression .)
    LPAREN          reduce using rule 21 (assignment -> ID ASSIGN expression .)
    IF              reduce using rule 21 (assignment -> ID ASSIGN expression .)
    NUMBER          reduce using rule 21 (assignment -> ID ASSIGN expression .)
    STRING          reduce using rule 21 (assignment -> ID ASSIGN expression .)
    $end            reduce using rule 21 (assignment -> ID ASSIGN expression .)
    SEMI            reduce using rule 21 (assignment -> ID ASSIGN expression .)
    RBRACE          reduce using rule 21 (assignment -> ID ASSIGN expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55


state 100

    (22) assignment -> ID ASSIGN LBRACKET . list RBRACKET
    (89) list -> . list COMMA factor
    (90) list -> . factor
    (91) list -> .
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    RBRACKET        reduce using rule 91 (list -> .)
    COMMA           reduce using rule 91 (list -> .)
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41
    LPAREN          shift and go to state 84

    list                           shift and go to state 134
    factor                         shift and go to state 135

state 101

    (87) factor -> ID LBRACKET expression . RBRACKET
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

    RBRACKET        shift and go to state 136
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55


state 102

    (73) expression_ass -> ID SUM_ASS expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

    COMMENT         reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    NEWLINE         reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    FUNCTION        reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    ID              reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    NULL            reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    SCAN            reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    PRINT           reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    FOR             reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    WHILE           reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    RETURN          reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    BREAK           reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    CONTINUE        reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    LNOT            reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    BOOLEAN         reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    LPAREN          reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    IF              reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    NUMBER          reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    STRING          reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    $end            reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    RBRACE          reduce using rule 73 (expression_ass -> ID SUM_ASS expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55


state 103

    (74) expression_ass -> ID SUB_ASS expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

    COMMENT         reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    NEWLINE         reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    FUNCTION        reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    ID              reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    NULL            reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    SCAN            reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    PRINT           reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    FOR             reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    WHILE           reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    RETURN          reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    BREAK           reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    CONTINUE        reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    LNOT            reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    BOOLEAN         reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    LPAREN          reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    IF              reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    NUMBER          reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    STRING          reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    $end            reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    RBRACE          reduce using rule 74 (expression_ass -> ID SUB_ASS expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55


state 104

    (75) expression_ass -> ID MUL_ASS expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

    COMMENT         reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    NEWLINE         reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    FUNCTION        reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    ID              reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    NULL            reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    SCAN            reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    PRINT           reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    FOR             reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    WHILE           reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    RETURN          reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    BREAK           reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    CONTINUE        reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    LNOT            reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    BOOLEAN         reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    LPAREN          reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    IF              reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    NUMBER          reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    STRING          reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    $end            reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    RBRACE          reduce using rule 75 (expression_ass -> ID MUL_ASS expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55


state 105

    (76) expression_ass -> ID DIV_ASS expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

    COMMENT         reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    NEWLINE         reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    FUNCTION        reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    ID              reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    NULL            reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    SCAN            reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    PRINT           reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    FOR             reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    WHILE           reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    RETURN          reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    BREAK           reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    CONTINUE        reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    LNOT            reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    BOOLEAN         reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    LPAREN          reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    IF              reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    NUMBER          reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    STRING          reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    $end            reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    RBRACE          reduce using rule 76 (expression_ass -> ID DIV_ASS expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55


state 106

    (77) expression_ass -> ID IDIV_ASS expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

    COMMENT         reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    NEWLINE         reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    FUNCTION        reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    ID              reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    NULL            reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    SCAN            reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    PRINT           reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    FOR             reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    WHILE           reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    RETURN          reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    BREAK           reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    CONTINUE        reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    LNOT            reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    BOOLEAN         reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    LPAREN          reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    IF              reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    NUMBER          reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    STRING          reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    $end            reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    RBRACE          reduce using rule 77 (expression_ass -> ID IDIV_ASS expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55


state 107

    (78) expression_ass -> ID MOD_ASS expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

    COMMENT         reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    NEWLINE         reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    FUNCTION        reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    ID              reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    NULL            reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    SCAN            reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    PRINT           reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    FOR             reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    WHILE           reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    RETURN          reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    BREAK           reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    CONTINUE        reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    LNOT            reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    BOOLEAN         reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    LPAREN          reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    IF              reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    NUMBER          reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    STRING          reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    $end            reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    RBRACE          reduce using rule 78 (expression_ass -> ID MOD_ASS expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55


state 108

    (38) ternary_condition -> LPAREN condition RPAREN . QUES bloc COLON bloc

    QUES            shift and go to state 137


state 109

    (88) factor -> LPAREN expression RPAREN .

    MUL             reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    DIV             reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    IDIV            reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    SUM             reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    SUB             reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    DECR            reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    INCR            reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    LAND            reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    LOR             reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    COMMENT         reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    NULL            reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    SCAN            reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    FOR             reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    CONTINUE        reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    LNOT            reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    STRING          reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 88 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 88 (factor -> LPAREN expression RPAREN .)


state 110

    (42) conditional -> if_elif_bloc ELSE bloc .

    COMMENT         reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    NEWLINE         reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    FUNCTION        reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    ID              reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    NULL            reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    SCAN            reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    PRINT           reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    FOR             reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    WHILE           reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    RETURN          reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    BREAK           reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    CONTINUE        reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    LNOT            reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    BOOLEAN         reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    LPAREN          reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    IF              reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    NUMBER          reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    STRING          reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    $end            reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)
    RBRACE          reduce using rule 42 (conditional -> if_elif_bloc ELSE bloc .)


state 111

    (40) if_elif_bloc -> if_elif_bloc ELSE if_bloc .

    ELSE            reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    COMMENT         reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    NEWLINE         reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    FUNCTION        reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    ID              reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    NULL            reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    SCAN            reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    PRINT           reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    FOR             reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    WHILE           reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    RETURN          reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    BREAK           reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    CONTINUE        reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    LNOT            reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    BOOLEAN         reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    LPAREN          reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    IF              reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    NUMBER          reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    STRING          reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    $end            reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    RBRACE          reduce using rule 40 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)


state 112

    (44) bloc -> LBRACE . stat_bloc RBRACE
    (45) stat_bloc -> . stat_bloc command
    (46) stat_bloc -> . command
    (6) command -> . function_def
    (7) command -> . function_call
    (8) command -> . conditional
    (9) command -> . expression
    (10) command -> . assignment
    (11) command -> . expression_ass
    (12) command -> . input
    (13) command -> . output
    (14) command -> . for_loop
    (15) command -> . while_loop
    (16) command -> . return
    (17) command -> . break
    (18) command -> . continue
    (19) command -> . COMMENT
    (20) command -> . NEWLINE
    (47) function_def -> . FUNCTION ID LPAREN param_list RPAREN bloc
    (48) function_def -> . FUNCTION ID LPAREN RPAREN bloc
    (49) function_call -> . ID LPAREN param_list_call RPAREN
    (50) function_call -> . ID LPAREN RPAREN
    (42) conditional -> . if_elif_bloc ELSE bloc
    (43) conditional -> . if_elif_bloc
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . ID ASSIGN LBRACKET list RBRACKET
    (73) expression_ass -> . ID SUM_ASS expression
    (74) expression_ass -> . ID SUB_ASS expression
    (75) expression_ass -> . ID MUL_ASS expression
    (76) expression_ass -> . ID DIV_ASS expression
    (77) expression_ass -> . ID IDIV_ASS expression
    (78) expression_ass -> . ID MOD_ASS expression
    (23) input -> . SCAN LPAREN ID RPAREN
    (24) output -> . PRINT LPAREN plist RPAREN
    (59) for_loop -> . FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc
    (60) while_loop -> . WHILE LPAREN condition RPAREN bloc
    (57) return -> . RETURN expression
    (58) return -> . RETURN expression SEMI
    (63) break -> . BREAK
    (64) break -> . BREAK SEMI
    (61) continue -> . CONTINUE
    (62) continue -> . CONTINUE SEMI
    (40) if_elif_bloc -> . if_elif_bloc ELSE if_bloc
    (41) if_elif_bloc -> . if_bloc
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (39) if_bloc -> . IF LPAREN condition RPAREN bloc
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    COMMENT         shift and go to state 18
    NEWLINE         shift and go to state 19
    FUNCTION        shift and go to state 20
    ID              shift and go to state 21
    NULL            shift and go to state 27
    SCAN            shift and go to state 28
    PRINT           shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    RETURN          shift and go to state 32
    BREAK           shift and go to state 33
    CONTINUE        shift and go to state 34
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    IF              shift and go to state 39
    NUMBER          shift and go to state 40
    STRING          shift and go to state 41

    stat_bloc                      shift and go to state 138
    command                        shift and go to state 139
    function_def                   shift and go to state 5
    function_call                  shift and go to state 6
    conditional                    shift and go to state 7
    expression                     shift and go to state 8
    assignment                     shift and go to state 9
    expression_ass                 shift and go to state 10
    input                          shift and go to state 11
    output                         shift and go to state 12
    for_loop                       shift and go to state 13
    while_loop                     shift and go to state 14
    return                         shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    if_elif_bloc                   shift and go to state 23
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    if_bloc                        shift and go to state 35
    factor                         shift and go to state 38

state 113

    (67) term -> term MUL factor .

    MUL             reduce using rule 67 (term -> term MUL factor .)
    DIV             reduce using rule 67 (term -> term MUL factor .)
    IDIV            reduce using rule 67 (term -> term MUL factor .)
    MOD             reduce using rule 67 (term -> term MUL factor .)
    SUM             reduce using rule 67 (term -> term MUL factor .)
    SUB             reduce using rule 67 (term -> term MUL factor .)
    DECR            reduce using rule 67 (term -> term MUL factor .)
    INCR            reduce using rule 67 (term -> term MUL factor .)
    GT              reduce using rule 67 (term -> term MUL factor .)
    LT              reduce using rule 67 (term -> term MUL factor .)
    GE              reduce using rule 67 (term -> term MUL factor .)
    LE              reduce using rule 67 (term -> term MUL factor .)
    NE              reduce using rule 67 (term -> term MUL factor .)
    EQ              reduce using rule 67 (term -> term MUL factor .)
    LAND            reduce using rule 67 (term -> term MUL factor .)
    LOR             reduce using rule 67 (term -> term MUL factor .)
    COMMENT         reduce using rule 67 (term -> term MUL factor .)
    NEWLINE         reduce using rule 67 (term -> term MUL factor .)
    FUNCTION        reduce using rule 67 (term -> term MUL factor .)
    ID              reduce using rule 67 (term -> term MUL factor .)
    NULL            reduce using rule 67 (term -> term MUL factor .)
    SCAN            reduce using rule 67 (term -> term MUL factor .)
    PRINT           reduce using rule 67 (term -> term MUL factor .)
    FOR             reduce using rule 67 (term -> term MUL factor .)
    WHILE           reduce using rule 67 (term -> term MUL factor .)
    RETURN          reduce using rule 67 (term -> term MUL factor .)
    BREAK           reduce using rule 67 (term -> term MUL factor .)
    CONTINUE        reduce using rule 67 (term -> term MUL factor .)
    LNOT            reduce using rule 67 (term -> term MUL factor .)
    BOOLEAN         reduce using rule 67 (term -> term MUL factor .)
    LPAREN          reduce using rule 67 (term -> term MUL factor .)
    IF              reduce using rule 67 (term -> term MUL factor .)
    NUMBER          reduce using rule 67 (term -> term MUL factor .)
    STRING          reduce using rule 67 (term -> term MUL factor .)
    $end            reduce using rule 67 (term -> term MUL factor .)
    RPAREN          reduce using rule 67 (term -> term MUL factor .)
    SEMI            reduce using rule 67 (term -> term MUL factor .)
    RBRACE          reduce using rule 67 (term -> term MUL factor .)
    RBRACKET        reduce using rule 67 (term -> term MUL factor .)
    COMMA           reduce using rule 67 (term -> term MUL factor .)


state 114

    (68) term -> term DIV factor .

    MUL             reduce using rule 68 (term -> term DIV factor .)
    DIV             reduce using rule 68 (term -> term DIV factor .)
    IDIV            reduce using rule 68 (term -> term DIV factor .)
    MOD             reduce using rule 68 (term -> term DIV factor .)
    SUM             reduce using rule 68 (term -> term DIV factor .)
    SUB             reduce using rule 68 (term -> term DIV factor .)
    DECR            reduce using rule 68 (term -> term DIV factor .)
    INCR            reduce using rule 68 (term -> term DIV factor .)
    GT              reduce using rule 68 (term -> term DIV factor .)
    LT              reduce using rule 68 (term -> term DIV factor .)
    GE              reduce using rule 68 (term -> term DIV factor .)
    LE              reduce using rule 68 (term -> term DIV factor .)
    NE              reduce using rule 68 (term -> term DIV factor .)
    EQ              reduce using rule 68 (term -> term DIV factor .)
    LAND            reduce using rule 68 (term -> term DIV factor .)
    LOR             reduce using rule 68 (term -> term DIV factor .)
    COMMENT         reduce using rule 68 (term -> term DIV factor .)
    NEWLINE         reduce using rule 68 (term -> term DIV factor .)
    FUNCTION        reduce using rule 68 (term -> term DIV factor .)
    ID              reduce using rule 68 (term -> term DIV factor .)
    NULL            reduce using rule 68 (term -> term DIV factor .)
    SCAN            reduce using rule 68 (term -> term DIV factor .)
    PRINT           reduce using rule 68 (term -> term DIV factor .)
    FOR             reduce using rule 68 (term -> term DIV factor .)
    WHILE           reduce using rule 68 (term -> term DIV factor .)
    RETURN          reduce using rule 68 (term -> term DIV factor .)
    BREAK           reduce using rule 68 (term -> term DIV factor .)
    CONTINUE        reduce using rule 68 (term -> term DIV factor .)
    LNOT            reduce using rule 68 (term -> term DIV factor .)
    BOOLEAN         reduce using rule 68 (term -> term DIV factor .)
    LPAREN          reduce using rule 68 (term -> term DIV factor .)
    IF              reduce using rule 68 (term -> term DIV factor .)
    NUMBER          reduce using rule 68 (term -> term DIV factor .)
    STRING          reduce using rule 68 (term -> term DIV factor .)
    $end            reduce using rule 68 (term -> term DIV factor .)
    RPAREN          reduce using rule 68 (term -> term DIV factor .)
    SEMI            reduce using rule 68 (term -> term DIV factor .)
    RBRACE          reduce using rule 68 (term -> term DIV factor .)
    RBRACKET        reduce using rule 68 (term -> term DIV factor .)
    COMMA           reduce using rule 68 (term -> term DIV factor .)


state 115

    (69) term -> term IDIV factor .

    MUL             reduce using rule 69 (term -> term IDIV factor .)
    DIV             reduce using rule 69 (term -> term IDIV factor .)
    IDIV            reduce using rule 69 (term -> term IDIV factor .)
    MOD             reduce using rule 69 (term -> term IDIV factor .)
    SUM             reduce using rule 69 (term -> term IDIV factor .)
    SUB             reduce using rule 69 (term -> term IDIV factor .)
    DECR            reduce using rule 69 (term -> term IDIV factor .)
    INCR            reduce using rule 69 (term -> term IDIV factor .)
    GT              reduce using rule 69 (term -> term IDIV factor .)
    LT              reduce using rule 69 (term -> term IDIV factor .)
    GE              reduce using rule 69 (term -> term IDIV factor .)
    LE              reduce using rule 69 (term -> term IDIV factor .)
    NE              reduce using rule 69 (term -> term IDIV factor .)
    EQ              reduce using rule 69 (term -> term IDIV factor .)
    LAND            reduce using rule 69 (term -> term IDIV factor .)
    LOR             reduce using rule 69 (term -> term IDIV factor .)
    COMMENT         reduce using rule 69 (term -> term IDIV factor .)
    NEWLINE         reduce using rule 69 (term -> term IDIV factor .)
    FUNCTION        reduce using rule 69 (term -> term IDIV factor .)
    ID              reduce using rule 69 (term -> term IDIV factor .)
    NULL            reduce using rule 69 (term -> term IDIV factor .)
    SCAN            reduce using rule 69 (term -> term IDIV factor .)
    PRINT           reduce using rule 69 (term -> term IDIV factor .)
    FOR             reduce using rule 69 (term -> term IDIV factor .)
    WHILE           reduce using rule 69 (term -> term IDIV factor .)
    RETURN          reduce using rule 69 (term -> term IDIV factor .)
    BREAK           reduce using rule 69 (term -> term IDIV factor .)
    CONTINUE        reduce using rule 69 (term -> term IDIV factor .)
    LNOT            reduce using rule 69 (term -> term IDIV factor .)
    BOOLEAN         reduce using rule 69 (term -> term IDIV factor .)
    LPAREN          reduce using rule 69 (term -> term IDIV factor .)
    IF              reduce using rule 69 (term -> term IDIV factor .)
    NUMBER          reduce using rule 69 (term -> term IDIV factor .)
    STRING          reduce using rule 69 (term -> term IDIV factor .)
    $end            reduce using rule 69 (term -> term IDIV factor .)
    RPAREN          reduce using rule 69 (term -> term IDIV factor .)
    SEMI            reduce using rule 69 (term -> term IDIV factor .)
    RBRACE          reduce using rule 69 (term -> term IDIV factor .)
    RBRACKET        reduce using rule 69 (term -> term IDIV factor .)
    COMMA           reduce using rule 69 (term -> term IDIV factor .)


state 116

    (70) term -> term MOD factor .

    MUL             reduce using rule 70 (term -> term MOD factor .)
    DIV             reduce using rule 70 (term -> term MOD factor .)
    IDIV            reduce using rule 70 (term -> term MOD factor .)
    MOD             reduce using rule 70 (term -> term MOD factor .)
    SUM             reduce using rule 70 (term -> term MOD factor .)
    SUB             reduce using rule 70 (term -> term MOD factor .)
    DECR            reduce using rule 70 (term -> term MOD factor .)
    INCR            reduce using rule 70 (term -> term MOD factor .)
    GT              reduce using rule 70 (term -> term MOD factor .)
    LT              reduce using rule 70 (term -> term MOD factor .)
    GE              reduce using rule 70 (term -> term MOD factor .)
    LE              reduce using rule 70 (term -> term MOD factor .)
    NE              reduce using rule 70 (term -> term MOD factor .)
    EQ              reduce using rule 70 (term -> term MOD factor .)
    LAND            reduce using rule 70 (term -> term MOD factor .)
    LOR             reduce using rule 70 (term -> term MOD factor .)
    COMMENT         reduce using rule 70 (term -> term MOD factor .)
    NEWLINE         reduce using rule 70 (term -> term MOD factor .)
    FUNCTION        reduce using rule 70 (term -> term MOD factor .)
    ID              reduce using rule 70 (term -> term MOD factor .)
    NULL            reduce using rule 70 (term -> term MOD factor .)
    SCAN            reduce using rule 70 (term -> term MOD factor .)
    PRINT           reduce using rule 70 (term -> term MOD factor .)
    FOR             reduce using rule 70 (term -> term MOD factor .)
    WHILE           reduce using rule 70 (term -> term MOD factor .)
    RETURN          reduce using rule 70 (term -> term MOD factor .)
    BREAK           reduce using rule 70 (term -> term MOD factor .)
    CONTINUE        reduce using rule 70 (term -> term MOD factor .)
    LNOT            reduce using rule 70 (term -> term MOD factor .)
    BOOLEAN         reduce using rule 70 (term -> term MOD factor .)
    LPAREN          reduce using rule 70 (term -> term MOD factor .)
    IF              reduce using rule 70 (term -> term MOD factor .)
    NUMBER          reduce using rule 70 (term -> term MOD factor .)
    STRING          reduce using rule 70 (term -> term MOD factor .)
    $end            reduce using rule 70 (term -> term MOD factor .)
    RPAREN          reduce using rule 70 (term -> term MOD factor .)
    SEMI            reduce using rule 70 (term -> term MOD factor .)
    RBRACE          reduce using rule 70 (term -> term MOD factor .)
    RBRACKET        reduce using rule 70 (term -> term MOD factor .)
    COMMA           reduce using rule 70 (term -> term MOD factor .)


state 117

    (23) input -> SCAN LPAREN ID . RPAREN

    RPAREN          shift and go to state 140


state 118

    (24) output -> PRINT LPAREN plist . RPAREN
    (26) plist -> plist . COMMA pitem

    RPAREN          shift and go to state 141
    COMMA           shift and go to state 142


state 119

    (25) plist -> pitem .

    RPAREN          reduce using rule 25 (plist -> pitem .)
    COMMA           reduce using rule 25 (plist -> pitem .)


state 120

    (27) pitem -> expression .
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

    RPAREN          reduce using rule 27 (pitem -> expression .)
    COMMA           reduce using rule 27 (pitem -> expression .)
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55


state 121

    (59) for_loop -> FOR LPAREN assignment . SEMI condition SEMI expression RPAREN bloc

    SEMI            shift and go to state 143


state 122

    (21) assignment -> ID . ASSIGN expression
    (22) assignment -> ID . ASSIGN LBRACKET list RBRACKET

    ASSIGN          shift and go to state 58


state 123

    (60) while_loop -> WHILE LPAREN condition . RPAREN bloc
    (79) expression -> condition .

    RPAREN          shift and go to state 144
    GT              reduce using rule 79 (expression -> condition .)
    LT              reduce using rule 79 (expression -> condition .)
    GE              reduce using rule 79 (expression -> condition .)
    LE              reduce using rule 79 (expression -> condition .)
    NE              reduce using rule 79 (expression -> condition .)
    EQ              reduce using rule 79 (expression -> condition .)
    LAND            reduce using rule 79 (expression -> condition .)
    LOR             reduce using rule 79 (expression -> condition .)
    SUM             reduce using rule 79 (expression -> condition .)
    SUB             reduce using rule 79 (expression -> condition .)
    DECR            reduce using rule 79 (expression -> condition .)
    INCR            reduce using rule 79 (expression -> condition .)


state 124

    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR

    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47


state 125

    (58) return -> RETURN expression SEMI .

    COMMENT         reduce using rule 58 (return -> RETURN expression SEMI .)
    NEWLINE         reduce using rule 58 (return -> RETURN expression SEMI .)
    FUNCTION        reduce using rule 58 (return -> RETURN expression SEMI .)
    ID              reduce using rule 58 (return -> RETURN expression SEMI .)
    NULL            reduce using rule 58 (return -> RETURN expression SEMI .)
    SCAN            reduce using rule 58 (return -> RETURN expression SEMI .)
    PRINT           reduce using rule 58 (return -> RETURN expression SEMI .)
    FOR             reduce using rule 58 (return -> RETURN expression SEMI .)
    WHILE           reduce using rule 58 (return -> RETURN expression SEMI .)
    RETURN          reduce using rule 58 (return -> RETURN expression SEMI .)
    BREAK           reduce using rule 58 (return -> RETURN expression SEMI .)
    CONTINUE        reduce using rule 58 (return -> RETURN expression SEMI .)
    LNOT            reduce using rule 58 (return -> RETURN expression SEMI .)
    BOOLEAN         reduce using rule 58 (return -> RETURN expression SEMI .)
    LPAREN          reduce using rule 58 (return -> RETURN expression SEMI .)
    IF              reduce using rule 58 (return -> RETURN expression SEMI .)
    NUMBER          reduce using rule 58 (return -> RETURN expression SEMI .)
    STRING          reduce using rule 58 (return -> RETURN expression SEMI .)
    $end            reduce using rule 58 (return -> RETURN expression SEMI .)
    RBRACE          reduce using rule 58 (return -> RETURN expression SEMI .)


state 126

    (39) if_bloc -> IF LPAREN condition . RPAREN bloc
    (79) expression -> condition .

    RPAREN          shift and go to state 145
    GT              reduce using rule 79 (expression -> condition .)
    LT              reduce using rule 79 (expression -> condition .)
    GE              reduce using rule 79 (expression -> condition .)
    LE              reduce using rule 79 (expression -> condition .)
    NE              reduce using rule 79 (expression -> condition .)
    EQ              reduce using rule 79 (expression -> condition .)
    LAND            reduce using rule 79 (expression -> condition .)
    LOR             reduce using rule 79 (expression -> condition .)
    SUM             reduce using rule 79 (expression -> condition .)
    SUB             reduce using rule 79 (expression -> condition .)
    DECR            reduce using rule 79 (expression -> condition .)
    INCR            reduce using rule 79 (expression -> condition .)


state 127

    (88) factor -> LPAREN expression . RPAREN
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

    RPAREN          shift and go to state 109
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55


state 128

    (56) param -> ID .

    RPAREN          reduce using rule 56 (param -> ID .)
    COMMA           reduce using rule 56 (param -> ID .)


state 129

    (47) function_def -> FUNCTION ID LPAREN param_list . RPAREN bloc
    (54) param_list -> param_list . COMMA param

    RPAREN          shift and go to state 146
    COMMA           shift and go to state 147


state 130

    (48) function_def -> FUNCTION ID LPAREN RPAREN . bloc
    (44) bloc -> . LBRACE stat_bloc RBRACE

    LBRACE          shift and go to state 112

    bloc                           shift and go to state 148

state 131

    (55) param_list -> param .

    RPAREN          reduce using rule 55 (param_list -> param .)
    COMMA           reduce using rule 55 (param_list -> param .)


state 132

    (49) function_call -> ID LPAREN param_list_call RPAREN .

    COMMENT         reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    NEWLINE         reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    FUNCTION        reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    ID              reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    NULL            reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    SCAN            reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    PRINT           reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    FOR             reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    WHILE           reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    RETURN          reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    BREAK           reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    CONTINUE        reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    LNOT            reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    BOOLEAN         reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    LPAREN          reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    IF              reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    NUMBER          reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    STRING          reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    $end            reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)
    RBRACE          reduce using rule 49 (function_call -> ID LPAREN param_list_call RPAREN .)


state 133

    (51) param_list_call -> param_list_call COMMA . param_call
    (53) param_call -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41
    LPAREN          shift and go to state 84

    param_call                     shift and go to state 149
    factor                         shift and go to state 98

state 134

    (22) assignment -> ID ASSIGN LBRACKET list . RBRACKET
    (89) list -> list . COMMA factor

    RBRACKET        shift and go to state 150
    COMMA           shift and go to state 151


state 135

    (90) list -> factor .

    RBRACKET        reduce using rule 90 (list -> factor .)
    COMMA           reduce using rule 90 (list -> factor .)


state 136

    (87) factor -> ID LBRACKET expression RBRACKET .

    MUL             reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    DIV             reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    IDIV            reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    MOD             reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    SUM             reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    SUB             reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    DECR            reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    INCR            reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    GT              reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    LT              reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    GE              reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    LE              reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    NE              reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    EQ              reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    LAND            reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    LOR             reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    COMMENT         reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    NEWLINE         reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    FUNCTION        reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    ID              reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    NULL            reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    SCAN            reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    PRINT           reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    FOR             reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    RETURN          reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    BREAK           reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    CONTINUE        reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    LNOT            reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    BOOLEAN         reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    IF              reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    NUMBER          reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    STRING          reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    $end            reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 87 (factor -> ID LBRACKET expression RBRACKET .)


state 137

    (38) ternary_condition -> LPAREN condition RPAREN QUES . bloc COLON bloc
    (44) bloc -> . LBRACE stat_bloc RBRACE

    LBRACE          shift and go to state 112

    bloc                           shift and go to state 152

state 138

    (44) bloc -> LBRACE stat_bloc . RBRACE
    (45) stat_bloc -> stat_bloc . command
    (6) command -> . function_def
    (7) command -> . function_call
    (8) command -> . conditional
    (9) command -> . expression
    (10) command -> . assignment
    (11) command -> . expression_ass
    (12) command -> . input
    (13) command -> . output
    (14) command -> . for_loop
    (15) command -> . while_loop
    (16) command -> . return
    (17) command -> . break
    (18) command -> . continue
    (19) command -> . COMMENT
    (20) command -> . NEWLINE
    (47) function_def -> . FUNCTION ID LPAREN param_list RPAREN bloc
    (48) function_def -> . FUNCTION ID LPAREN RPAREN bloc
    (49) function_call -> . ID LPAREN param_list_call RPAREN
    (50) function_call -> . ID LPAREN RPAREN
    (42) conditional -> . if_elif_bloc ELSE bloc
    (43) conditional -> . if_elif_bloc
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . ID ASSIGN LBRACKET list RBRACKET
    (73) expression_ass -> . ID SUM_ASS expression
    (74) expression_ass -> . ID SUB_ASS expression
    (75) expression_ass -> . ID MUL_ASS expression
    (76) expression_ass -> . ID DIV_ASS expression
    (77) expression_ass -> . ID IDIV_ASS expression
    (78) expression_ass -> . ID MOD_ASS expression
    (23) input -> . SCAN LPAREN ID RPAREN
    (24) output -> . PRINT LPAREN plist RPAREN
    (59) for_loop -> . FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc
    (60) while_loop -> . WHILE LPAREN condition RPAREN bloc
    (57) return -> . RETURN expression
    (58) return -> . RETURN expression SEMI
    (63) break -> . BREAK
    (64) break -> . BREAK SEMI
    (61) continue -> . CONTINUE
    (62) continue -> . CONTINUE SEMI
    (40) if_elif_bloc -> . if_elif_bloc ELSE if_bloc
    (41) if_elif_bloc -> . if_bloc
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (39) if_bloc -> . IF LPAREN condition RPAREN bloc
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 153
    COMMENT         shift and go to state 18
    NEWLINE         shift and go to state 19
    FUNCTION        shift and go to state 20
    ID              shift and go to state 21
    NULL            shift and go to state 27
    SCAN            shift and go to state 28
    PRINT           shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    RETURN          shift and go to state 32
    BREAK           shift and go to state 33
    CONTINUE        shift and go to state 34
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    IF              shift and go to state 39
    NUMBER          shift and go to state 40
    STRING          shift and go to state 41

    command                        shift and go to state 154
    function_def                   shift and go to state 5
    function_call                  shift and go to state 6
    conditional                    shift and go to state 7
    expression                     shift and go to state 8
    assignment                     shift and go to state 9
    expression_ass                 shift and go to state 10
    input                          shift and go to state 11
    output                         shift and go to state 12
    for_loop                       shift and go to state 13
    while_loop                     shift and go to state 14
    return                         shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    if_elif_bloc                   shift and go to state 23
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    if_bloc                        shift and go to state 35
    factor                         shift and go to state 38

state 139

    (46) stat_bloc -> command .

    RBRACE          reduce using rule 46 (stat_bloc -> command .)
    COMMENT         reduce using rule 46 (stat_bloc -> command .)
    NEWLINE         reduce using rule 46 (stat_bloc -> command .)
    FUNCTION        reduce using rule 46 (stat_bloc -> command .)
    ID              reduce using rule 46 (stat_bloc -> command .)
    NULL            reduce using rule 46 (stat_bloc -> command .)
    SCAN            reduce using rule 46 (stat_bloc -> command .)
    PRINT           reduce using rule 46 (stat_bloc -> command .)
    FOR             reduce using rule 46 (stat_bloc -> command .)
    WHILE           reduce using rule 46 (stat_bloc -> command .)
    RETURN          reduce using rule 46 (stat_bloc -> command .)
    BREAK           reduce using rule 46 (stat_bloc -> command .)
    CONTINUE        reduce using rule 46 (stat_bloc -> command .)
    LNOT            reduce using rule 46 (stat_bloc -> command .)
    BOOLEAN         reduce using rule 46 (stat_bloc -> command .)
    LPAREN          reduce using rule 46 (stat_bloc -> command .)
    IF              reduce using rule 46 (stat_bloc -> command .)
    NUMBER          reduce using rule 46 (stat_bloc -> command .)
    STRING          reduce using rule 46 (stat_bloc -> command .)


state 140

    (23) input -> SCAN LPAREN ID RPAREN .

    COMMENT         reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    NEWLINE         reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    FUNCTION        reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    ID              reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    NULL            reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    SCAN            reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    PRINT           reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    FOR             reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    WHILE           reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    RETURN          reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    BREAK           reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    CONTINUE        reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    LNOT            reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    BOOLEAN         reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    LPAREN          reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    IF              reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    NUMBER          reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    STRING          reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    $end            reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)
    RBRACE          reduce using rule 23 (input -> SCAN LPAREN ID RPAREN .)


state 141

    (24) output -> PRINT LPAREN plist RPAREN .

    COMMENT         reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    NEWLINE         reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    FUNCTION        reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    ID              reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    NULL            reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    SCAN            reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    PRINT           reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    FOR             reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    WHILE           reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    RETURN          reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    BREAK           reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    CONTINUE        reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    LNOT            reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    BOOLEAN         reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    LPAREN          reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    IF              reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    NUMBER          reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    STRING          reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    $end            reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)
    RBRACE          reduce using rule 24 (output -> PRINT LPAREN plist RPAREN .)


state 142

    (26) plist -> plist COMMA . pitem
    (27) pitem -> . expression
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    pitem                          shift and go to state 155
    expression                     shift and go to state 120
    term                           shift and go to state 24
    condition                      shift and go to state 25
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 143

    (59) for_loop -> FOR LPAREN assignment SEMI . condition SEMI expression RPAREN bloc
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    NULL            shift and go to state 27
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    condition                      shift and go to state 156
    expression                     shift and go to state 124
    term                           shift and go to state 24
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 144

    (60) while_loop -> WHILE LPAREN condition RPAREN . bloc
    (44) bloc -> . LBRACE stat_bloc RBRACE

    LBRACE          shift and go to state 112

    bloc                           shift and go to state 157

state 145

    (39) if_bloc -> IF LPAREN condition RPAREN . bloc
    (44) bloc -> . LBRACE stat_bloc RBRACE

    LBRACE          shift and go to state 112

    bloc                           shift and go to state 158

state 146

    (47) function_def -> FUNCTION ID LPAREN param_list RPAREN . bloc
    (44) bloc -> . LBRACE stat_bloc RBRACE

    LBRACE          shift and go to state 112

    bloc                           shift and go to state 159

state 147

    (54) param_list -> param_list COMMA . param
    (56) param -> . ID

    ID              shift and go to state 128

    param                          shift and go to state 160

state 148

    (48) function_def -> FUNCTION ID LPAREN RPAREN bloc .

    COMMENT         reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    NEWLINE         reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    FUNCTION        reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    ID              reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    NULL            reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    SCAN            reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    PRINT           reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    FOR             reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    WHILE           reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    RETURN          reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    BREAK           reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    CONTINUE        reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    LNOT            reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    BOOLEAN         reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    LPAREN          reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    IF              reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    NUMBER          reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    STRING          reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    $end            reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    RBRACE          reduce using rule 48 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)


state 149

    (51) param_list_call -> param_list_call COMMA param_call .

    RPAREN          reduce using rule 51 (param_list_call -> param_list_call COMMA param_call .)
    COMMA           reduce using rule 51 (param_list_call -> param_list_call COMMA param_call .)


state 150

    (22) assignment -> ID ASSIGN LBRACKET list RBRACKET .

    COMMENT         reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    NEWLINE         reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    FUNCTION        reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    ID              reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    NULL            reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    SCAN            reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    PRINT           reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    FOR             reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    WHILE           reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    RETURN          reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    BREAK           reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    CONTINUE        reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    LNOT            reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    BOOLEAN         reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    LPAREN          reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    IF              reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    NUMBER          reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    STRING          reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    $end            reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    SEMI            reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    RBRACE          reduce using rule 22 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)


state 151

    (89) list -> list COMMA . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41
    LPAREN          shift and go to state 84

    factor                         shift and go to state 161

state 152

    (38) ternary_condition -> LPAREN condition RPAREN QUES bloc . COLON bloc

    COLON           shift and go to state 162


state 153

    (44) bloc -> LBRACE stat_bloc RBRACE .

    COMMENT         reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    NEWLINE         reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    FUNCTION        reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    ID              reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    NULL            reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    SCAN            reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    PRINT           reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    FOR             reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    WHILE           reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    RETURN          reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    BREAK           reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    CONTINUE        reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    LNOT            reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    BOOLEAN         reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    LPAREN          reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    IF              reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    NUMBER          reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    STRING          reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    $end            reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    RBRACE          reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    COLON           reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    ELSE            reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    SUM             reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    SUB             reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    DECR            reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    INCR            reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    GT              reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    LT              reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    GE              reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    LE              reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    NE              reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    EQ              reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    LAND            reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    LOR             reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    RPAREN          reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    SEMI            reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    RBRACKET        reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)
    COMMA           reduce using rule 44 (bloc -> LBRACE stat_bloc RBRACE .)


state 154

    (45) stat_bloc -> stat_bloc command .

    RBRACE          reduce using rule 45 (stat_bloc -> stat_bloc command .)
    COMMENT         reduce using rule 45 (stat_bloc -> stat_bloc command .)
    NEWLINE         reduce using rule 45 (stat_bloc -> stat_bloc command .)
    FUNCTION        reduce using rule 45 (stat_bloc -> stat_bloc command .)
    ID              reduce using rule 45 (stat_bloc -> stat_bloc command .)
    NULL            reduce using rule 45 (stat_bloc -> stat_bloc command .)
    SCAN            reduce using rule 45 (stat_bloc -> stat_bloc command .)
    PRINT           reduce using rule 45 (stat_bloc -> stat_bloc command .)
    FOR             reduce using rule 45 (stat_bloc -> stat_bloc command .)
    WHILE           reduce using rule 45 (stat_bloc -> stat_bloc command .)
    RETURN          reduce using rule 45 (stat_bloc -> stat_bloc command .)
    BREAK           reduce using rule 45 (stat_bloc -> stat_bloc command .)
    CONTINUE        reduce using rule 45 (stat_bloc -> stat_bloc command .)
    LNOT            reduce using rule 45 (stat_bloc -> stat_bloc command .)
    BOOLEAN         reduce using rule 45 (stat_bloc -> stat_bloc command .)
    LPAREN          reduce using rule 45 (stat_bloc -> stat_bloc command .)
    IF              reduce using rule 45 (stat_bloc -> stat_bloc command .)
    NUMBER          reduce using rule 45 (stat_bloc -> stat_bloc command .)
    STRING          reduce using rule 45 (stat_bloc -> stat_bloc command .)


state 155

    (26) plist -> plist COMMA pitem .

    RPAREN          reduce using rule 26 (plist -> plist COMMA pitem .)
    COMMA           reduce using rule 26 (plist -> plist COMMA pitem .)


state 156

    (59) for_loop -> FOR LPAREN assignment SEMI condition . SEMI expression RPAREN bloc
    (79) expression -> condition .

    SEMI            shift and go to state 163
    GT              reduce using rule 79 (expression -> condition .)
    LT              reduce using rule 79 (expression -> condition .)
    GE              reduce using rule 79 (expression -> condition .)
    LE              reduce using rule 79 (expression -> condition .)
    NE              reduce using rule 79 (expression -> condition .)
    EQ              reduce using rule 79 (expression -> condition .)
    LAND            reduce using rule 79 (expression -> condition .)
    LOR             reduce using rule 79 (expression -> condition .)
    SUM             reduce using rule 79 (expression -> condition .)
    SUB             reduce using rule 79 (expression -> condition .)
    DECR            reduce using rule 79 (expression -> condition .)
    INCR            reduce using rule 79 (expression -> condition .)


state 157

    (60) while_loop -> WHILE LPAREN condition RPAREN bloc .

    COMMENT         reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    NEWLINE         reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    FUNCTION        reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    ID              reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    NULL            reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    SCAN            reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    PRINT           reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    FOR             reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    WHILE           reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    RETURN          reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    BREAK           reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    CONTINUE        reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    LNOT            reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    BOOLEAN         reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    LPAREN          reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    IF              reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    NUMBER          reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    STRING          reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    $end            reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    RBRACE          reduce using rule 60 (while_loop -> WHILE LPAREN condition RPAREN bloc .)


state 158

    (39) if_bloc -> IF LPAREN condition RPAREN bloc .

    ELSE            reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    COMMENT         reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    NEWLINE         reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    FUNCTION        reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    ID              reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    NULL            reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    SCAN            reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    PRINT           reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    FOR             reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    WHILE           reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    RETURN          reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    BREAK           reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    CONTINUE        reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    LNOT            reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    BOOLEAN         reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    LPAREN          reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    IF              reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    NUMBER          reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    STRING          reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    $end            reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    RBRACE          reduce using rule 39 (if_bloc -> IF LPAREN condition RPAREN bloc .)


state 159

    (47) function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .

    COMMENT         reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    NEWLINE         reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    FUNCTION        reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    ID              reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    NULL            reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    SCAN            reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    PRINT           reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    FOR             reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    WHILE           reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    RETURN          reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    BREAK           reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    CONTINUE        reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    LNOT            reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    BOOLEAN         reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    LPAREN          reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    IF              reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    NUMBER          reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    STRING          reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    $end            reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    RBRACE          reduce using rule 47 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)


state 160

    (54) param_list -> param_list COMMA param .

    RPAREN          reduce using rule 54 (param_list -> param_list COMMA param .)
    COMMA           reduce using rule 54 (param_list -> param_list COMMA param .)


state 161

    (89) list -> list COMMA factor .

    RBRACKET        reduce using rule 89 (list -> list COMMA factor .)
    COMMA           reduce using rule 89 (list -> list COMMA factor .)


state 162

    (38) ternary_condition -> LPAREN condition RPAREN QUES bloc COLON . bloc
    (44) bloc -> . LBRACE stat_bloc RBRACE

    LBRACE          shift and go to state 112

    bloc                           shift and go to state 164

state 163

    (59) for_loop -> FOR LPAREN assignment SEMI condition SEMI . expression RPAREN bloc
    (65) expression -> . expression SUM term
    (66) expression -> . expression SUB term
    (71) expression -> . expression DECR
    (72) expression -> . expression INCR
    (79) expression -> . condition
    (80) expression -> . ternary_condition
    (81) expression -> . term
    (82) expression -> . NULL
    (28) condition -> . expression GT expression
    (29) condition -> . expression LT expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression NE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression LAND expression
    (35) condition -> . expression LOR expression
    (36) condition -> . LNOT expression
    (37) condition -> . BOOLEAN
    (38) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (67) term -> . term MUL factor
    (68) term -> . term DIV factor
    (69) term -> . term IDIV factor
    (70) term -> . term MOD factor
    (83) term -> . factor
    (84) factor -> . NUMBER
    (85) factor -> . ID
    (86) factor -> . STRING
    (87) factor -> . ID LBRACKET expression RBRACKET
    (88) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 27
    LNOT            shift and go to state 36
    BOOLEAN         shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 40
    ID              shift and go to state 68
    STRING          shift and go to state 41

    condition                      shift and go to state 25
    expression                     shift and go to state 165
    term                           shift and go to state 24
    ternary_condition              shift and go to state 26
    factor                         shift and go to state 38

state 164

    (38) ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .

    SUM             reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    SUB             reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    DECR            reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    INCR            reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    GT              reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    LT              reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    GE              reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    LE              reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    NE              reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    EQ              reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    LAND            reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    LOR             reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    COMMENT         reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    NEWLINE         reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    FUNCTION        reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    ID              reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    NULL            reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    SCAN            reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    PRINT           reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    FOR             reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    WHILE           reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    RETURN          reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    BREAK           reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    CONTINUE        reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    LNOT            reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    BOOLEAN         reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    LPAREN          reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    IF              reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    NUMBER          reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    STRING          reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    $end            reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    RPAREN          reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    SEMI            reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    RBRACE          reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    RBRACKET        reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    COMMA           reduce using rule 38 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)


state 165

    (59) for_loop -> FOR LPAREN assignment SEMI condition SEMI expression . RPAREN bloc
    (65) expression -> expression . SUM term
    (66) expression -> expression . SUB term
    (71) expression -> expression . DECR
    (72) expression -> expression . INCR
    (28) condition -> expression . GT expression
    (29) condition -> expression . LT expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . NE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . LAND expression
    (35) condition -> expression . LOR expression

    RPAREN          shift and go to state 166
    SUM             shift and go to state 44
    SUB             shift and go to state 45
    DECR            shift and go to state 46
    INCR            shift and go to state 47
    GT              shift and go to state 48
    LT              shift and go to state 49
    GE              shift and go to state 50
    LE              shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    LAND            shift and go to state 54
    LOR             shift and go to state 55


state 166

    (59) for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN . bloc
    (44) bloc -> . LBRACE stat_bloc RBRACE

    LBRACE          shift and go to state 112

    bloc                           shift and go to state 167

state 167

    (59) for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .

    COMMENT         reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    NEWLINE         reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    FUNCTION        reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    ID              reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    NULL            reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    SCAN            reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    PRINT           reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    FOR             reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    WHILE           reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    RETURN          reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    BREAK           reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    CONTINUE        reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    LNOT            reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    BOOLEAN         reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    LPAREN          reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    IF              reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    NUMBER          reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    STRING          reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    $end            reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    RBRACE          reduce using rule 59 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMENT in state 2 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for NULL in state 2 resolved as shift
WARNING: shift/reduce conflict for SCAN in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 2 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 2 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 2 resolved as shift
WARNING: shift/reduce conflict for LNOT in state 2 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 2 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 2 resolved as shift
WARNING: shift/reduce conflict for STRING in state 2 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 21 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 42 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 42 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 42 resolved as shift
WARNING: shift/reduce conflict for ID in state 42 resolved as shift
WARNING: shift/reduce conflict for NULL in state 42 resolved as shift
WARNING: shift/reduce conflict for SCAN in state 42 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 42 resolved as shift
WARNING: shift/reduce conflict for FOR in state 42 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 42 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 42 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 42 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 42 resolved as shift
WARNING: shift/reduce conflict for LNOT in state 42 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 42 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 42 resolved as shift
WARNING: shift/reduce conflict for IF in state 42 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 42 resolved as shift
WARNING: shift/reduce conflict for STRING in state 42 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 66 resolved as shift
WARNING: shift/reduce conflict for SUM in state 81 resolved as shift
WARNING: shift/reduce conflict for SUB in state 81 resolved as shift
WARNING: shift/reduce conflict for DECR in state 81 resolved as shift
WARNING: shift/reduce conflict for INCR in state 81 resolved as shift
WARNING: shift/reduce conflict for GT in state 81 resolved as shift
WARNING: shift/reduce conflict for LT in state 81 resolved as shift
WARNING: shift/reduce conflict for GE in state 81 resolved as shift
WARNING: shift/reduce conflict for LE in state 81 resolved as shift
WARNING: shift/reduce conflict for NE in state 81 resolved as shift
WARNING: shift/reduce conflict for EQ in state 81 resolved as shift
WARNING: shift/reduce conflict for LAND in state 81 resolved as shift
WARNING: shift/reduce conflict for LOR in state 81 resolved as shift
WARNING: shift/reduce conflict for SUM in state 88 resolved as shift
WARNING: shift/reduce conflict for SUB in state 88 resolved as shift
WARNING: shift/reduce conflict for DECR in state 88 resolved as shift
WARNING: shift/reduce conflict for INCR in state 88 resolved as shift
WARNING: shift/reduce conflict for GT in state 88 resolved as shift
WARNING: shift/reduce conflict for LT in state 88 resolved as shift
WARNING: shift/reduce conflict for GE in state 88 resolved as shift
WARNING: shift/reduce conflict for LE in state 88 resolved as shift
WARNING: shift/reduce conflict for NE in state 88 resolved as shift
WARNING: shift/reduce conflict for EQ in state 88 resolved as shift
WARNING: shift/reduce conflict for LAND in state 88 resolved as shift
WARNING: shift/reduce conflict for LOR in state 88 resolved as shift
WARNING: shift/reduce conflict for SUM in state 89 resolved as shift
WARNING: shift/reduce conflict for SUB in state 89 resolved as shift
WARNING: shift/reduce conflict for DECR in state 89 resolved as shift
WARNING: shift/reduce conflict for INCR in state 89 resolved as shift
WARNING: shift/reduce conflict for GT in state 89 resolved as shift
WARNING: shift/reduce conflict for LT in state 89 resolved as shift
WARNING: shift/reduce conflict for GE in state 89 resolved as shift
WARNING: shift/reduce conflict for LE in state 89 resolved as shift
WARNING: shift/reduce conflict for NE in state 89 resolved as shift
WARNING: shift/reduce conflict for EQ in state 89 resolved as shift
WARNING: shift/reduce conflict for LAND in state 89 resolved as shift
WARNING: shift/reduce conflict for LOR in state 89 resolved as shift
WARNING: shift/reduce conflict for SUM in state 90 resolved as shift
WARNING: shift/reduce conflict for SUB in state 90 resolved as shift
WARNING: shift/reduce conflict for DECR in state 90 resolved as shift
WARNING: shift/reduce conflict for INCR in state 90 resolved as shift
WARNING: shift/reduce conflict for GT in state 90 resolved as shift
WARNING: shift/reduce conflict for LT in state 90 resolved as shift
WARNING: shift/reduce conflict for GE in state 90 resolved as shift
WARNING: shift/reduce conflict for LE in state 90 resolved as shift
WARNING: shift/reduce conflict for NE in state 90 resolved as shift
WARNING: shift/reduce conflict for EQ in state 90 resolved as shift
WARNING: shift/reduce conflict for LAND in state 90 resolved as shift
WARNING: shift/reduce conflict for LOR in state 90 resolved as shift
WARNING: shift/reduce conflict for SUM in state 91 resolved as shift
WARNING: shift/reduce conflict for SUB in state 91 resolved as shift
WARNING: shift/reduce conflict for DECR in state 91 resolved as shift
WARNING: shift/reduce conflict for INCR in state 91 resolved as shift
WARNING: shift/reduce conflict for GT in state 91 resolved as shift
WARNING: shift/reduce conflict for LT in state 91 resolved as shift
WARNING: shift/reduce conflict for GE in state 91 resolved as shift
WARNING: shift/reduce conflict for LE in state 91 resolved as shift
WARNING: shift/reduce conflict for NE in state 91 resolved as shift
WARNING: shift/reduce conflict for EQ in state 91 resolved as shift
WARNING: shift/reduce conflict for LAND in state 91 resolved as shift
WARNING: shift/reduce conflict for LOR in state 91 resolved as shift
WARNING: shift/reduce conflict for SUM in state 92 resolved as shift
WARNING: shift/reduce conflict for SUB in state 92 resolved as shift
WARNING: shift/reduce conflict for DECR in state 92 resolved as shift
WARNING: shift/reduce conflict for INCR in state 92 resolved as shift
WARNING: shift/reduce conflict for GT in state 92 resolved as shift
WARNING: shift/reduce conflict for LT in state 92 resolved as shift
WARNING: shift/reduce conflict for GE in state 92 resolved as shift
WARNING: shift/reduce conflict for LE in state 92 resolved as shift
WARNING: shift/reduce conflict for NE in state 92 resolved as shift
WARNING: shift/reduce conflict for EQ in state 92 resolved as shift
WARNING: shift/reduce conflict for LAND in state 92 resolved as shift
WARNING: shift/reduce conflict for LOR in state 92 resolved as shift
WARNING: shift/reduce conflict for SUM in state 93 resolved as shift
WARNING: shift/reduce conflict for SUB in state 93 resolved as shift
WARNING: shift/reduce conflict for DECR in state 93 resolved as shift
WARNING: shift/reduce conflict for INCR in state 93 resolved as shift
WARNING: shift/reduce conflict for GT in state 93 resolved as shift
WARNING: shift/reduce conflict for LT in state 93 resolved as shift
WARNING: shift/reduce conflict for GE in state 93 resolved as shift
WARNING: shift/reduce conflict for LE in state 93 resolved as shift
WARNING: shift/reduce conflict for NE in state 93 resolved as shift
WARNING: shift/reduce conflict for EQ in state 93 resolved as shift
WARNING: shift/reduce conflict for LAND in state 93 resolved as shift
WARNING: shift/reduce conflict for LOR in state 93 resolved as shift
