Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RESERVED

Grammar

Rule 0     S' -> program
Rule 1     program -> program statement
Rule 2     program -> statement
Rule 3     program -> error
Rule 4     statement -> statement command
Rule 5     statement -> command
Rule 6     command -> function_def
Rule 7     command -> function_call
Rule 8     command -> conditional
Rule 9     command -> expression
Rule 10    command -> assignment
Rule 11    command -> expression_ass
Rule 12    command -> input
Rule 13    command -> output
Rule 14    command -> for_loop
Rule 15    command -> while_loop
Rule 16    command -> return
Rule 17    command -> break
Rule 18    command -> continue
Rule 19    command -> COMMENT
Rule 20    command -> NEWLINE
Rule 21    command -> import
Rule 22    import -> IMPORT files
Rule 23    files -> files COMMA FILENAME
Rule 24    files -> FILENAME
Rule 25    assignment -> ID ASSIGN expression
Rule 26    assignment -> ID ASSIGN LBRACKET list RBRACKET
Rule 27    input -> SCAN LPAREN ID RPAREN
Rule 28    output -> PRINT LPAREN plist RPAREN
Rule 29    plist -> pitem
Rule 30    plist -> plist COMMA pitem
Rule 31    pitem -> expression
Rule 32    condition -> expression GT expression
Rule 33    condition -> expression LT expression
Rule 34    condition -> expression GE expression
Rule 35    condition -> expression LE expression
Rule 36    condition -> expression NE expression
Rule 37    condition -> expression EQ expression
Rule 38    condition -> expression LAND expression
Rule 39    condition -> expression LOR expression
Rule 40    condition -> LNOT expression
Rule 41    condition -> BOOLEAN
Rule 42    ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc
Rule 43    if_bloc -> IF LPAREN condition RPAREN bloc
Rule 44    if_elif_bloc -> if_elif_bloc ELSE if_bloc
Rule 45    if_elif_bloc -> if_bloc
Rule 46    conditional -> if_elif_bloc ELSE bloc
Rule 47    conditional -> if_elif_bloc
Rule 48    bloc -> LBRACE stat_bloc RBRACE
Rule 49    stat_bloc -> stat_bloc command
Rule 50    stat_bloc -> command
Rule 51    function_def -> FUNCTION ID LPAREN param_list RPAREN bloc
Rule 52    function_def -> FUNCTION ID LPAREN RPAREN bloc
Rule 53    function_call -> ID LPAREN param_list_call RPAREN
Rule 54    function_call -> ID LPAREN RPAREN
Rule 55    param_list_call -> param_list_call COMMA param_call
Rule 56    param_list_call -> param_call
Rule 57    param_call -> factor
Rule 58    param_list -> param_list COMMA param
Rule 59    param_list -> param
Rule 60    param -> ID
Rule 61    return -> RETURN expression
Rule 62    return -> RETURN expression SEMI
Rule 63    for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc
Rule 64    while_loop -> WHILE LPAREN condition RPAREN bloc
Rule 65    continue -> CONTINUE
Rule 66    continue -> CONTINUE SEMI
Rule 67    break -> BREAK
Rule 68    break -> BREAK SEMI
Rule 69    expression -> expression SUM term
Rule 70    expression -> expression SUB term
Rule 71    term -> term MUL factor
Rule 72    term -> term DIV factor
Rule 73    term -> term IDIV factor
Rule 74    term -> term MOD factor
Rule 75    expression -> expression DECR
Rule 76    expression -> expression INCR
Rule 77    expression_ass -> ID SUM_ASS expression
Rule 78    expression_ass -> ID SUB_ASS expression
Rule 79    expression_ass -> ID MUL_ASS expression
Rule 80    expression_ass -> ID DIV_ASS expression
Rule 81    expression_ass -> ID IDIV_ASS expression
Rule 82    expression_ass -> ID MOD_ASS expression
Rule 83    expression -> condition
Rule 84    expression -> ternary_condition
Rule 85    expression -> term
Rule 86    expression -> NULL
Rule 87    term -> factor
Rule 88    factor -> NUMBER
Rule 89    factor -> ID
Rule 90    factor -> STRING
Rule 91    factor -> ID LBRACKET expression RBRACKET
Rule 92    factor -> LPAREN expression RPAREN
Rule 93    list -> list COMMA factor
Rule 94    list -> factor
Rule 95    list -> <empty>

Terminals, with rules where they appear

ASSIGN               : 25 26
BOOLEAN              : 41
BREAK                : 67 68
COLON                : 42
COMMA                : 23 30 55 58 93
COMMENT              : 19
CONTINUE             : 65 66
DECR                 : 75
DIV                  : 72
DIV_ASS              : 80
ELSE                 : 44 46
EQ                   : 37
FILENAME             : 23 24
FOR                  : 63
FUNCTION             : 51 52
GE                   : 34
GT                   : 32
ID                   : 25 26 27 51 52 53 54 60 77 78 79 80 81 82 89 91
IDIV                 : 73
IDIV_ASS             : 81
IF                   : 43
IMPORT               : 22
INCR                 : 76
LAND                 : 38
LBRACE               : 48
LBRACKET             : 26 91
LE                   : 35
LNOT                 : 40
LOR                  : 39
LPAREN               : 27 28 42 43 51 52 53 54 63 64 92
LT                   : 33
MOD                  : 74
MOD_ASS              : 82
MUL                  : 71
MUL_ASS              : 79
NE                   : 36
NEWLINE              : 20
NULL                 : 86
NUMBER               : 88
PRINT                : 28
QUES                 : 42
RBRACE               : 48
RBRACKET             : 26 91
RESERVED             : 
RETURN               : 61 62
RPAREN               : 27 28 42 43 51 52 53 54 63 64 92
SCAN                 : 27
SEMI                 : 62 63 63 66 68
STRING               : 90
SUB                  : 70
SUB_ASS              : 78
SUM                  : 69
SUM_ASS              : 77
WHILE                : 64
error                : 3

Nonterminals, with rules where they appear

assignment           : 10 63
bloc                 : 42 42 43 46 51 52 63 64
break                : 17
command              : 4 5 49 50
condition            : 42 43 63 64 83
conditional          : 8
continue             : 18
expression           : 9 25 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 61 62 63 69 70 75 76 77 78 79 80 81 82 91 92
expression_ass       : 11
factor               : 57 71 72 73 74 87 93 94
files                : 22 23
for_loop             : 14
function_call        : 7
function_def         : 6
if_bloc              : 44 45
if_elif_bloc         : 44 46 47
import               : 21
input                : 12
list                 : 26 93
output               : 13
param                : 58 59
param_call           : 55 56
param_list           : 51 58
param_list_call      : 53 55
pitem                : 29 30
plist                : 28 30
program              : 1 0
return               : 16
stat_bloc            : 48 49
statement            : 1 2 4
term                 : 69 70 71 72 73 74 85
ternary_condition    : 84
while_loop           : 15

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . error
    (4) statement -> . statement command
    (5) statement -> . command
    (6) command -> . function_def
    (7) command -> . function_call
    (8) command -> . conditional
    (9) command -> . expression
    (10) command -> . assignment
    (11) command -> . expression_ass
    (12) command -> . input
    (13) command -> . output
    (14) command -> . for_loop
    (15) command -> . while_loop
    (16) command -> . return
    (17) command -> . break
    (18) command -> . continue
    (19) command -> . COMMENT
    (20) command -> . NEWLINE
    (21) command -> . import
    (51) function_def -> . FUNCTION ID LPAREN param_list RPAREN bloc
    (52) function_def -> . FUNCTION ID LPAREN RPAREN bloc
    (53) function_call -> . ID LPAREN param_list_call RPAREN
    (54) function_call -> . ID LPAREN RPAREN
    (46) conditional -> . if_elif_bloc ELSE bloc
    (47) conditional -> . if_elif_bloc
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (25) assignment -> . ID ASSIGN expression
    (26) assignment -> . ID ASSIGN LBRACKET list RBRACKET
    (77) expression_ass -> . ID SUM_ASS expression
    (78) expression_ass -> . ID SUB_ASS expression
    (79) expression_ass -> . ID MUL_ASS expression
    (80) expression_ass -> . ID DIV_ASS expression
    (81) expression_ass -> . ID IDIV_ASS expression
    (82) expression_ass -> . ID MOD_ASS expression
    (27) input -> . SCAN LPAREN ID RPAREN
    (28) output -> . PRINT LPAREN plist RPAREN
    (63) for_loop -> . FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc
    (64) while_loop -> . WHILE LPAREN condition RPAREN bloc
    (61) return -> . RETURN expression
    (62) return -> . RETURN expression SEMI
    (67) break -> . BREAK
    (68) break -> . BREAK SEMI
    (65) continue -> . CONTINUE
    (66) continue -> . CONTINUE SEMI
    (22) import -> . IMPORT files
    (44) if_elif_bloc -> . if_elif_bloc ELSE if_bloc
    (45) if_elif_bloc -> . if_bloc
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (43) if_bloc -> . IF LPAREN condition RPAREN bloc
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    error           shift and go to state 3
    COMMENT         shift and go to state 18
    NEWLINE         shift and go to state 19
    FUNCTION        shift and go to state 21
    ID              shift and go to state 22
    NULL            shift and go to state 28
    SCAN            shift and go to state 29
    PRINT           shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    RETURN          shift and go to state 33
    BREAK           shift and go to state 34
    CONTINUE        shift and go to state 35
    IMPORT          shift and go to state 36
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    IF              shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43

    program                        shift and go to state 1
    statement                      shift and go to state 2
    command                        shift and go to state 4
    function_def                   shift and go to state 5
    function_call                  shift and go to state 6
    conditional                    shift and go to state 7
    expression                     shift and go to state 8
    assignment                     shift and go to state 9
    expression_ass                 shift and go to state 10
    input                          shift and go to state 11
    output                         shift and go to state 12
    for_loop                       shift and go to state 13
    while_loop                     shift and go to state 14
    return                         shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    import                         shift and go to state 20
    if_elif_bloc                   shift and go to state 24
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    if_bloc                        shift and go to state 37
    factor                         shift and go to state 40

state 1

    (0) S' -> program .
    (1) program -> program . statement
    (4) statement -> . statement command
    (5) statement -> . command
    (6) command -> . function_def
    (7) command -> . function_call
    (8) command -> . conditional
    (9) command -> . expression
    (10) command -> . assignment
    (11) command -> . expression_ass
    (12) command -> . input
    (13) command -> . output
    (14) command -> . for_loop
    (15) command -> . while_loop
    (16) command -> . return
    (17) command -> . break
    (18) command -> . continue
    (19) command -> . COMMENT
    (20) command -> . NEWLINE
    (21) command -> . import
    (51) function_def -> . FUNCTION ID LPAREN param_list RPAREN bloc
    (52) function_def -> . FUNCTION ID LPAREN RPAREN bloc
    (53) function_call -> . ID LPAREN param_list_call RPAREN
    (54) function_call -> . ID LPAREN RPAREN
    (46) conditional -> . if_elif_bloc ELSE bloc
    (47) conditional -> . if_elif_bloc
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (25) assignment -> . ID ASSIGN expression
    (26) assignment -> . ID ASSIGN LBRACKET list RBRACKET
    (77) expression_ass -> . ID SUM_ASS expression
    (78) expression_ass -> . ID SUB_ASS expression
    (79) expression_ass -> . ID MUL_ASS expression
    (80) expression_ass -> . ID DIV_ASS expression
    (81) expression_ass -> . ID IDIV_ASS expression
    (82) expression_ass -> . ID MOD_ASS expression
    (27) input -> . SCAN LPAREN ID RPAREN
    (28) output -> . PRINT LPAREN plist RPAREN
    (63) for_loop -> . FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc
    (64) while_loop -> . WHILE LPAREN condition RPAREN bloc
    (61) return -> . RETURN expression
    (62) return -> . RETURN expression SEMI
    (67) break -> . BREAK
    (68) break -> . BREAK SEMI
    (65) continue -> . CONTINUE
    (66) continue -> . CONTINUE SEMI
    (22) import -> . IMPORT files
    (44) if_elif_bloc -> . if_elif_bloc ELSE if_bloc
    (45) if_elif_bloc -> . if_bloc
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (43) if_bloc -> . IF LPAREN condition RPAREN bloc
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    COMMENT         shift and go to state 18
    NEWLINE         shift and go to state 19
    FUNCTION        shift and go to state 21
    ID              shift and go to state 22
    NULL            shift and go to state 28
    SCAN            shift and go to state 29
    PRINT           shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    RETURN          shift and go to state 33
    BREAK           shift and go to state 34
    CONTINUE        shift and go to state 35
    IMPORT          shift and go to state 36
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    IF              shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43

    statement                      shift and go to state 44
    command                        shift and go to state 4
    function_def                   shift and go to state 5
    function_call                  shift and go to state 6
    conditional                    shift and go to state 7
    expression                     shift and go to state 8
    assignment                     shift and go to state 9
    expression_ass                 shift and go to state 10
    input                          shift and go to state 11
    output                         shift and go to state 12
    for_loop                       shift and go to state 13
    while_loop                     shift and go to state 14
    return                         shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    import                         shift and go to state 20
    if_elif_bloc                   shift and go to state 24
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    if_bloc                        shift and go to state 37
    factor                         shift and go to state 40

state 2

    (2) program -> statement .
    (4) statement -> statement . command
    (6) command -> . function_def
    (7) command -> . function_call
    (8) command -> . conditional
    (9) command -> . expression
    (10) command -> . assignment
    (11) command -> . expression_ass
    (12) command -> . input
    (13) command -> . output
    (14) command -> . for_loop
    (15) command -> . while_loop
    (16) command -> . return
    (17) command -> . break
    (18) command -> . continue
    (19) command -> . COMMENT
    (20) command -> . NEWLINE
    (21) command -> . import
    (51) function_def -> . FUNCTION ID LPAREN param_list RPAREN bloc
    (52) function_def -> . FUNCTION ID LPAREN RPAREN bloc
    (53) function_call -> . ID LPAREN param_list_call RPAREN
    (54) function_call -> . ID LPAREN RPAREN
    (46) conditional -> . if_elif_bloc ELSE bloc
    (47) conditional -> . if_elif_bloc
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (25) assignment -> . ID ASSIGN expression
    (26) assignment -> . ID ASSIGN LBRACKET list RBRACKET
    (77) expression_ass -> . ID SUM_ASS expression
    (78) expression_ass -> . ID SUB_ASS expression
    (79) expression_ass -> . ID MUL_ASS expression
    (80) expression_ass -> . ID DIV_ASS expression
    (81) expression_ass -> . ID IDIV_ASS expression
    (82) expression_ass -> . ID MOD_ASS expression
    (27) input -> . SCAN LPAREN ID RPAREN
    (28) output -> . PRINT LPAREN plist RPAREN
    (63) for_loop -> . FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc
    (64) while_loop -> . WHILE LPAREN condition RPAREN bloc
    (61) return -> . RETURN expression
    (62) return -> . RETURN expression SEMI
    (67) break -> . BREAK
    (68) break -> . BREAK SEMI
    (65) continue -> . CONTINUE
    (66) continue -> . CONTINUE SEMI
    (22) import -> . IMPORT files
    (44) if_elif_bloc -> . if_elif_bloc ELSE if_bloc
    (45) if_elif_bloc -> . if_bloc
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (43) if_bloc -> . IF LPAREN condition RPAREN bloc
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for SCAN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for LNOT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 2 (program -> statement .)
    COMMENT         shift and go to state 18
    NEWLINE         shift and go to state 19
    FUNCTION        shift and go to state 21
    ID              shift and go to state 22
    NULL            shift and go to state 28
    SCAN            shift and go to state 29
    PRINT           shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    RETURN          shift and go to state 33
    BREAK           shift and go to state 34
    CONTINUE        shift and go to state 35
    IMPORT          shift and go to state 36
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    IF              shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43

  ! COMMENT         [ reduce using rule 2 (program -> statement .) ]
  ! NEWLINE         [ reduce using rule 2 (program -> statement .) ]
  ! FUNCTION        [ reduce using rule 2 (program -> statement .) ]
  ! ID              [ reduce using rule 2 (program -> statement .) ]
  ! NULL            [ reduce using rule 2 (program -> statement .) ]
  ! SCAN            [ reduce using rule 2 (program -> statement .) ]
  ! PRINT           [ reduce using rule 2 (program -> statement .) ]
  ! FOR             [ reduce using rule 2 (program -> statement .) ]
  ! WHILE           [ reduce using rule 2 (program -> statement .) ]
  ! RETURN          [ reduce using rule 2 (program -> statement .) ]
  ! BREAK           [ reduce using rule 2 (program -> statement .) ]
  ! CONTINUE        [ reduce using rule 2 (program -> statement .) ]
  ! IMPORT          [ reduce using rule 2 (program -> statement .) ]
  ! LNOT            [ reduce using rule 2 (program -> statement .) ]
  ! BOOLEAN         [ reduce using rule 2 (program -> statement .) ]
  ! LPAREN          [ reduce using rule 2 (program -> statement .) ]
  ! IF              [ reduce using rule 2 (program -> statement .) ]
  ! NUMBER          [ reduce using rule 2 (program -> statement .) ]
  ! STRING          [ reduce using rule 2 (program -> statement .) ]

    command                        shift and go to state 45
    function_def                   shift and go to state 5
    function_call                  shift and go to state 6
    conditional                    shift and go to state 7
    expression                     shift and go to state 8
    assignment                     shift and go to state 9
    expression_ass                 shift and go to state 10
    input                          shift and go to state 11
    output                         shift and go to state 12
    for_loop                       shift and go to state 13
    while_loop                     shift and go to state 14
    return                         shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    import                         shift and go to state 20
    if_elif_bloc                   shift and go to state 24
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    if_bloc                        shift and go to state 37
    factor                         shift and go to state 40

state 3

    (3) program -> error .

    COMMENT         reduce using rule 3 (program -> error .)
    NEWLINE         reduce using rule 3 (program -> error .)
    FUNCTION        reduce using rule 3 (program -> error .)
    ID              reduce using rule 3 (program -> error .)
    NULL            reduce using rule 3 (program -> error .)
    SCAN            reduce using rule 3 (program -> error .)
    PRINT           reduce using rule 3 (program -> error .)
    FOR             reduce using rule 3 (program -> error .)
    WHILE           reduce using rule 3 (program -> error .)
    RETURN          reduce using rule 3 (program -> error .)
    BREAK           reduce using rule 3 (program -> error .)
    CONTINUE        reduce using rule 3 (program -> error .)
    IMPORT          reduce using rule 3 (program -> error .)
    LNOT            reduce using rule 3 (program -> error .)
    BOOLEAN         reduce using rule 3 (program -> error .)
    LPAREN          reduce using rule 3 (program -> error .)
    IF              reduce using rule 3 (program -> error .)
    NUMBER          reduce using rule 3 (program -> error .)
    STRING          reduce using rule 3 (program -> error .)
    $end            reduce using rule 3 (program -> error .)


state 4

    (5) statement -> command .

    COMMENT         reduce using rule 5 (statement -> command .)
    NEWLINE         reduce using rule 5 (statement -> command .)
    FUNCTION        reduce using rule 5 (statement -> command .)
    ID              reduce using rule 5 (statement -> command .)
    NULL            reduce using rule 5 (statement -> command .)
    SCAN            reduce using rule 5 (statement -> command .)
    PRINT           reduce using rule 5 (statement -> command .)
    FOR             reduce using rule 5 (statement -> command .)
    WHILE           reduce using rule 5 (statement -> command .)
    RETURN          reduce using rule 5 (statement -> command .)
    BREAK           reduce using rule 5 (statement -> command .)
    CONTINUE        reduce using rule 5 (statement -> command .)
    IMPORT          reduce using rule 5 (statement -> command .)
    LNOT            reduce using rule 5 (statement -> command .)
    BOOLEAN         reduce using rule 5 (statement -> command .)
    LPAREN          reduce using rule 5 (statement -> command .)
    IF              reduce using rule 5 (statement -> command .)
    NUMBER          reduce using rule 5 (statement -> command .)
    STRING          reduce using rule 5 (statement -> command .)
    $end            reduce using rule 5 (statement -> command .)


state 5

    (6) command -> function_def .

    COMMENT         reduce using rule 6 (command -> function_def .)
    NEWLINE         reduce using rule 6 (command -> function_def .)
    FUNCTION        reduce using rule 6 (command -> function_def .)
    ID              reduce using rule 6 (command -> function_def .)
    NULL            reduce using rule 6 (command -> function_def .)
    SCAN            reduce using rule 6 (command -> function_def .)
    PRINT           reduce using rule 6 (command -> function_def .)
    FOR             reduce using rule 6 (command -> function_def .)
    WHILE           reduce using rule 6 (command -> function_def .)
    RETURN          reduce using rule 6 (command -> function_def .)
    BREAK           reduce using rule 6 (command -> function_def .)
    CONTINUE        reduce using rule 6 (command -> function_def .)
    IMPORT          reduce using rule 6 (command -> function_def .)
    LNOT            reduce using rule 6 (command -> function_def .)
    BOOLEAN         reduce using rule 6 (command -> function_def .)
    LPAREN          reduce using rule 6 (command -> function_def .)
    IF              reduce using rule 6 (command -> function_def .)
    NUMBER          reduce using rule 6 (command -> function_def .)
    STRING          reduce using rule 6 (command -> function_def .)
    $end            reduce using rule 6 (command -> function_def .)
    RBRACE          reduce using rule 6 (command -> function_def .)


state 6

    (7) command -> function_call .

    COMMENT         reduce using rule 7 (command -> function_call .)
    NEWLINE         reduce using rule 7 (command -> function_call .)
    FUNCTION        reduce using rule 7 (command -> function_call .)
    ID              reduce using rule 7 (command -> function_call .)
    NULL            reduce using rule 7 (command -> function_call .)
    SCAN            reduce using rule 7 (command -> function_call .)
    PRINT           reduce using rule 7 (command -> function_call .)
    FOR             reduce using rule 7 (command -> function_call .)
    WHILE           reduce using rule 7 (command -> function_call .)
    RETURN          reduce using rule 7 (command -> function_call .)
    BREAK           reduce using rule 7 (command -> function_call .)
    CONTINUE        reduce using rule 7 (command -> function_call .)
    IMPORT          reduce using rule 7 (command -> function_call .)
    LNOT            reduce using rule 7 (command -> function_call .)
    BOOLEAN         reduce using rule 7 (command -> function_call .)
    LPAREN          reduce using rule 7 (command -> function_call .)
    IF              reduce using rule 7 (command -> function_call .)
    NUMBER          reduce using rule 7 (command -> function_call .)
    STRING          reduce using rule 7 (command -> function_call .)
    $end            reduce using rule 7 (command -> function_call .)
    RBRACE          reduce using rule 7 (command -> function_call .)


state 7

    (8) command -> conditional .

    COMMENT         reduce using rule 8 (command -> conditional .)
    NEWLINE         reduce using rule 8 (command -> conditional .)
    FUNCTION        reduce using rule 8 (command -> conditional .)
    ID              reduce using rule 8 (command -> conditional .)
    NULL            reduce using rule 8 (command -> conditional .)
    SCAN            reduce using rule 8 (command -> conditional .)
    PRINT           reduce using rule 8 (command -> conditional .)
    FOR             reduce using rule 8 (command -> conditional .)
    WHILE           reduce using rule 8 (command -> conditional .)
    RETURN          reduce using rule 8 (command -> conditional .)
    BREAK           reduce using rule 8 (command -> conditional .)
    CONTINUE        reduce using rule 8 (command -> conditional .)
    IMPORT          reduce using rule 8 (command -> conditional .)
    LNOT            reduce using rule 8 (command -> conditional .)
    BOOLEAN         reduce using rule 8 (command -> conditional .)
    LPAREN          reduce using rule 8 (command -> conditional .)
    IF              reduce using rule 8 (command -> conditional .)
    NUMBER          reduce using rule 8 (command -> conditional .)
    STRING          reduce using rule 8 (command -> conditional .)
    $end            reduce using rule 8 (command -> conditional .)
    RBRACE          reduce using rule 8 (command -> conditional .)


state 8

    (9) command -> expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

    COMMENT         reduce using rule 9 (command -> expression .)
    NEWLINE         reduce using rule 9 (command -> expression .)
    FUNCTION        reduce using rule 9 (command -> expression .)
    ID              reduce using rule 9 (command -> expression .)
    NULL            reduce using rule 9 (command -> expression .)
    SCAN            reduce using rule 9 (command -> expression .)
    PRINT           reduce using rule 9 (command -> expression .)
    FOR             reduce using rule 9 (command -> expression .)
    WHILE           reduce using rule 9 (command -> expression .)
    RETURN          reduce using rule 9 (command -> expression .)
    BREAK           reduce using rule 9 (command -> expression .)
    CONTINUE        reduce using rule 9 (command -> expression .)
    IMPORT          reduce using rule 9 (command -> expression .)
    LNOT            reduce using rule 9 (command -> expression .)
    BOOLEAN         reduce using rule 9 (command -> expression .)
    LPAREN          reduce using rule 9 (command -> expression .)
    IF              reduce using rule 9 (command -> expression .)
    NUMBER          reduce using rule 9 (command -> expression .)
    STRING          reduce using rule 9 (command -> expression .)
    $end            reduce using rule 9 (command -> expression .)
    RBRACE          reduce using rule 9 (command -> expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57


state 9

    (10) command -> assignment .

    COMMENT         reduce using rule 10 (command -> assignment .)
    NEWLINE         reduce using rule 10 (command -> assignment .)
    FUNCTION        reduce using rule 10 (command -> assignment .)
    ID              reduce using rule 10 (command -> assignment .)
    NULL            reduce using rule 10 (command -> assignment .)
    SCAN            reduce using rule 10 (command -> assignment .)
    PRINT           reduce using rule 10 (command -> assignment .)
    FOR             reduce using rule 10 (command -> assignment .)
    WHILE           reduce using rule 10 (command -> assignment .)
    RETURN          reduce using rule 10 (command -> assignment .)
    BREAK           reduce using rule 10 (command -> assignment .)
    CONTINUE        reduce using rule 10 (command -> assignment .)
    IMPORT          reduce using rule 10 (command -> assignment .)
    LNOT            reduce using rule 10 (command -> assignment .)
    BOOLEAN         reduce using rule 10 (command -> assignment .)
    LPAREN          reduce using rule 10 (command -> assignment .)
    IF              reduce using rule 10 (command -> assignment .)
    NUMBER          reduce using rule 10 (command -> assignment .)
    STRING          reduce using rule 10 (command -> assignment .)
    $end            reduce using rule 10 (command -> assignment .)
    RBRACE          reduce using rule 10 (command -> assignment .)


state 10

    (11) command -> expression_ass .

    COMMENT         reduce using rule 11 (command -> expression_ass .)
    NEWLINE         reduce using rule 11 (command -> expression_ass .)
    FUNCTION        reduce using rule 11 (command -> expression_ass .)
    ID              reduce using rule 11 (command -> expression_ass .)
    NULL            reduce using rule 11 (command -> expression_ass .)
    SCAN            reduce using rule 11 (command -> expression_ass .)
    PRINT           reduce using rule 11 (command -> expression_ass .)
    FOR             reduce using rule 11 (command -> expression_ass .)
    WHILE           reduce using rule 11 (command -> expression_ass .)
    RETURN          reduce using rule 11 (command -> expression_ass .)
    BREAK           reduce using rule 11 (command -> expression_ass .)
    CONTINUE        reduce using rule 11 (command -> expression_ass .)
    IMPORT          reduce using rule 11 (command -> expression_ass .)
    LNOT            reduce using rule 11 (command -> expression_ass .)
    BOOLEAN         reduce using rule 11 (command -> expression_ass .)
    LPAREN          reduce using rule 11 (command -> expression_ass .)
    IF              reduce using rule 11 (command -> expression_ass .)
    NUMBER          reduce using rule 11 (command -> expression_ass .)
    STRING          reduce using rule 11 (command -> expression_ass .)
    $end            reduce using rule 11 (command -> expression_ass .)
    RBRACE          reduce using rule 11 (command -> expression_ass .)


state 11

    (12) command -> input .

    COMMENT         reduce using rule 12 (command -> input .)
    NEWLINE         reduce using rule 12 (command -> input .)
    FUNCTION        reduce using rule 12 (command -> input .)
    ID              reduce using rule 12 (command -> input .)
    NULL            reduce using rule 12 (command -> input .)
    SCAN            reduce using rule 12 (command -> input .)
    PRINT           reduce using rule 12 (command -> input .)
    FOR             reduce using rule 12 (command -> input .)
    WHILE           reduce using rule 12 (command -> input .)
    RETURN          reduce using rule 12 (command -> input .)
    BREAK           reduce using rule 12 (command -> input .)
    CONTINUE        reduce using rule 12 (command -> input .)
    IMPORT          reduce using rule 12 (command -> input .)
    LNOT            reduce using rule 12 (command -> input .)
    BOOLEAN         reduce using rule 12 (command -> input .)
    LPAREN          reduce using rule 12 (command -> input .)
    IF              reduce using rule 12 (command -> input .)
    NUMBER          reduce using rule 12 (command -> input .)
    STRING          reduce using rule 12 (command -> input .)
    $end            reduce using rule 12 (command -> input .)
    RBRACE          reduce using rule 12 (command -> input .)


state 12

    (13) command -> output .

    COMMENT         reduce using rule 13 (command -> output .)
    NEWLINE         reduce using rule 13 (command -> output .)
    FUNCTION        reduce using rule 13 (command -> output .)
    ID              reduce using rule 13 (command -> output .)
    NULL            reduce using rule 13 (command -> output .)
    SCAN            reduce using rule 13 (command -> output .)
    PRINT           reduce using rule 13 (command -> output .)
    FOR             reduce using rule 13 (command -> output .)
    WHILE           reduce using rule 13 (command -> output .)
    RETURN          reduce using rule 13 (command -> output .)
    BREAK           reduce using rule 13 (command -> output .)
    CONTINUE        reduce using rule 13 (command -> output .)
    IMPORT          reduce using rule 13 (command -> output .)
    LNOT            reduce using rule 13 (command -> output .)
    BOOLEAN         reduce using rule 13 (command -> output .)
    LPAREN          reduce using rule 13 (command -> output .)
    IF              reduce using rule 13 (command -> output .)
    NUMBER          reduce using rule 13 (command -> output .)
    STRING          reduce using rule 13 (command -> output .)
    $end            reduce using rule 13 (command -> output .)
    RBRACE          reduce using rule 13 (command -> output .)


state 13

    (14) command -> for_loop .

    COMMENT         reduce using rule 14 (command -> for_loop .)
    NEWLINE         reduce using rule 14 (command -> for_loop .)
    FUNCTION        reduce using rule 14 (command -> for_loop .)
    ID              reduce using rule 14 (command -> for_loop .)
    NULL            reduce using rule 14 (command -> for_loop .)
    SCAN            reduce using rule 14 (command -> for_loop .)
    PRINT           reduce using rule 14 (command -> for_loop .)
    FOR             reduce using rule 14 (command -> for_loop .)
    WHILE           reduce using rule 14 (command -> for_loop .)
    RETURN          reduce using rule 14 (command -> for_loop .)
    BREAK           reduce using rule 14 (command -> for_loop .)
    CONTINUE        reduce using rule 14 (command -> for_loop .)
    IMPORT          reduce using rule 14 (command -> for_loop .)
    LNOT            reduce using rule 14 (command -> for_loop .)
    BOOLEAN         reduce using rule 14 (command -> for_loop .)
    LPAREN          reduce using rule 14 (command -> for_loop .)
    IF              reduce using rule 14 (command -> for_loop .)
    NUMBER          reduce using rule 14 (command -> for_loop .)
    STRING          reduce using rule 14 (command -> for_loop .)
    $end            reduce using rule 14 (command -> for_loop .)
    RBRACE          reduce using rule 14 (command -> for_loop .)


state 14

    (15) command -> while_loop .

    COMMENT         reduce using rule 15 (command -> while_loop .)
    NEWLINE         reduce using rule 15 (command -> while_loop .)
    FUNCTION        reduce using rule 15 (command -> while_loop .)
    ID              reduce using rule 15 (command -> while_loop .)
    NULL            reduce using rule 15 (command -> while_loop .)
    SCAN            reduce using rule 15 (command -> while_loop .)
    PRINT           reduce using rule 15 (command -> while_loop .)
    FOR             reduce using rule 15 (command -> while_loop .)
    WHILE           reduce using rule 15 (command -> while_loop .)
    RETURN          reduce using rule 15 (command -> while_loop .)
    BREAK           reduce using rule 15 (command -> while_loop .)
    CONTINUE        reduce using rule 15 (command -> while_loop .)
    IMPORT          reduce using rule 15 (command -> while_loop .)
    LNOT            reduce using rule 15 (command -> while_loop .)
    BOOLEAN         reduce using rule 15 (command -> while_loop .)
    LPAREN          reduce using rule 15 (command -> while_loop .)
    IF              reduce using rule 15 (command -> while_loop .)
    NUMBER          reduce using rule 15 (command -> while_loop .)
    STRING          reduce using rule 15 (command -> while_loop .)
    $end            reduce using rule 15 (command -> while_loop .)
    RBRACE          reduce using rule 15 (command -> while_loop .)


state 15

    (16) command -> return .

    COMMENT         reduce using rule 16 (command -> return .)
    NEWLINE         reduce using rule 16 (command -> return .)
    FUNCTION        reduce using rule 16 (command -> return .)
    ID              reduce using rule 16 (command -> return .)
    NULL            reduce using rule 16 (command -> return .)
    SCAN            reduce using rule 16 (command -> return .)
    PRINT           reduce using rule 16 (command -> return .)
    FOR             reduce using rule 16 (command -> return .)
    WHILE           reduce using rule 16 (command -> return .)
    RETURN          reduce using rule 16 (command -> return .)
    BREAK           reduce using rule 16 (command -> return .)
    CONTINUE        reduce using rule 16 (command -> return .)
    IMPORT          reduce using rule 16 (command -> return .)
    LNOT            reduce using rule 16 (command -> return .)
    BOOLEAN         reduce using rule 16 (command -> return .)
    LPAREN          reduce using rule 16 (command -> return .)
    IF              reduce using rule 16 (command -> return .)
    NUMBER          reduce using rule 16 (command -> return .)
    STRING          reduce using rule 16 (command -> return .)
    $end            reduce using rule 16 (command -> return .)
    RBRACE          reduce using rule 16 (command -> return .)


state 16

    (17) command -> break .

    COMMENT         reduce using rule 17 (command -> break .)
    NEWLINE         reduce using rule 17 (command -> break .)
    FUNCTION        reduce using rule 17 (command -> break .)
    ID              reduce using rule 17 (command -> break .)
    NULL            reduce using rule 17 (command -> break .)
    SCAN            reduce using rule 17 (command -> break .)
    PRINT           reduce using rule 17 (command -> break .)
    FOR             reduce using rule 17 (command -> break .)
    WHILE           reduce using rule 17 (command -> break .)
    RETURN          reduce using rule 17 (command -> break .)
    BREAK           reduce using rule 17 (command -> break .)
    CONTINUE        reduce using rule 17 (command -> break .)
    IMPORT          reduce using rule 17 (command -> break .)
    LNOT            reduce using rule 17 (command -> break .)
    BOOLEAN         reduce using rule 17 (command -> break .)
    LPAREN          reduce using rule 17 (command -> break .)
    IF              reduce using rule 17 (command -> break .)
    NUMBER          reduce using rule 17 (command -> break .)
    STRING          reduce using rule 17 (command -> break .)
    $end            reduce using rule 17 (command -> break .)
    RBRACE          reduce using rule 17 (command -> break .)


state 17

    (18) command -> continue .

    COMMENT         reduce using rule 18 (command -> continue .)
    NEWLINE         reduce using rule 18 (command -> continue .)
    FUNCTION        reduce using rule 18 (command -> continue .)
    ID              reduce using rule 18 (command -> continue .)
    NULL            reduce using rule 18 (command -> continue .)
    SCAN            reduce using rule 18 (command -> continue .)
    PRINT           reduce using rule 18 (command -> continue .)
    FOR             reduce using rule 18 (command -> continue .)
    WHILE           reduce using rule 18 (command -> continue .)
    RETURN          reduce using rule 18 (command -> continue .)
    BREAK           reduce using rule 18 (command -> continue .)
    CONTINUE        reduce using rule 18 (command -> continue .)
    IMPORT          reduce using rule 18 (command -> continue .)
    LNOT            reduce using rule 18 (command -> continue .)
    BOOLEAN         reduce using rule 18 (command -> continue .)
    LPAREN          reduce using rule 18 (command -> continue .)
    IF              reduce using rule 18 (command -> continue .)
    NUMBER          reduce using rule 18 (command -> continue .)
    STRING          reduce using rule 18 (command -> continue .)
    $end            reduce using rule 18 (command -> continue .)
    RBRACE          reduce using rule 18 (command -> continue .)


state 18

    (19) command -> COMMENT .

    COMMENT         reduce using rule 19 (command -> COMMENT .)
    NEWLINE         reduce using rule 19 (command -> COMMENT .)
    FUNCTION        reduce using rule 19 (command -> COMMENT .)
    ID              reduce using rule 19 (command -> COMMENT .)
    NULL            reduce using rule 19 (command -> COMMENT .)
    SCAN            reduce using rule 19 (command -> COMMENT .)
    PRINT           reduce using rule 19 (command -> COMMENT .)
    FOR             reduce using rule 19 (command -> COMMENT .)
    WHILE           reduce using rule 19 (command -> COMMENT .)
    RETURN          reduce using rule 19 (command -> COMMENT .)
    BREAK           reduce using rule 19 (command -> COMMENT .)
    CONTINUE        reduce using rule 19 (command -> COMMENT .)
    IMPORT          reduce using rule 19 (command -> COMMENT .)
    LNOT            reduce using rule 19 (command -> COMMENT .)
    BOOLEAN         reduce using rule 19 (command -> COMMENT .)
    LPAREN          reduce using rule 19 (command -> COMMENT .)
    IF              reduce using rule 19 (command -> COMMENT .)
    NUMBER          reduce using rule 19 (command -> COMMENT .)
    STRING          reduce using rule 19 (command -> COMMENT .)
    $end            reduce using rule 19 (command -> COMMENT .)
    RBRACE          reduce using rule 19 (command -> COMMENT .)


state 19

    (20) command -> NEWLINE .

    COMMENT         reduce using rule 20 (command -> NEWLINE .)
    NEWLINE         reduce using rule 20 (command -> NEWLINE .)
    FUNCTION        reduce using rule 20 (command -> NEWLINE .)
    ID              reduce using rule 20 (command -> NEWLINE .)
    NULL            reduce using rule 20 (command -> NEWLINE .)
    SCAN            reduce using rule 20 (command -> NEWLINE .)
    PRINT           reduce using rule 20 (command -> NEWLINE .)
    FOR             reduce using rule 20 (command -> NEWLINE .)
    WHILE           reduce using rule 20 (command -> NEWLINE .)
    RETURN          reduce using rule 20 (command -> NEWLINE .)
    BREAK           reduce using rule 20 (command -> NEWLINE .)
    CONTINUE        reduce using rule 20 (command -> NEWLINE .)
    IMPORT          reduce using rule 20 (command -> NEWLINE .)
    LNOT            reduce using rule 20 (command -> NEWLINE .)
    BOOLEAN         reduce using rule 20 (command -> NEWLINE .)
    LPAREN          reduce using rule 20 (command -> NEWLINE .)
    IF              reduce using rule 20 (command -> NEWLINE .)
    NUMBER          reduce using rule 20 (command -> NEWLINE .)
    STRING          reduce using rule 20 (command -> NEWLINE .)
    $end            reduce using rule 20 (command -> NEWLINE .)
    RBRACE          reduce using rule 20 (command -> NEWLINE .)


state 20

    (21) command -> import .

    COMMENT         reduce using rule 21 (command -> import .)
    NEWLINE         reduce using rule 21 (command -> import .)
    FUNCTION        reduce using rule 21 (command -> import .)
    ID              reduce using rule 21 (command -> import .)
    NULL            reduce using rule 21 (command -> import .)
    SCAN            reduce using rule 21 (command -> import .)
    PRINT           reduce using rule 21 (command -> import .)
    FOR             reduce using rule 21 (command -> import .)
    WHILE           reduce using rule 21 (command -> import .)
    RETURN          reduce using rule 21 (command -> import .)
    BREAK           reduce using rule 21 (command -> import .)
    CONTINUE        reduce using rule 21 (command -> import .)
    IMPORT          reduce using rule 21 (command -> import .)
    LNOT            reduce using rule 21 (command -> import .)
    BOOLEAN         reduce using rule 21 (command -> import .)
    LPAREN          reduce using rule 21 (command -> import .)
    IF              reduce using rule 21 (command -> import .)
    NUMBER          reduce using rule 21 (command -> import .)
    STRING          reduce using rule 21 (command -> import .)
    $end            reduce using rule 21 (command -> import .)
    RBRACE          reduce using rule 21 (command -> import .)


state 21

    (51) function_def -> FUNCTION . ID LPAREN param_list RPAREN bloc
    (52) function_def -> FUNCTION . ID LPAREN RPAREN bloc

    ID              shift and go to state 58


state 22

    (53) function_call -> ID . LPAREN param_list_call RPAREN
    (54) function_call -> ID . LPAREN RPAREN
    (25) assignment -> ID . ASSIGN expression
    (26) assignment -> ID . ASSIGN LBRACKET list RBRACKET
    (77) expression_ass -> ID . SUM_ASS expression
    (78) expression_ass -> ID . SUB_ASS expression
    (79) expression_ass -> ID . MUL_ASS expression
    (80) expression_ass -> ID . DIV_ASS expression
    (81) expression_ass -> ID . IDIV_ASS expression
    (82) expression_ass -> ID . MOD_ASS expression
    (89) factor -> ID .
    (91) factor -> ID . LBRACKET expression RBRACKET

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 59
    ASSIGN          shift and go to state 60
    SUM_ASS         shift and go to state 62
    SUB_ASS         shift and go to state 63
    MUL_ASS         shift and go to state 64
    DIV_ASS         shift and go to state 65
    IDIV_ASS        shift and go to state 66
    MOD_ASS         shift and go to state 67
    MUL             reduce using rule 89 (factor -> ID .)
    DIV             reduce using rule 89 (factor -> ID .)
    IDIV            reduce using rule 89 (factor -> ID .)
    MOD             reduce using rule 89 (factor -> ID .)
    SUM             reduce using rule 89 (factor -> ID .)
    SUB             reduce using rule 89 (factor -> ID .)
    DECR            reduce using rule 89 (factor -> ID .)
    INCR            reduce using rule 89 (factor -> ID .)
    GT              reduce using rule 89 (factor -> ID .)
    LT              reduce using rule 89 (factor -> ID .)
    GE              reduce using rule 89 (factor -> ID .)
    LE              reduce using rule 89 (factor -> ID .)
    NE              reduce using rule 89 (factor -> ID .)
    EQ              reduce using rule 89 (factor -> ID .)
    LAND            reduce using rule 89 (factor -> ID .)
    LOR             reduce using rule 89 (factor -> ID .)
    COMMENT         reduce using rule 89 (factor -> ID .)
    NEWLINE         reduce using rule 89 (factor -> ID .)
    FUNCTION        reduce using rule 89 (factor -> ID .)
    ID              reduce using rule 89 (factor -> ID .)
    NULL            reduce using rule 89 (factor -> ID .)
    SCAN            reduce using rule 89 (factor -> ID .)
    PRINT           reduce using rule 89 (factor -> ID .)
    FOR             reduce using rule 89 (factor -> ID .)
    WHILE           reduce using rule 89 (factor -> ID .)
    RETURN          reduce using rule 89 (factor -> ID .)
    BREAK           reduce using rule 89 (factor -> ID .)
    CONTINUE        reduce using rule 89 (factor -> ID .)
    IMPORT          reduce using rule 89 (factor -> ID .)
    LNOT            reduce using rule 89 (factor -> ID .)
    BOOLEAN         reduce using rule 89 (factor -> ID .)
    IF              reduce using rule 89 (factor -> ID .)
    NUMBER          reduce using rule 89 (factor -> ID .)
    STRING          reduce using rule 89 (factor -> ID .)
    $end            reduce using rule 89 (factor -> ID .)
    RBRACE          reduce using rule 89 (factor -> ID .)
    LBRACKET        shift and go to state 61

  ! LPAREN          [ reduce using rule 89 (factor -> ID .) ]


state 23

    (42) ternary_condition -> LPAREN . condition RPAREN QUES bloc COLON bloc
    (92) factor -> LPAREN . expression RPAREN
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    NULL            shift and go to state 28
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    condition                      shift and go to state 68
    expression                     shift and go to state 69
    term                           shift and go to state 25
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 24

    (46) conditional -> if_elif_bloc . ELSE bloc
    (47) conditional -> if_elif_bloc .
    (44) if_elif_bloc -> if_elif_bloc . ELSE if_bloc

    ELSE            shift and go to state 71
    COMMENT         reduce using rule 47 (conditional -> if_elif_bloc .)
    NEWLINE         reduce using rule 47 (conditional -> if_elif_bloc .)
    FUNCTION        reduce using rule 47 (conditional -> if_elif_bloc .)
    ID              reduce using rule 47 (conditional -> if_elif_bloc .)
    NULL            reduce using rule 47 (conditional -> if_elif_bloc .)
    SCAN            reduce using rule 47 (conditional -> if_elif_bloc .)
    PRINT           reduce using rule 47 (conditional -> if_elif_bloc .)
    FOR             reduce using rule 47 (conditional -> if_elif_bloc .)
    WHILE           reduce using rule 47 (conditional -> if_elif_bloc .)
    RETURN          reduce using rule 47 (conditional -> if_elif_bloc .)
    BREAK           reduce using rule 47 (conditional -> if_elif_bloc .)
    CONTINUE        reduce using rule 47 (conditional -> if_elif_bloc .)
    IMPORT          reduce using rule 47 (conditional -> if_elif_bloc .)
    LNOT            reduce using rule 47 (conditional -> if_elif_bloc .)
    BOOLEAN         reduce using rule 47 (conditional -> if_elif_bloc .)
    LPAREN          reduce using rule 47 (conditional -> if_elif_bloc .)
    IF              reduce using rule 47 (conditional -> if_elif_bloc .)
    NUMBER          reduce using rule 47 (conditional -> if_elif_bloc .)
    STRING          reduce using rule 47 (conditional -> if_elif_bloc .)
    $end            reduce using rule 47 (conditional -> if_elif_bloc .)
    RBRACE          reduce using rule 47 (conditional -> if_elif_bloc .)


state 25

    (85) expression -> term .
    (71) term -> term . MUL factor
    (72) term -> term . DIV factor
    (73) term -> term . IDIV factor
    (74) term -> term . MOD factor

    SUM             reduce using rule 85 (expression -> term .)
    SUB             reduce using rule 85 (expression -> term .)
    DECR            reduce using rule 85 (expression -> term .)
    INCR            reduce using rule 85 (expression -> term .)
    GT              reduce using rule 85 (expression -> term .)
    LT              reduce using rule 85 (expression -> term .)
    GE              reduce using rule 85 (expression -> term .)
    LE              reduce using rule 85 (expression -> term .)
    NE              reduce using rule 85 (expression -> term .)
    EQ              reduce using rule 85 (expression -> term .)
    LAND            reduce using rule 85 (expression -> term .)
    LOR             reduce using rule 85 (expression -> term .)
    COMMENT         reduce using rule 85 (expression -> term .)
    NEWLINE         reduce using rule 85 (expression -> term .)
    FUNCTION        reduce using rule 85 (expression -> term .)
    ID              reduce using rule 85 (expression -> term .)
    NULL            reduce using rule 85 (expression -> term .)
    SCAN            reduce using rule 85 (expression -> term .)
    PRINT           reduce using rule 85 (expression -> term .)
    FOR             reduce using rule 85 (expression -> term .)
    WHILE           reduce using rule 85 (expression -> term .)
    RETURN          reduce using rule 85 (expression -> term .)
    BREAK           reduce using rule 85 (expression -> term .)
    CONTINUE        reduce using rule 85 (expression -> term .)
    IMPORT          reduce using rule 85 (expression -> term .)
    LNOT            reduce using rule 85 (expression -> term .)
    BOOLEAN         reduce using rule 85 (expression -> term .)
    LPAREN          reduce using rule 85 (expression -> term .)
    IF              reduce using rule 85 (expression -> term .)
    NUMBER          reduce using rule 85 (expression -> term .)
    STRING          reduce using rule 85 (expression -> term .)
    $end            reduce using rule 85 (expression -> term .)
    RPAREN          reduce using rule 85 (expression -> term .)
    SEMI            reduce using rule 85 (expression -> term .)
    RBRACE          reduce using rule 85 (expression -> term .)
    RBRACKET        reduce using rule 85 (expression -> term .)
    COMMA           reduce using rule 85 (expression -> term .)
    MUL             shift and go to state 72
    DIV             shift and go to state 73
    IDIV            shift and go to state 74
    MOD             shift and go to state 75


state 26

    (83) expression -> condition .

    SUM             reduce using rule 83 (expression -> condition .)
    SUB             reduce using rule 83 (expression -> condition .)
    DECR            reduce using rule 83 (expression -> condition .)
    INCR            reduce using rule 83 (expression -> condition .)
    GT              reduce using rule 83 (expression -> condition .)
    LT              reduce using rule 83 (expression -> condition .)
    GE              reduce using rule 83 (expression -> condition .)
    LE              reduce using rule 83 (expression -> condition .)
    NE              reduce using rule 83 (expression -> condition .)
    EQ              reduce using rule 83 (expression -> condition .)
    LAND            reduce using rule 83 (expression -> condition .)
    LOR             reduce using rule 83 (expression -> condition .)
    COMMENT         reduce using rule 83 (expression -> condition .)
    NEWLINE         reduce using rule 83 (expression -> condition .)
    FUNCTION        reduce using rule 83 (expression -> condition .)
    ID              reduce using rule 83 (expression -> condition .)
    NULL            reduce using rule 83 (expression -> condition .)
    SCAN            reduce using rule 83 (expression -> condition .)
    PRINT           reduce using rule 83 (expression -> condition .)
    FOR             reduce using rule 83 (expression -> condition .)
    WHILE           reduce using rule 83 (expression -> condition .)
    RETURN          reduce using rule 83 (expression -> condition .)
    BREAK           reduce using rule 83 (expression -> condition .)
    CONTINUE        reduce using rule 83 (expression -> condition .)
    IMPORT          reduce using rule 83 (expression -> condition .)
    LNOT            reduce using rule 83 (expression -> condition .)
    BOOLEAN         reduce using rule 83 (expression -> condition .)
    LPAREN          reduce using rule 83 (expression -> condition .)
    IF              reduce using rule 83 (expression -> condition .)
    NUMBER          reduce using rule 83 (expression -> condition .)
    STRING          reduce using rule 83 (expression -> condition .)
    $end            reduce using rule 83 (expression -> condition .)
    SEMI            reduce using rule 83 (expression -> condition .)
    RBRACE          reduce using rule 83 (expression -> condition .)
    RPAREN          reduce using rule 83 (expression -> condition .)
    RBRACKET        reduce using rule 83 (expression -> condition .)
    COMMA           reduce using rule 83 (expression -> condition .)


state 27

    (84) expression -> ternary_condition .

    SUM             reduce using rule 84 (expression -> ternary_condition .)
    SUB             reduce using rule 84 (expression -> ternary_condition .)
    DECR            reduce using rule 84 (expression -> ternary_condition .)
    INCR            reduce using rule 84 (expression -> ternary_condition .)
    GT              reduce using rule 84 (expression -> ternary_condition .)
    LT              reduce using rule 84 (expression -> ternary_condition .)
    GE              reduce using rule 84 (expression -> ternary_condition .)
    LE              reduce using rule 84 (expression -> ternary_condition .)
    NE              reduce using rule 84 (expression -> ternary_condition .)
    EQ              reduce using rule 84 (expression -> ternary_condition .)
    LAND            reduce using rule 84 (expression -> ternary_condition .)
    LOR             reduce using rule 84 (expression -> ternary_condition .)
    COMMENT         reduce using rule 84 (expression -> ternary_condition .)
    NEWLINE         reduce using rule 84 (expression -> ternary_condition .)
    FUNCTION        reduce using rule 84 (expression -> ternary_condition .)
    ID              reduce using rule 84 (expression -> ternary_condition .)
    NULL            reduce using rule 84 (expression -> ternary_condition .)
    SCAN            reduce using rule 84 (expression -> ternary_condition .)
    PRINT           reduce using rule 84 (expression -> ternary_condition .)
    FOR             reduce using rule 84 (expression -> ternary_condition .)
    WHILE           reduce using rule 84 (expression -> ternary_condition .)
    RETURN          reduce using rule 84 (expression -> ternary_condition .)
    BREAK           reduce using rule 84 (expression -> ternary_condition .)
    CONTINUE        reduce using rule 84 (expression -> ternary_condition .)
    IMPORT          reduce using rule 84 (expression -> ternary_condition .)
    LNOT            reduce using rule 84 (expression -> ternary_condition .)
    BOOLEAN         reduce using rule 84 (expression -> ternary_condition .)
    LPAREN          reduce using rule 84 (expression -> ternary_condition .)
    IF              reduce using rule 84 (expression -> ternary_condition .)
    NUMBER          reduce using rule 84 (expression -> ternary_condition .)
    STRING          reduce using rule 84 (expression -> ternary_condition .)
    $end            reduce using rule 84 (expression -> ternary_condition .)
    RPAREN          reduce using rule 84 (expression -> ternary_condition .)
    SEMI            reduce using rule 84 (expression -> ternary_condition .)
    RBRACE          reduce using rule 84 (expression -> ternary_condition .)
    RBRACKET        reduce using rule 84 (expression -> ternary_condition .)
    COMMA           reduce using rule 84 (expression -> ternary_condition .)


state 28

    (86) expression -> NULL .

    SUM             reduce using rule 86 (expression -> NULL .)
    SUB             reduce using rule 86 (expression -> NULL .)
    DECR            reduce using rule 86 (expression -> NULL .)
    INCR            reduce using rule 86 (expression -> NULL .)
    GT              reduce using rule 86 (expression -> NULL .)
    LT              reduce using rule 86 (expression -> NULL .)
    GE              reduce using rule 86 (expression -> NULL .)
    LE              reduce using rule 86 (expression -> NULL .)
    NE              reduce using rule 86 (expression -> NULL .)
    EQ              reduce using rule 86 (expression -> NULL .)
    LAND            reduce using rule 86 (expression -> NULL .)
    LOR             reduce using rule 86 (expression -> NULL .)
    COMMENT         reduce using rule 86 (expression -> NULL .)
    NEWLINE         reduce using rule 86 (expression -> NULL .)
    FUNCTION        reduce using rule 86 (expression -> NULL .)
    ID              reduce using rule 86 (expression -> NULL .)
    NULL            reduce using rule 86 (expression -> NULL .)
    SCAN            reduce using rule 86 (expression -> NULL .)
    PRINT           reduce using rule 86 (expression -> NULL .)
    FOR             reduce using rule 86 (expression -> NULL .)
    WHILE           reduce using rule 86 (expression -> NULL .)
    RETURN          reduce using rule 86 (expression -> NULL .)
    BREAK           reduce using rule 86 (expression -> NULL .)
    CONTINUE        reduce using rule 86 (expression -> NULL .)
    IMPORT          reduce using rule 86 (expression -> NULL .)
    LNOT            reduce using rule 86 (expression -> NULL .)
    BOOLEAN         reduce using rule 86 (expression -> NULL .)
    LPAREN          reduce using rule 86 (expression -> NULL .)
    IF              reduce using rule 86 (expression -> NULL .)
    NUMBER          reduce using rule 86 (expression -> NULL .)
    STRING          reduce using rule 86 (expression -> NULL .)
    $end            reduce using rule 86 (expression -> NULL .)
    RPAREN          reduce using rule 86 (expression -> NULL .)
    SEMI            reduce using rule 86 (expression -> NULL .)
    RBRACE          reduce using rule 86 (expression -> NULL .)
    RBRACKET        reduce using rule 86 (expression -> NULL .)
    COMMA           reduce using rule 86 (expression -> NULL .)


state 29

    (27) input -> SCAN . LPAREN ID RPAREN

    LPAREN          shift and go to state 76


state 30

    (28) output -> PRINT . LPAREN plist RPAREN

    LPAREN          shift and go to state 77


state 31

    (63) for_loop -> FOR . LPAREN assignment SEMI condition SEMI expression RPAREN bloc

    LPAREN          shift and go to state 78


state 32

    (64) while_loop -> WHILE . LPAREN condition RPAREN bloc

    LPAREN          shift and go to state 79


state 33

    (61) return -> RETURN . expression
    (62) return -> RETURN . expression SEMI
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 80
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 34

    (67) break -> BREAK .
    (68) break -> BREAK . SEMI

    COMMENT         reduce using rule 67 (break -> BREAK .)
    NEWLINE         reduce using rule 67 (break -> BREAK .)
    FUNCTION        reduce using rule 67 (break -> BREAK .)
    ID              reduce using rule 67 (break -> BREAK .)
    NULL            reduce using rule 67 (break -> BREAK .)
    SCAN            reduce using rule 67 (break -> BREAK .)
    PRINT           reduce using rule 67 (break -> BREAK .)
    FOR             reduce using rule 67 (break -> BREAK .)
    WHILE           reduce using rule 67 (break -> BREAK .)
    RETURN          reduce using rule 67 (break -> BREAK .)
    BREAK           reduce using rule 67 (break -> BREAK .)
    CONTINUE        reduce using rule 67 (break -> BREAK .)
    IMPORT          reduce using rule 67 (break -> BREAK .)
    LNOT            reduce using rule 67 (break -> BREAK .)
    BOOLEAN         reduce using rule 67 (break -> BREAK .)
    LPAREN          reduce using rule 67 (break -> BREAK .)
    IF              reduce using rule 67 (break -> BREAK .)
    NUMBER          reduce using rule 67 (break -> BREAK .)
    STRING          reduce using rule 67 (break -> BREAK .)
    $end            reduce using rule 67 (break -> BREAK .)
    RBRACE          reduce using rule 67 (break -> BREAK .)
    SEMI            shift and go to state 81


state 35

    (65) continue -> CONTINUE .
    (66) continue -> CONTINUE . SEMI

    COMMENT         reduce using rule 65 (continue -> CONTINUE .)
    NEWLINE         reduce using rule 65 (continue -> CONTINUE .)
    FUNCTION        reduce using rule 65 (continue -> CONTINUE .)
    ID              reduce using rule 65 (continue -> CONTINUE .)
    NULL            reduce using rule 65 (continue -> CONTINUE .)
    SCAN            reduce using rule 65 (continue -> CONTINUE .)
    PRINT           reduce using rule 65 (continue -> CONTINUE .)
    FOR             reduce using rule 65 (continue -> CONTINUE .)
    WHILE           reduce using rule 65 (continue -> CONTINUE .)
    RETURN          reduce using rule 65 (continue -> CONTINUE .)
    BREAK           reduce using rule 65 (continue -> CONTINUE .)
    CONTINUE        reduce using rule 65 (continue -> CONTINUE .)
    IMPORT          reduce using rule 65 (continue -> CONTINUE .)
    LNOT            reduce using rule 65 (continue -> CONTINUE .)
    BOOLEAN         reduce using rule 65 (continue -> CONTINUE .)
    LPAREN          reduce using rule 65 (continue -> CONTINUE .)
    IF              reduce using rule 65 (continue -> CONTINUE .)
    NUMBER          reduce using rule 65 (continue -> CONTINUE .)
    STRING          reduce using rule 65 (continue -> CONTINUE .)
    $end            reduce using rule 65 (continue -> CONTINUE .)
    RBRACE          reduce using rule 65 (continue -> CONTINUE .)
    SEMI            shift and go to state 82


state 36

    (22) import -> IMPORT . files
    (23) files -> . files COMMA FILENAME
    (24) files -> . FILENAME

    FILENAME        shift and go to state 84

    files                          shift and go to state 83

state 37

    (45) if_elif_bloc -> if_bloc .

    ELSE            reduce using rule 45 (if_elif_bloc -> if_bloc .)
    COMMENT         reduce using rule 45 (if_elif_bloc -> if_bloc .)
    NEWLINE         reduce using rule 45 (if_elif_bloc -> if_bloc .)
    FUNCTION        reduce using rule 45 (if_elif_bloc -> if_bloc .)
    ID              reduce using rule 45 (if_elif_bloc -> if_bloc .)
    NULL            reduce using rule 45 (if_elif_bloc -> if_bloc .)
    SCAN            reduce using rule 45 (if_elif_bloc -> if_bloc .)
    PRINT           reduce using rule 45 (if_elif_bloc -> if_bloc .)
    FOR             reduce using rule 45 (if_elif_bloc -> if_bloc .)
    WHILE           reduce using rule 45 (if_elif_bloc -> if_bloc .)
    RETURN          reduce using rule 45 (if_elif_bloc -> if_bloc .)
    BREAK           reduce using rule 45 (if_elif_bloc -> if_bloc .)
    CONTINUE        reduce using rule 45 (if_elif_bloc -> if_bloc .)
    IMPORT          reduce using rule 45 (if_elif_bloc -> if_bloc .)
    LNOT            reduce using rule 45 (if_elif_bloc -> if_bloc .)
    BOOLEAN         reduce using rule 45 (if_elif_bloc -> if_bloc .)
    LPAREN          reduce using rule 45 (if_elif_bloc -> if_bloc .)
    IF              reduce using rule 45 (if_elif_bloc -> if_bloc .)
    NUMBER          reduce using rule 45 (if_elif_bloc -> if_bloc .)
    STRING          reduce using rule 45 (if_elif_bloc -> if_bloc .)
    $end            reduce using rule 45 (if_elif_bloc -> if_bloc .)
    RBRACE          reduce using rule 45 (if_elif_bloc -> if_bloc .)


state 38

    (40) condition -> LNOT . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 85
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 39

    (41) condition -> BOOLEAN .

    SUM             reduce using rule 41 (condition -> BOOLEAN .)
    SUB             reduce using rule 41 (condition -> BOOLEAN .)
    DECR            reduce using rule 41 (condition -> BOOLEAN .)
    INCR            reduce using rule 41 (condition -> BOOLEAN .)
    GT              reduce using rule 41 (condition -> BOOLEAN .)
    LT              reduce using rule 41 (condition -> BOOLEAN .)
    GE              reduce using rule 41 (condition -> BOOLEAN .)
    LE              reduce using rule 41 (condition -> BOOLEAN .)
    NE              reduce using rule 41 (condition -> BOOLEAN .)
    EQ              reduce using rule 41 (condition -> BOOLEAN .)
    LAND            reduce using rule 41 (condition -> BOOLEAN .)
    LOR             reduce using rule 41 (condition -> BOOLEAN .)
    COMMENT         reduce using rule 41 (condition -> BOOLEAN .)
    NEWLINE         reduce using rule 41 (condition -> BOOLEAN .)
    FUNCTION        reduce using rule 41 (condition -> BOOLEAN .)
    ID              reduce using rule 41 (condition -> BOOLEAN .)
    NULL            reduce using rule 41 (condition -> BOOLEAN .)
    SCAN            reduce using rule 41 (condition -> BOOLEAN .)
    PRINT           reduce using rule 41 (condition -> BOOLEAN .)
    FOR             reduce using rule 41 (condition -> BOOLEAN .)
    WHILE           reduce using rule 41 (condition -> BOOLEAN .)
    RETURN          reduce using rule 41 (condition -> BOOLEAN .)
    BREAK           reduce using rule 41 (condition -> BOOLEAN .)
    CONTINUE        reduce using rule 41 (condition -> BOOLEAN .)
    IMPORT          reduce using rule 41 (condition -> BOOLEAN .)
    LNOT            reduce using rule 41 (condition -> BOOLEAN .)
    BOOLEAN         reduce using rule 41 (condition -> BOOLEAN .)
    LPAREN          reduce using rule 41 (condition -> BOOLEAN .)
    IF              reduce using rule 41 (condition -> BOOLEAN .)
    NUMBER          reduce using rule 41 (condition -> BOOLEAN .)
    STRING          reduce using rule 41 (condition -> BOOLEAN .)
    $end            reduce using rule 41 (condition -> BOOLEAN .)
    RPAREN          reduce using rule 41 (condition -> BOOLEAN .)
    SEMI            reduce using rule 41 (condition -> BOOLEAN .)
    RBRACE          reduce using rule 41 (condition -> BOOLEAN .)
    RBRACKET        reduce using rule 41 (condition -> BOOLEAN .)
    COMMA           reduce using rule 41 (condition -> BOOLEAN .)


state 40

    (87) term -> factor .

    MUL             reduce using rule 87 (term -> factor .)
    DIV             reduce using rule 87 (term -> factor .)
    IDIV            reduce using rule 87 (term -> factor .)
    MOD             reduce using rule 87 (term -> factor .)
    SUM             reduce using rule 87 (term -> factor .)
    SUB             reduce using rule 87 (term -> factor .)
    DECR            reduce using rule 87 (term -> factor .)
    INCR            reduce using rule 87 (term -> factor .)
    GT              reduce using rule 87 (term -> factor .)
    LT              reduce using rule 87 (term -> factor .)
    GE              reduce using rule 87 (term -> factor .)
    LE              reduce using rule 87 (term -> factor .)
    NE              reduce using rule 87 (term -> factor .)
    EQ              reduce using rule 87 (term -> factor .)
    LAND            reduce using rule 87 (term -> factor .)
    LOR             reduce using rule 87 (term -> factor .)
    COMMENT         reduce using rule 87 (term -> factor .)
    NEWLINE         reduce using rule 87 (term -> factor .)
    FUNCTION        reduce using rule 87 (term -> factor .)
    ID              reduce using rule 87 (term -> factor .)
    NULL            reduce using rule 87 (term -> factor .)
    SCAN            reduce using rule 87 (term -> factor .)
    PRINT           reduce using rule 87 (term -> factor .)
    FOR             reduce using rule 87 (term -> factor .)
    WHILE           reduce using rule 87 (term -> factor .)
    RETURN          reduce using rule 87 (term -> factor .)
    BREAK           reduce using rule 87 (term -> factor .)
    CONTINUE        reduce using rule 87 (term -> factor .)
    IMPORT          reduce using rule 87 (term -> factor .)
    LNOT            reduce using rule 87 (term -> factor .)
    BOOLEAN         reduce using rule 87 (term -> factor .)
    LPAREN          reduce using rule 87 (term -> factor .)
    IF              reduce using rule 87 (term -> factor .)
    NUMBER          reduce using rule 87 (term -> factor .)
    STRING          reduce using rule 87 (term -> factor .)
    $end            reduce using rule 87 (term -> factor .)
    RPAREN          reduce using rule 87 (term -> factor .)
    SEMI            reduce using rule 87 (term -> factor .)
    RBRACE          reduce using rule 87 (term -> factor .)
    RBRACKET        reduce using rule 87 (term -> factor .)
    COMMA           reduce using rule 87 (term -> factor .)


state 41

    (43) if_bloc -> IF . LPAREN condition RPAREN bloc

    LPAREN          shift and go to state 86


state 42

    (88) factor -> NUMBER .

    MUL             reduce using rule 88 (factor -> NUMBER .)
    DIV             reduce using rule 88 (factor -> NUMBER .)
    IDIV            reduce using rule 88 (factor -> NUMBER .)
    MOD             reduce using rule 88 (factor -> NUMBER .)
    SUM             reduce using rule 88 (factor -> NUMBER .)
    SUB             reduce using rule 88 (factor -> NUMBER .)
    DECR            reduce using rule 88 (factor -> NUMBER .)
    INCR            reduce using rule 88 (factor -> NUMBER .)
    GT              reduce using rule 88 (factor -> NUMBER .)
    LT              reduce using rule 88 (factor -> NUMBER .)
    GE              reduce using rule 88 (factor -> NUMBER .)
    LE              reduce using rule 88 (factor -> NUMBER .)
    NE              reduce using rule 88 (factor -> NUMBER .)
    EQ              reduce using rule 88 (factor -> NUMBER .)
    LAND            reduce using rule 88 (factor -> NUMBER .)
    LOR             reduce using rule 88 (factor -> NUMBER .)
    COMMENT         reduce using rule 88 (factor -> NUMBER .)
    NEWLINE         reduce using rule 88 (factor -> NUMBER .)
    FUNCTION        reduce using rule 88 (factor -> NUMBER .)
    ID              reduce using rule 88 (factor -> NUMBER .)
    NULL            reduce using rule 88 (factor -> NUMBER .)
    SCAN            reduce using rule 88 (factor -> NUMBER .)
    PRINT           reduce using rule 88 (factor -> NUMBER .)
    FOR             reduce using rule 88 (factor -> NUMBER .)
    WHILE           reduce using rule 88 (factor -> NUMBER .)
    RETURN          reduce using rule 88 (factor -> NUMBER .)
    BREAK           reduce using rule 88 (factor -> NUMBER .)
    CONTINUE        reduce using rule 88 (factor -> NUMBER .)
    IMPORT          reduce using rule 88 (factor -> NUMBER .)
    LNOT            reduce using rule 88 (factor -> NUMBER .)
    BOOLEAN         reduce using rule 88 (factor -> NUMBER .)
    LPAREN          reduce using rule 88 (factor -> NUMBER .)
    IF              reduce using rule 88 (factor -> NUMBER .)
    NUMBER          reduce using rule 88 (factor -> NUMBER .)
    STRING          reduce using rule 88 (factor -> NUMBER .)
    $end            reduce using rule 88 (factor -> NUMBER .)
    RPAREN          reduce using rule 88 (factor -> NUMBER .)
    SEMI            reduce using rule 88 (factor -> NUMBER .)
    RBRACE          reduce using rule 88 (factor -> NUMBER .)
    RBRACKET        reduce using rule 88 (factor -> NUMBER .)
    COMMA           reduce using rule 88 (factor -> NUMBER .)


state 43

    (90) factor -> STRING .

    MUL             reduce using rule 90 (factor -> STRING .)
    DIV             reduce using rule 90 (factor -> STRING .)
    IDIV            reduce using rule 90 (factor -> STRING .)
    MOD             reduce using rule 90 (factor -> STRING .)
    SUM             reduce using rule 90 (factor -> STRING .)
    SUB             reduce using rule 90 (factor -> STRING .)
    DECR            reduce using rule 90 (factor -> STRING .)
    INCR            reduce using rule 90 (factor -> STRING .)
    GT              reduce using rule 90 (factor -> STRING .)
    LT              reduce using rule 90 (factor -> STRING .)
    GE              reduce using rule 90 (factor -> STRING .)
    LE              reduce using rule 90 (factor -> STRING .)
    NE              reduce using rule 90 (factor -> STRING .)
    EQ              reduce using rule 90 (factor -> STRING .)
    LAND            reduce using rule 90 (factor -> STRING .)
    LOR             reduce using rule 90 (factor -> STRING .)
    COMMENT         reduce using rule 90 (factor -> STRING .)
    NEWLINE         reduce using rule 90 (factor -> STRING .)
    FUNCTION        reduce using rule 90 (factor -> STRING .)
    ID              reduce using rule 90 (factor -> STRING .)
    NULL            reduce using rule 90 (factor -> STRING .)
    SCAN            reduce using rule 90 (factor -> STRING .)
    PRINT           reduce using rule 90 (factor -> STRING .)
    FOR             reduce using rule 90 (factor -> STRING .)
    WHILE           reduce using rule 90 (factor -> STRING .)
    RETURN          reduce using rule 90 (factor -> STRING .)
    BREAK           reduce using rule 90 (factor -> STRING .)
    CONTINUE        reduce using rule 90 (factor -> STRING .)
    IMPORT          reduce using rule 90 (factor -> STRING .)
    LNOT            reduce using rule 90 (factor -> STRING .)
    BOOLEAN         reduce using rule 90 (factor -> STRING .)
    LPAREN          reduce using rule 90 (factor -> STRING .)
    IF              reduce using rule 90 (factor -> STRING .)
    NUMBER          reduce using rule 90 (factor -> STRING .)
    STRING          reduce using rule 90 (factor -> STRING .)
    $end            reduce using rule 90 (factor -> STRING .)
    RPAREN          reduce using rule 90 (factor -> STRING .)
    SEMI            reduce using rule 90 (factor -> STRING .)
    RBRACE          reduce using rule 90 (factor -> STRING .)
    RBRACKET        reduce using rule 90 (factor -> STRING .)
    COMMA           reduce using rule 90 (factor -> STRING .)


state 44

    (1) program -> program statement .
    (4) statement -> statement . command
    (6) command -> . function_def
    (7) command -> . function_call
    (8) command -> . conditional
    (9) command -> . expression
    (10) command -> . assignment
    (11) command -> . expression_ass
    (12) command -> . input
    (13) command -> . output
    (14) command -> . for_loop
    (15) command -> . while_loop
    (16) command -> . return
    (17) command -> . break
    (18) command -> . continue
    (19) command -> . COMMENT
    (20) command -> . NEWLINE
    (21) command -> . import
    (51) function_def -> . FUNCTION ID LPAREN param_list RPAREN bloc
    (52) function_def -> . FUNCTION ID LPAREN RPAREN bloc
    (53) function_call -> . ID LPAREN param_list_call RPAREN
    (54) function_call -> . ID LPAREN RPAREN
    (46) conditional -> . if_elif_bloc ELSE bloc
    (47) conditional -> . if_elif_bloc
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (25) assignment -> . ID ASSIGN expression
    (26) assignment -> . ID ASSIGN LBRACKET list RBRACKET
    (77) expression_ass -> . ID SUM_ASS expression
    (78) expression_ass -> . ID SUB_ASS expression
    (79) expression_ass -> . ID MUL_ASS expression
    (80) expression_ass -> . ID DIV_ASS expression
    (81) expression_ass -> . ID IDIV_ASS expression
    (82) expression_ass -> . ID MOD_ASS expression
    (27) input -> . SCAN LPAREN ID RPAREN
    (28) output -> . PRINT LPAREN plist RPAREN
    (63) for_loop -> . FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc
    (64) while_loop -> . WHILE LPAREN condition RPAREN bloc
    (61) return -> . RETURN expression
    (62) return -> . RETURN expression SEMI
    (67) break -> . BREAK
    (68) break -> . BREAK SEMI
    (65) continue -> . CONTINUE
    (66) continue -> . CONTINUE SEMI
    (22) import -> . IMPORT files
    (44) if_elif_bloc -> . if_elif_bloc ELSE if_bloc
    (45) if_elif_bloc -> . if_bloc
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (43) if_bloc -> . IF LPAREN condition RPAREN bloc
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for SCAN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for LNOT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 1 (program -> program statement .)
    COMMENT         shift and go to state 18
    NEWLINE         shift and go to state 19
    FUNCTION        shift and go to state 21
    ID              shift and go to state 22
    NULL            shift and go to state 28
    SCAN            shift and go to state 29
    PRINT           shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    RETURN          shift and go to state 33
    BREAK           shift and go to state 34
    CONTINUE        shift and go to state 35
    IMPORT          shift and go to state 36
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    IF              shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43

  ! COMMENT         [ reduce using rule 1 (program -> program statement .) ]
  ! NEWLINE         [ reduce using rule 1 (program -> program statement .) ]
  ! FUNCTION        [ reduce using rule 1 (program -> program statement .) ]
  ! ID              [ reduce using rule 1 (program -> program statement .) ]
  ! NULL            [ reduce using rule 1 (program -> program statement .) ]
  ! SCAN            [ reduce using rule 1 (program -> program statement .) ]
  ! PRINT           [ reduce using rule 1 (program -> program statement .) ]
  ! FOR             [ reduce using rule 1 (program -> program statement .) ]
  ! WHILE           [ reduce using rule 1 (program -> program statement .) ]
  ! RETURN          [ reduce using rule 1 (program -> program statement .) ]
  ! BREAK           [ reduce using rule 1 (program -> program statement .) ]
  ! CONTINUE        [ reduce using rule 1 (program -> program statement .) ]
  ! IMPORT          [ reduce using rule 1 (program -> program statement .) ]
  ! LNOT            [ reduce using rule 1 (program -> program statement .) ]
  ! BOOLEAN         [ reduce using rule 1 (program -> program statement .) ]
  ! LPAREN          [ reduce using rule 1 (program -> program statement .) ]
  ! IF              [ reduce using rule 1 (program -> program statement .) ]
  ! NUMBER          [ reduce using rule 1 (program -> program statement .) ]
  ! STRING          [ reduce using rule 1 (program -> program statement .) ]

    command                        shift and go to state 45
    function_def                   shift and go to state 5
    function_call                  shift and go to state 6
    conditional                    shift and go to state 7
    expression                     shift and go to state 8
    assignment                     shift and go to state 9
    expression_ass                 shift and go to state 10
    input                          shift and go to state 11
    output                         shift and go to state 12
    for_loop                       shift and go to state 13
    while_loop                     shift and go to state 14
    return                         shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    import                         shift and go to state 20
    if_elif_bloc                   shift and go to state 24
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    if_bloc                        shift and go to state 37
    factor                         shift and go to state 40

state 45

    (4) statement -> statement command .

    COMMENT         reduce using rule 4 (statement -> statement command .)
    NEWLINE         reduce using rule 4 (statement -> statement command .)
    FUNCTION        reduce using rule 4 (statement -> statement command .)
    ID              reduce using rule 4 (statement -> statement command .)
    NULL            reduce using rule 4 (statement -> statement command .)
    SCAN            reduce using rule 4 (statement -> statement command .)
    PRINT           reduce using rule 4 (statement -> statement command .)
    FOR             reduce using rule 4 (statement -> statement command .)
    WHILE           reduce using rule 4 (statement -> statement command .)
    RETURN          reduce using rule 4 (statement -> statement command .)
    BREAK           reduce using rule 4 (statement -> statement command .)
    CONTINUE        reduce using rule 4 (statement -> statement command .)
    IMPORT          reduce using rule 4 (statement -> statement command .)
    LNOT            reduce using rule 4 (statement -> statement command .)
    BOOLEAN         reduce using rule 4 (statement -> statement command .)
    LPAREN          reduce using rule 4 (statement -> statement command .)
    IF              reduce using rule 4 (statement -> statement command .)
    NUMBER          reduce using rule 4 (statement -> statement command .)
    STRING          reduce using rule 4 (statement -> statement command .)
    $end            reduce using rule 4 (statement -> statement command .)


state 46

    (69) expression -> expression SUM . term
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43
    LPAREN          shift and go to state 88

    term                           shift and go to state 87
    factor                         shift and go to state 40

state 47

    (70) expression -> expression SUB . term
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43
    LPAREN          shift and go to state 88

    term                           shift and go to state 89
    factor                         shift and go to state 40

state 48

    (75) expression -> expression DECR .

    SUM             reduce using rule 75 (expression -> expression DECR .)
    SUB             reduce using rule 75 (expression -> expression DECR .)
    DECR            reduce using rule 75 (expression -> expression DECR .)
    INCR            reduce using rule 75 (expression -> expression DECR .)
    GT              reduce using rule 75 (expression -> expression DECR .)
    LT              reduce using rule 75 (expression -> expression DECR .)
    GE              reduce using rule 75 (expression -> expression DECR .)
    LE              reduce using rule 75 (expression -> expression DECR .)
    NE              reduce using rule 75 (expression -> expression DECR .)
    EQ              reduce using rule 75 (expression -> expression DECR .)
    LAND            reduce using rule 75 (expression -> expression DECR .)
    LOR             reduce using rule 75 (expression -> expression DECR .)
    COMMENT         reduce using rule 75 (expression -> expression DECR .)
    NEWLINE         reduce using rule 75 (expression -> expression DECR .)
    FUNCTION        reduce using rule 75 (expression -> expression DECR .)
    ID              reduce using rule 75 (expression -> expression DECR .)
    NULL            reduce using rule 75 (expression -> expression DECR .)
    SCAN            reduce using rule 75 (expression -> expression DECR .)
    PRINT           reduce using rule 75 (expression -> expression DECR .)
    FOR             reduce using rule 75 (expression -> expression DECR .)
    WHILE           reduce using rule 75 (expression -> expression DECR .)
    RETURN          reduce using rule 75 (expression -> expression DECR .)
    BREAK           reduce using rule 75 (expression -> expression DECR .)
    CONTINUE        reduce using rule 75 (expression -> expression DECR .)
    IMPORT          reduce using rule 75 (expression -> expression DECR .)
    LNOT            reduce using rule 75 (expression -> expression DECR .)
    BOOLEAN         reduce using rule 75 (expression -> expression DECR .)
    LPAREN          reduce using rule 75 (expression -> expression DECR .)
    IF              reduce using rule 75 (expression -> expression DECR .)
    NUMBER          reduce using rule 75 (expression -> expression DECR .)
    STRING          reduce using rule 75 (expression -> expression DECR .)
    $end            reduce using rule 75 (expression -> expression DECR .)
    RPAREN          reduce using rule 75 (expression -> expression DECR .)
    SEMI            reduce using rule 75 (expression -> expression DECR .)
    RBRACE          reduce using rule 75 (expression -> expression DECR .)
    RBRACKET        reduce using rule 75 (expression -> expression DECR .)
    COMMA           reduce using rule 75 (expression -> expression DECR .)


state 49

    (76) expression -> expression INCR .

    SUM             reduce using rule 76 (expression -> expression INCR .)
    SUB             reduce using rule 76 (expression -> expression INCR .)
    DECR            reduce using rule 76 (expression -> expression INCR .)
    INCR            reduce using rule 76 (expression -> expression INCR .)
    GT              reduce using rule 76 (expression -> expression INCR .)
    LT              reduce using rule 76 (expression -> expression INCR .)
    GE              reduce using rule 76 (expression -> expression INCR .)
    LE              reduce using rule 76 (expression -> expression INCR .)
    NE              reduce using rule 76 (expression -> expression INCR .)
    EQ              reduce using rule 76 (expression -> expression INCR .)
    LAND            reduce using rule 76 (expression -> expression INCR .)
    LOR             reduce using rule 76 (expression -> expression INCR .)
    COMMENT         reduce using rule 76 (expression -> expression INCR .)
    NEWLINE         reduce using rule 76 (expression -> expression INCR .)
    FUNCTION        reduce using rule 76 (expression -> expression INCR .)
    ID              reduce using rule 76 (expression -> expression INCR .)
    NULL            reduce using rule 76 (expression -> expression INCR .)
    SCAN            reduce using rule 76 (expression -> expression INCR .)
    PRINT           reduce using rule 76 (expression -> expression INCR .)
    FOR             reduce using rule 76 (expression -> expression INCR .)
    WHILE           reduce using rule 76 (expression -> expression INCR .)
    RETURN          reduce using rule 76 (expression -> expression INCR .)
    BREAK           reduce using rule 76 (expression -> expression INCR .)
    CONTINUE        reduce using rule 76 (expression -> expression INCR .)
    IMPORT          reduce using rule 76 (expression -> expression INCR .)
    LNOT            reduce using rule 76 (expression -> expression INCR .)
    BOOLEAN         reduce using rule 76 (expression -> expression INCR .)
    LPAREN          reduce using rule 76 (expression -> expression INCR .)
    IF              reduce using rule 76 (expression -> expression INCR .)
    NUMBER          reduce using rule 76 (expression -> expression INCR .)
    STRING          reduce using rule 76 (expression -> expression INCR .)
    $end            reduce using rule 76 (expression -> expression INCR .)
    RPAREN          reduce using rule 76 (expression -> expression INCR .)
    SEMI            reduce using rule 76 (expression -> expression INCR .)
    RBRACE          reduce using rule 76 (expression -> expression INCR .)
    RBRACKET        reduce using rule 76 (expression -> expression INCR .)
    COMMA           reduce using rule 76 (expression -> expression INCR .)


state 50

    (32) condition -> expression GT . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 90
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 51

    (33) condition -> expression LT . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 91
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 52

    (34) condition -> expression GE . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 92
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 53

    (35) condition -> expression LE . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 93
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 54

    (36) condition -> expression NE . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 94
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 55

    (37) condition -> expression EQ . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 95
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 56

    (38) condition -> expression LAND . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 96
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 57

    (39) condition -> expression LOR . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 97
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 58

    (51) function_def -> FUNCTION ID . LPAREN param_list RPAREN bloc
    (52) function_def -> FUNCTION ID . LPAREN RPAREN bloc

    LPAREN          shift and go to state 98


state 59

    (53) function_call -> ID LPAREN . param_list_call RPAREN
    (54) function_call -> ID LPAREN . RPAREN
    (55) param_list_call -> . param_list_call COMMA param_call
    (56) param_list_call -> . param_call
    (57) param_call -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    RPAREN          shift and go to state 100
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43
    LPAREN          shift and go to state 88

    param_list_call                shift and go to state 99
    param_call                     shift and go to state 101
    factor                         shift and go to state 102

state 60

    (25) assignment -> ID ASSIGN . expression
    (26) assignment -> ID ASSIGN . LBRACKET list RBRACKET
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    LBRACKET        shift and go to state 104
    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 103
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 61

    (91) factor -> ID LBRACKET . expression RBRACKET
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 105
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 62

    (77) expression_ass -> ID SUM_ASS . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 106
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 63

    (78) expression_ass -> ID SUB_ASS . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 107
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 64

    (79) expression_ass -> ID MUL_ASS . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 108
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 65

    (80) expression_ass -> ID DIV_ASS . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 109
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 66

    (81) expression_ass -> ID IDIV_ASS . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 110
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 67

    (82) expression_ass -> ID MOD_ASS . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 111
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 68

    (42) ternary_condition -> LPAREN condition . RPAREN QUES bloc COLON bloc
    (83) expression -> condition .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 112
    GT              reduce using rule 83 (expression -> condition .)
    LT              reduce using rule 83 (expression -> condition .)
    GE              reduce using rule 83 (expression -> condition .)
    LE              reduce using rule 83 (expression -> condition .)
    NE              reduce using rule 83 (expression -> condition .)
    EQ              reduce using rule 83 (expression -> condition .)
    LAND            reduce using rule 83 (expression -> condition .)
    LOR             reduce using rule 83 (expression -> condition .)
    SUM             reduce using rule 83 (expression -> condition .)
    SUB             reduce using rule 83 (expression -> condition .)
    DECR            reduce using rule 83 (expression -> condition .)
    INCR            reduce using rule 83 (expression -> condition .)

  ! RPAREN          [ reduce using rule 83 (expression -> condition .) ]


state 69

    (92) factor -> LPAREN expression . RPAREN
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR

    RPAREN          shift and go to state 113
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49


state 70

    (89) factor -> ID .
    (91) factor -> ID . LBRACKET expression RBRACKET

    MUL             reduce using rule 89 (factor -> ID .)
    DIV             reduce using rule 89 (factor -> ID .)
    IDIV            reduce using rule 89 (factor -> ID .)
    MOD             reduce using rule 89 (factor -> ID .)
    RPAREN          reduce using rule 89 (factor -> ID .)
    GT              reduce using rule 89 (factor -> ID .)
    LT              reduce using rule 89 (factor -> ID .)
    GE              reduce using rule 89 (factor -> ID .)
    LE              reduce using rule 89 (factor -> ID .)
    NE              reduce using rule 89 (factor -> ID .)
    EQ              reduce using rule 89 (factor -> ID .)
    LAND            reduce using rule 89 (factor -> ID .)
    LOR             reduce using rule 89 (factor -> ID .)
    SUM             reduce using rule 89 (factor -> ID .)
    SUB             reduce using rule 89 (factor -> ID .)
    DECR            reduce using rule 89 (factor -> ID .)
    INCR            reduce using rule 89 (factor -> ID .)
    SEMI            reduce using rule 89 (factor -> ID .)
    COMMENT         reduce using rule 89 (factor -> ID .)
    NEWLINE         reduce using rule 89 (factor -> ID .)
    FUNCTION        reduce using rule 89 (factor -> ID .)
    ID              reduce using rule 89 (factor -> ID .)
    NULL            reduce using rule 89 (factor -> ID .)
    SCAN            reduce using rule 89 (factor -> ID .)
    PRINT           reduce using rule 89 (factor -> ID .)
    FOR             reduce using rule 89 (factor -> ID .)
    WHILE           reduce using rule 89 (factor -> ID .)
    RETURN          reduce using rule 89 (factor -> ID .)
    BREAK           reduce using rule 89 (factor -> ID .)
    CONTINUE        reduce using rule 89 (factor -> ID .)
    IMPORT          reduce using rule 89 (factor -> ID .)
    LNOT            reduce using rule 89 (factor -> ID .)
    BOOLEAN         reduce using rule 89 (factor -> ID .)
    LPAREN          reduce using rule 89 (factor -> ID .)
    IF              reduce using rule 89 (factor -> ID .)
    NUMBER          reduce using rule 89 (factor -> ID .)
    STRING          reduce using rule 89 (factor -> ID .)
    $end            reduce using rule 89 (factor -> ID .)
    RBRACE          reduce using rule 89 (factor -> ID .)
    RBRACKET        reduce using rule 89 (factor -> ID .)
    COMMA           reduce using rule 89 (factor -> ID .)
    LBRACKET        shift and go to state 61


state 71

    (46) conditional -> if_elif_bloc ELSE . bloc
    (44) if_elif_bloc -> if_elif_bloc ELSE . if_bloc
    (48) bloc -> . LBRACE stat_bloc RBRACE
    (43) if_bloc -> . IF LPAREN condition RPAREN bloc

    LBRACE          shift and go to state 116
    IF              shift and go to state 41

    bloc                           shift and go to state 114
    if_bloc                        shift and go to state 115

state 72

    (71) term -> term MUL . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43
    LPAREN          shift and go to state 88

    factor                         shift and go to state 117

state 73

    (72) term -> term DIV . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43
    LPAREN          shift and go to state 88

    factor                         shift and go to state 118

state 74

    (73) term -> term IDIV . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43
    LPAREN          shift and go to state 88

    factor                         shift and go to state 119

state 75

    (74) term -> term MOD . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43
    LPAREN          shift and go to state 88

    factor                         shift and go to state 120

state 76

    (27) input -> SCAN LPAREN . ID RPAREN

    ID              shift and go to state 121


state 77

    (28) output -> PRINT LPAREN . plist RPAREN
    (29) plist -> . pitem
    (30) plist -> . plist COMMA pitem
    (31) pitem -> . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    plist                          shift and go to state 122
    pitem                          shift and go to state 123
    expression                     shift and go to state 124
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 78

    (63) for_loop -> FOR LPAREN . assignment SEMI condition SEMI expression RPAREN bloc
    (25) assignment -> . ID ASSIGN expression
    (26) assignment -> . ID ASSIGN LBRACKET list RBRACKET

    ID              shift and go to state 126

    assignment                     shift and go to state 125

state 79

    (64) while_loop -> WHILE LPAREN . condition RPAREN bloc
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    NULL            shift and go to state 28
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    condition                      shift and go to state 127
    expression                     shift and go to state 128
    term                           shift and go to state 25
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 80

    (61) return -> RETURN expression .
    (62) return -> RETURN expression . SEMI
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

    COMMENT         reduce using rule 61 (return -> RETURN expression .)
    NEWLINE         reduce using rule 61 (return -> RETURN expression .)
    FUNCTION        reduce using rule 61 (return -> RETURN expression .)
    ID              reduce using rule 61 (return -> RETURN expression .)
    NULL            reduce using rule 61 (return -> RETURN expression .)
    SCAN            reduce using rule 61 (return -> RETURN expression .)
    PRINT           reduce using rule 61 (return -> RETURN expression .)
    FOR             reduce using rule 61 (return -> RETURN expression .)
    WHILE           reduce using rule 61 (return -> RETURN expression .)
    RETURN          reduce using rule 61 (return -> RETURN expression .)
    BREAK           reduce using rule 61 (return -> RETURN expression .)
    CONTINUE        reduce using rule 61 (return -> RETURN expression .)
    IMPORT          reduce using rule 61 (return -> RETURN expression .)
    LNOT            reduce using rule 61 (return -> RETURN expression .)
    BOOLEAN         reduce using rule 61 (return -> RETURN expression .)
    LPAREN          reduce using rule 61 (return -> RETURN expression .)
    IF              reduce using rule 61 (return -> RETURN expression .)
    NUMBER          reduce using rule 61 (return -> RETURN expression .)
    STRING          reduce using rule 61 (return -> RETURN expression .)
    $end            reduce using rule 61 (return -> RETURN expression .)
    RBRACE          reduce using rule 61 (return -> RETURN expression .)
    SEMI            shift and go to state 129
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57


state 81

    (68) break -> BREAK SEMI .

    COMMENT         reduce using rule 68 (break -> BREAK SEMI .)
    NEWLINE         reduce using rule 68 (break -> BREAK SEMI .)
    FUNCTION        reduce using rule 68 (break -> BREAK SEMI .)
    ID              reduce using rule 68 (break -> BREAK SEMI .)
    NULL            reduce using rule 68 (break -> BREAK SEMI .)
    SCAN            reduce using rule 68 (break -> BREAK SEMI .)
    PRINT           reduce using rule 68 (break -> BREAK SEMI .)
    FOR             reduce using rule 68 (break -> BREAK SEMI .)
    WHILE           reduce using rule 68 (break -> BREAK SEMI .)
    RETURN          reduce using rule 68 (break -> BREAK SEMI .)
    BREAK           reduce using rule 68 (break -> BREAK SEMI .)
    CONTINUE        reduce using rule 68 (break -> BREAK SEMI .)
    IMPORT          reduce using rule 68 (break -> BREAK SEMI .)
    LNOT            reduce using rule 68 (break -> BREAK SEMI .)
    BOOLEAN         reduce using rule 68 (break -> BREAK SEMI .)
    LPAREN          reduce using rule 68 (break -> BREAK SEMI .)
    IF              reduce using rule 68 (break -> BREAK SEMI .)
    NUMBER          reduce using rule 68 (break -> BREAK SEMI .)
    STRING          reduce using rule 68 (break -> BREAK SEMI .)
    $end            reduce using rule 68 (break -> BREAK SEMI .)
    RBRACE          reduce using rule 68 (break -> BREAK SEMI .)


state 82

    (66) continue -> CONTINUE SEMI .

    COMMENT         reduce using rule 66 (continue -> CONTINUE SEMI .)
    NEWLINE         reduce using rule 66 (continue -> CONTINUE SEMI .)
    FUNCTION        reduce using rule 66 (continue -> CONTINUE SEMI .)
    ID              reduce using rule 66 (continue -> CONTINUE SEMI .)
    NULL            reduce using rule 66 (continue -> CONTINUE SEMI .)
    SCAN            reduce using rule 66 (continue -> CONTINUE SEMI .)
    PRINT           reduce using rule 66 (continue -> CONTINUE SEMI .)
    FOR             reduce using rule 66 (continue -> CONTINUE SEMI .)
    WHILE           reduce using rule 66 (continue -> CONTINUE SEMI .)
    RETURN          reduce using rule 66 (continue -> CONTINUE SEMI .)
    BREAK           reduce using rule 66 (continue -> CONTINUE SEMI .)
    CONTINUE        reduce using rule 66 (continue -> CONTINUE SEMI .)
    IMPORT          reduce using rule 66 (continue -> CONTINUE SEMI .)
    LNOT            reduce using rule 66 (continue -> CONTINUE SEMI .)
    BOOLEAN         reduce using rule 66 (continue -> CONTINUE SEMI .)
    LPAREN          reduce using rule 66 (continue -> CONTINUE SEMI .)
    IF              reduce using rule 66 (continue -> CONTINUE SEMI .)
    NUMBER          reduce using rule 66 (continue -> CONTINUE SEMI .)
    STRING          reduce using rule 66 (continue -> CONTINUE SEMI .)
    $end            reduce using rule 66 (continue -> CONTINUE SEMI .)
    RBRACE          reduce using rule 66 (continue -> CONTINUE SEMI .)


state 83

    (22) import -> IMPORT files .
    (23) files -> files . COMMA FILENAME

    COMMENT         reduce using rule 22 (import -> IMPORT files .)
    NEWLINE         reduce using rule 22 (import -> IMPORT files .)
    FUNCTION        reduce using rule 22 (import -> IMPORT files .)
    ID              reduce using rule 22 (import -> IMPORT files .)
    NULL            reduce using rule 22 (import -> IMPORT files .)
    SCAN            reduce using rule 22 (import -> IMPORT files .)
    PRINT           reduce using rule 22 (import -> IMPORT files .)
    FOR             reduce using rule 22 (import -> IMPORT files .)
    WHILE           reduce using rule 22 (import -> IMPORT files .)
    RETURN          reduce using rule 22 (import -> IMPORT files .)
    BREAK           reduce using rule 22 (import -> IMPORT files .)
    CONTINUE        reduce using rule 22 (import -> IMPORT files .)
    IMPORT          reduce using rule 22 (import -> IMPORT files .)
    LNOT            reduce using rule 22 (import -> IMPORT files .)
    BOOLEAN         reduce using rule 22 (import -> IMPORT files .)
    LPAREN          reduce using rule 22 (import -> IMPORT files .)
    IF              reduce using rule 22 (import -> IMPORT files .)
    NUMBER          reduce using rule 22 (import -> IMPORT files .)
    STRING          reduce using rule 22 (import -> IMPORT files .)
    $end            reduce using rule 22 (import -> IMPORT files .)
    RBRACE          reduce using rule 22 (import -> IMPORT files .)
    COMMA           shift and go to state 130


state 84

    (24) files -> FILENAME .

    COMMA           reduce using rule 24 (files -> FILENAME .)
    COMMENT         reduce using rule 24 (files -> FILENAME .)
    NEWLINE         reduce using rule 24 (files -> FILENAME .)
    FUNCTION        reduce using rule 24 (files -> FILENAME .)
    ID              reduce using rule 24 (files -> FILENAME .)
    NULL            reduce using rule 24 (files -> FILENAME .)
    SCAN            reduce using rule 24 (files -> FILENAME .)
    PRINT           reduce using rule 24 (files -> FILENAME .)
    FOR             reduce using rule 24 (files -> FILENAME .)
    WHILE           reduce using rule 24 (files -> FILENAME .)
    RETURN          reduce using rule 24 (files -> FILENAME .)
    BREAK           reduce using rule 24 (files -> FILENAME .)
    CONTINUE        reduce using rule 24 (files -> FILENAME .)
    IMPORT          reduce using rule 24 (files -> FILENAME .)
    LNOT            reduce using rule 24 (files -> FILENAME .)
    BOOLEAN         reduce using rule 24 (files -> FILENAME .)
    LPAREN          reduce using rule 24 (files -> FILENAME .)
    IF              reduce using rule 24 (files -> FILENAME .)
    NUMBER          reduce using rule 24 (files -> FILENAME .)
    STRING          reduce using rule 24 (files -> FILENAME .)
    $end            reduce using rule 24 (files -> FILENAME .)
    RBRACE          reduce using rule 24 (files -> FILENAME .)


state 85

    (40) condition -> LNOT expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for DECR resolved as shift
  ! shift/reduce conflict for INCR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
    COMMENT         reduce using rule 40 (condition -> LNOT expression .)
    NEWLINE         reduce using rule 40 (condition -> LNOT expression .)
    FUNCTION        reduce using rule 40 (condition -> LNOT expression .)
    ID              reduce using rule 40 (condition -> LNOT expression .)
    NULL            reduce using rule 40 (condition -> LNOT expression .)
    SCAN            reduce using rule 40 (condition -> LNOT expression .)
    PRINT           reduce using rule 40 (condition -> LNOT expression .)
    FOR             reduce using rule 40 (condition -> LNOT expression .)
    WHILE           reduce using rule 40 (condition -> LNOT expression .)
    RETURN          reduce using rule 40 (condition -> LNOT expression .)
    BREAK           reduce using rule 40 (condition -> LNOT expression .)
    CONTINUE        reduce using rule 40 (condition -> LNOT expression .)
    IMPORT          reduce using rule 40 (condition -> LNOT expression .)
    LNOT            reduce using rule 40 (condition -> LNOT expression .)
    BOOLEAN         reduce using rule 40 (condition -> LNOT expression .)
    LPAREN          reduce using rule 40 (condition -> LNOT expression .)
    IF              reduce using rule 40 (condition -> LNOT expression .)
    NUMBER          reduce using rule 40 (condition -> LNOT expression .)
    STRING          reduce using rule 40 (condition -> LNOT expression .)
    $end            reduce using rule 40 (condition -> LNOT expression .)
    RPAREN          reduce using rule 40 (condition -> LNOT expression .)
    SEMI            reduce using rule 40 (condition -> LNOT expression .)
    RBRACE          reduce using rule 40 (condition -> LNOT expression .)
    RBRACKET        reduce using rule 40 (condition -> LNOT expression .)
    COMMA           reduce using rule 40 (condition -> LNOT expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57

  ! SUM             [ reduce using rule 40 (condition -> LNOT expression .) ]
  ! SUB             [ reduce using rule 40 (condition -> LNOT expression .) ]
  ! DECR            [ reduce using rule 40 (condition -> LNOT expression .) ]
  ! INCR            [ reduce using rule 40 (condition -> LNOT expression .) ]
  ! GT              [ reduce using rule 40 (condition -> LNOT expression .) ]
  ! LT              [ reduce using rule 40 (condition -> LNOT expression .) ]
  ! GE              [ reduce using rule 40 (condition -> LNOT expression .) ]
  ! LE              [ reduce using rule 40 (condition -> LNOT expression .) ]
  ! NE              [ reduce using rule 40 (condition -> LNOT expression .) ]
  ! EQ              [ reduce using rule 40 (condition -> LNOT expression .) ]
  ! LAND            [ reduce using rule 40 (condition -> LNOT expression .) ]
  ! LOR             [ reduce using rule 40 (condition -> LNOT expression .) ]


state 86

    (43) if_bloc -> IF LPAREN . condition RPAREN bloc
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    NULL            shift and go to state 28
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    condition                      shift and go to state 131
    expression                     shift and go to state 128
    term                           shift and go to state 25
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 87

    (69) expression -> expression SUM term .
    (71) term -> term . MUL factor
    (72) term -> term . DIV factor
    (73) term -> term . IDIV factor
    (74) term -> term . MOD factor

    SUM             reduce using rule 69 (expression -> expression SUM term .)
    SUB             reduce using rule 69 (expression -> expression SUM term .)
    DECR            reduce using rule 69 (expression -> expression SUM term .)
    INCR            reduce using rule 69 (expression -> expression SUM term .)
    GT              reduce using rule 69 (expression -> expression SUM term .)
    LT              reduce using rule 69 (expression -> expression SUM term .)
    GE              reduce using rule 69 (expression -> expression SUM term .)
    LE              reduce using rule 69 (expression -> expression SUM term .)
    NE              reduce using rule 69 (expression -> expression SUM term .)
    EQ              reduce using rule 69 (expression -> expression SUM term .)
    LAND            reduce using rule 69 (expression -> expression SUM term .)
    LOR             reduce using rule 69 (expression -> expression SUM term .)
    COMMENT         reduce using rule 69 (expression -> expression SUM term .)
    NEWLINE         reduce using rule 69 (expression -> expression SUM term .)
    FUNCTION        reduce using rule 69 (expression -> expression SUM term .)
    ID              reduce using rule 69 (expression -> expression SUM term .)
    NULL            reduce using rule 69 (expression -> expression SUM term .)
    SCAN            reduce using rule 69 (expression -> expression SUM term .)
    PRINT           reduce using rule 69 (expression -> expression SUM term .)
    FOR             reduce using rule 69 (expression -> expression SUM term .)
    WHILE           reduce using rule 69 (expression -> expression SUM term .)
    RETURN          reduce using rule 69 (expression -> expression SUM term .)
    BREAK           reduce using rule 69 (expression -> expression SUM term .)
    CONTINUE        reduce using rule 69 (expression -> expression SUM term .)
    IMPORT          reduce using rule 69 (expression -> expression SUM term .)
    LNOT            reduce using rule 69 (expression -> expression SUM term .)
    BOOLEAN         reduce using rule 69 (expression -> expression SUM term .)
    LPAREN          reduce using rule 69 (expression -> expression SUM term .)
    IF              reduce using rule 69 (expression -> expression SUM term .)
    NUMBER          reduce using rule 69 (expression -> expression SUM term .)
    STRING          reduce using rule 69 (expression -> expression SUM term .)
    $end            reduce using rule 69 (expression -> expression SUM term .)
    RPAREN          reduce using rule 69 (expression -> expression SUM term .)
    SEMI            reduce using rule 69 (expression -> expression SUM term .)
    RBRACE          reduce using rule 69 (expression -> expression SUM term .)
    RBRACKET        reduce using rule 69 (expression -> expression SUM term .)
    COMMA           reduce using rule 69 (expression -> expression SUM term .)
    MUL             shift and go to state 72
    DIV             shift and go to state 73
    IDIV            shift and go to state 74
    MOD             shift and go to state 75


state 88

    (92) factor -> LPAREN . expression RPAREN
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    expression                     shift and go to state 132
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 89

    (70) expression -> expression SUB term .
    (71) term -> term . MUL factor
    (72) term -> term . DIV factor
    (73) term -> term . IDIV factor
    (74) term -> term . MOD factor

    SUM             reduce using rule 70 (expression -> expression SUB term .)
    SUB             reduce using rule 70 (expression -> expression SUB term .)
    DECR            reduce using rule 70 (expression -> expression SUB term .)
    INCR            reduce using rule 70 (expression -> expression SUB term .)
    GT              reduce using rule 70 (expression -> expression SUB term .)
    LT              reduce using rule 70 (expression -> expression SUB term .)
    GE              reduce using rule 70 (expression -> expression SUB term .)
    LE              reduce using rule 70 (expression -> expression SUB term .)
    NE              reduce using rule 70 (expression -> expression SUB term .)
    EQ              reduce using rule 70 (expression -> expression SUB term .)
    LAND            reduce using rule 70 (expression -> expression SUB term .)
    LOR             reduce using rule 70 (expression -> expression SUB term .)
    COMMENT         reduce using rule 70 (expression -> expression SUB term .)
    NEWLINE         reduce using rule 70 (expression -> expression SUB term .)
    FUNCTION        reduce using rule 70 (expression -> expression SUB term .)
    ID              reduce using rule 70 (expression -> expression SUB term .)
    NULL            reduce using rule 70 (expression -> expression SUB term .)
    SCAN            reduce using rule 70 (expression -> expression SUB term .)
    PRINT           reduce using rule 70 (expression -> expression SUB term .)
    FOR             reduce using rule 70 (expression -> expression SUB term .)
    WHILE           reduce using rule 70 (expression -> expression SUB term .)
    RETURN          reduce using rule 70 (expression -> expression SUB term .)
    BREAK           reduce using rule 70 (expression -> expression SUB term .)
    CONTINUE        reduce using rule 70 (expression -> expression SUB term .)
    IMPORT          reduce using rule 70 (expression -> expression SUB term .)
    LNOT            reduce using rule 70 (expression -> expression SUB term .)
    BOOLEAN         reduce using rule 70 (expression -> expression SUB term .)
    LPAREN          reduce using rule 70 (expression -> expression SUB term .)
    IF              reduce using rule 70 (expression -> expression SUB term .)
    NUMBER          reduce using rule 70 (expression -> expression SUB term .)
    STRING          reduce using rule 70 (expression -> expression SUB term .)
    $end            reduce using rule 70 (expression -> expression SUB term .)
    RPAREN          reduce using rule 70 (expression -> expression SUB term .)
    SEMI            reduce using rule 70 (expression -> expression SUB term .)
    RBRACE          reduce using rule 70 (expression -> expression SUB term .)
    RBRACKET        reduce using rule 70 (expression -> expression SUB term .)
    COMMA           reduce using rule 70 (expression -> expression SUB term .)
    MUL             shift and go to state 72
    DIV             shift and go to state 73
    IDIV            shift and go to state 74
    MOD             shift and go to state 75


state 90

    (32) condition -> expression GT expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

    DECR            reduce using rule 32 (condition -> expression GT expression .)
    INCR            reduce using rule 32 (condition -> expression GT expression .)
    GT              reduce using rule 32 (condition -> expression GT expression .)
    LT              reduce using rule 32 (condition -> expression GT expression .)
    GE              reduce using rule 32 (condition -> expression GT expression .)
    LE              reduce using rule 32 (condition -> expression GT expression .)
    NE              reduce using rule 32 (condition -> expression GT expression .)
    EQ              reduce using rule 32 (condition -> expression GT expression .)
    LAND            reduce using rule 32 (condition -> expression GT expression .)
    LOR             reduce using rule 32 (condition -> expression GT expression .)
    COMMENT         reduce using rule 32 (condition -> expression GT expression .)
    NEWLINE         reduce using rule 32 (condition -> expression GT expression .)
    FUNCTION        reduce using rule 32 (condition -> expression GT expression .)
    ID              reduce using rule 32 (condition -> expression GT expression .)
    NULL            reduce using rule 32 (condition -> expression GT expression .)
    SCAN            reduce using rule 32 (condition -> expression GT expression .)
    PRINT           reduce using rule 32 (condition -> expression GT expression .)
    FOR             reduce using rule 32 (condition -> expression GT expression .)
    WHILE           reduce using rule 32 (condition -> expression GT expression .)
    RETURN          reduce using rule 32 (condition -> expression GT expression .)
    BREAK           reduce using rule 32 (condition -> expression GT expression .)
    CONTINUE        reduce using rule 32 (condition -> expression GT expression .)
    IMPORT          reduce using rule 32 (condition -> expression GT expression .)
    LNOT            reduce using rule 32 (condition -> expression GT expression .)
    BOOLEAN         reduce using rule 32 (condition -> expression GT expression .)
    LPAREN          reduce using rule 32 (condition -> expression GT expression .)
    IF              reduce using rule 32 (condition -> expression GT expression .)
    NUMBER          reduce using rule 32 (condition -> expression GT expression .)
    STRING          reduce using rule 32 (condition -> expression GT expression .)
    $end            reduce using rule 32 (condition -> expression GT expression .)
    RPAREN          reduce using rule 32 (condition -> expression GT expression .)
    SEMI            reduce using rule 32 (condition -> expression GT expression .)
    RBRACE          reduce using rule 32 (condition -> expression GT expression .)
    RBRACKET        reduce using rule 32 (condition -> expression GT expression .)
    COMMA           reduce using rule 32 (condition -> expression GT expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47

  ! SUM             [ reduce using rule 32 (condition -> expression GT expression .) ]
  ! SUB             [ reduce using rule 32 (condition -> expression GT expression .) ]
  ! DECR            [ shift and go to state 48 ]
  ! INCR            [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! LT              [ shift and go to state 51 ]
  ! GE              [ shift and go to state 52 ]
  ! LE              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]
  ! EQ              [ shift and go to state 55 ]
  ! LAND            [ shift and go to state 56 ]
  ! LOR             [ shift and go to state 57 ]


state 91

    (33) condition -> expression LT expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

    DECR            reduce using rule 33 (condition -> expression LT expression .)
    INCR            reduce using rule 33 (condition -> expression LT expression .)
    GT              reduce using rule 33 (condition -> expression LT expression .)
    LT              reduce using rule 33 (condition -> expression LT expression .)
    GE              reduce using rule 33 (condition -> expression LT expression .)
    LE              reduce using rule 33 (condition -> expression LT expression .)
    NE              reduce using rule 33 (condition -> expression LT expression .)
    EQ              reduce using rule 33 (condition -> expression LT expression .)
    LAND            reduce using rule 33 (condition -> expression LT expression .)
    LOR             reduce using rule 33 (condition -> expression LT expression .)
    COMMENT         reduce using rule 33 (condition -> expression LT expression .)
    NEWLINE         reduce using rule 33 (condition -> expression LT expression .)
    FUNCTION        reduce using rule 33 (condition -> expression LT expression .)
    ID              reduce using rule 33 (condition -> expression LT expression .)
    NULL            reduce using rule 33 (condition -> expression LT expression .)
    SCAN            reduce using rule 33 (condition -> expression LT expression .)
    PRINT           reduce using rule 33 (condition -> expression LT expression .)
    FOR             reduce using rule 33 (condition -> expression LT expression .)
    WHILE           reduce using rule 33 (condition -> expression LT expression .)
    RETURN          reduce using rule 33 (condition -> expression LT expression .)
    BREAK           reduce using rule 33 (condition -> expression LT expression .)
    CONTINUE        reduce using rule 33 (condition -> expression LT expression .)
    IMPORT          reduce using rule 33 (condition -> expression LT expression .)
    LNOT            reduce using rule 33 (condition -> expression LT expression .)
    BOOLEAN         reduce using rule 33 (condition -> expression LT expression .)
    LPAREN          reduce using rule 33 (condition -> expression LT expression .)
    IF              reduce using rule 33 (condition -> expression LT expression .)
    NUMBER          reduce using rule 33 (condition -> expression LT expression .)
    STRING          reduce using rule 33 (condition -> expression LT expression .)
    $end            reduce using rule 33 (condition -> expression LT expression .)
    RPAREN          reduce using rule 33 (condition -> expression LT expression .)
    SEMI            reduce using rule 33 (condition -> expression LT expression .)
    RBRACE          reduce using rule 33 (condition -> expression LT expression .)
    RBRACKET        reduce using rule 33 (condition -> expression LT expression .)
    COMMA           reduce using rule 33 (condition -> expression LT expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47

  ! SUM             [ reduce using rule 33 (condition -> expression LT expression .) ]
  ! SUB             [ reduce using rule 33 (condition -> expression LT expression .) ]
  ! DECR            [ shift and go to state 48 ]
  ! INCR            [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! LT              [ shift and go to state 51 ]
  ! GE              [ shift and go to state 52 ]
  ! LE              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]
  ! EQ              [ shift and go to state 55 ]
  ! LAND            [ shift and go to state 56 ]
  ! LOR             [ shift and go to state 57 ]


state 92

    (34) condition -> expression GE expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for DECR resolved as shift
  ! shift/reduce conflict for INCR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
    COMMENT         reduce using rule 34 (condition -> expression GE expression .)
    NEWLINE         reduce using rule 34 (condition -> expression GE expression .)
    FUNCTION        reduce using rule 34 (condition -> expression GE expression .)
    ID              reduce using rule 34 (condition -> expression GE expression .)
    NULL            reduce using rule 34 (condition -> expression GE expression .)
    SCAN            reduce using rule 34 (condition -> expression GE expression .)
    PRINT           reduce using rule 34 (condition -> expression GE expression .)
    FOR             reduce using rule 34 (condition -> expression GE expression .)
    WHILE           reduce using rule 34 (condition -> expression GE expression .)
    RETURN          reduce using rule 34 (condition -> expression GE expression .)
    BREAK           reduce using rule 34 (condition -> expression GE expression .)
    CONTINUE        reduce using rule 34 (condition -> expression GE expression .)
    IMPORT          reduce using rule 34 (condition -> expression GE expression .)
    LNOT            reduce using rule 34 (condition -> expression GE expression .)
    BOOLEAN         reduce using rule 34 (condition -> expression GE expression .)
    LPAREN          reduce using rule 34 (condition -> expression GE expression .)
    IF              reduce using rule 34 (condition -> expression GE expression .)
    NUMBER          reduce using rule 34 (condition -> expression GE expression .)
    STRING          reduce using rule 34 (condition -> expression GE expression .)
    $end            reduce using rule 34 (condition -> expression GE expression .)
    RPAREN          reduce using rule 34 (condition -> expression GE expression .)
    SEMI            reduce using rule 34 (condition -> expression GE expression .)
    RBRACE          reduce using rule 34 (condition -> expression GE expression .)
    RBRACKET        reduce using rule 34 (condition -> expression GE expression .)
    COMMA           reduce using rule 34 (condition -> expression GE expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57

  ! SUM             [ reduce using rule 34 (condition -> expression GE expression .) ]
  ! SUB             [ reduce using rule 34 (condition -> expression GE expression .) ]
  ! DECR            [ reduce using rule 34 (condition -> expression GE expression .) ]
  ! INCR            [ reduce using rule 34 (condition -> expression GE expression .) ]
  ! GT              [ reduce using rule 34 (condition -> expression GE expression .) ]
  ! LT              [ reduce using rule 34 (condition -> expression GE expression .) ]
  ! GE              [ reduce using rule 34 (condition -> expression GE expression .) ]
  ! LE              [ reduce using rule 34 (condition -> expression GE expression .) ]
  ! NE              [ reduce using rule 34 (condition -> expression GE expression .) ]
  ! EQ              [ reduce using rule 34 (condition -> expression GE expression .) ]
  ! LAND            [ reduce using rule 34 (condition -> expression GE expression .) ]
  ! LOR             [ reduce using rule 34 (condition -> expression GE expression .) ]


state 93

    (35) condition -> expression LE expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for DECR resolved as shift
  ! shift/reduce conflict for INCR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
    COMMENT         reduce using rule 35 (condition -> expression LE expression .)
    NEWLINE         reduce using rule 35 (condition -> expression LE expression .)
    FUNCTION        reduce using rule 35 (condition -> expression LE expression .)
    ID              reduce using rule 35 (condition -> expression LE expression .)
    NULL            reduce using rule 35 (condition -> expression LE expression .)
    SCAN            reduce using rule 35 (condition -> expression LE expression .)
    PRINT           reduce using rule 35 (condition -> expression LE expression .)
    FOR             reduce using rule 35 (condition -> expression LE expression .)
    WHILE           reduce using rule 35 (condition -> expression LE expression .)
    RETURN          reduce using rule 35 (condition -> expression LE expression .)
    BREAK           reduce using rule 35 (condition -> expression LE expression .)
    CONTINUE        reduce using rule 35 (condition -> expression LE expression .)
    IMPORT          reduce using rule 35 (condition -> expression LE expression .)
    LNOT            reduce using rule 35 (condition -> expression LE expression .)
    BOOLEAN         reduce using rule 35 (condition -> expression LE expression .)
    LPAREN          reduce using rule 35 (condition -> expression LE expression .)
    IF              reduce using rule 35 (condition -> expression LE expression .)
    NUMBER          reduce using rule 35 (condition -> expression LE expression .)
    STRING          reduce using rule 35 (condition -> expression LE expression .)
    $end            reduce using rule 35 (condition -> expression LE expression .)
    RPAREN          reduce using rule 35 (condition -> expression LE expression .)
    SEMI            reduce using rule 35 (condition -> expression LE expression .)
    RBRACE          reduce using rule 35 (condition -> expression LE expression .)
    RBRACKET        reduce using rule 35 (condition -> expression LE expression .)
    COMMA           reduce using rule 35 (condition -> expression LE expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57

  ! SUM             [ reduce using rule 35 (condition -> expression LE expression .) ]
  ! SUB             [ reduce using rule 35 (condition -> expression LE expression .) ]
  ! DECR            [ reduce using rule 35 (condition -> expression LE expression .) ]
  ! INCR            [ reduce using rule 35 (condition -> expression LE expression .) ]
  ! GT              [ reduce using rule 35 (condition -> expression LE expression .) ]
  ! LT              [ reduce using rule 35 (condition -> expression LE expression .) ]
  ! GE              [ reduce using rule 35 (condition -> expression LE expression .) ]
  ! LE              [ reduce using rule 35 (condition -> expression LE expression .) ]
  ! NE              [ reduce using rule 35 (condition -> expression LE expression .) ]
  ! EQ              [ reduce using rule 35 (condition -> expression LE expression .) ]
  ! LAND            [ reduce using rule 35 (condition -> expression LE expression .) ]
  ! LOR             [ reduce using rule 35 (condition -> expression LE expression .) ]


state 94

    (36) condition -> expression NE expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for DECR resolved as shift
  ! shift/reduce conflict for INCR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
    COMMENT         reduce using rule 36 (condition -> expression NE expression .)
    NEWLINE         reduce using rule 36 (condition -> expression NE expression .)
    FUNCTION        reduce using rule 36 (condition -> expression NE expression .)
    ID              reduce using rule 36 (condition -> expression NE expression .)
    NULL            reduce using rule 36 (condition -> expression NE expression .)
    SCAN            reduce using rule 36 (condition -> expression NE expression .)
    PRINT           reduce using rule 36 (condition -> expression NE expression .)
    FOR             reduce using rule 36 (condition -> expression NE expression .)
    WHILE           reduce using rule 36 (condition -> expression NE expression .)
    RETURN          reduce using rule 36 (condition -> expression NE expression .)
    BREAK           reduce using rule 36 (condition -> expression NE expression .)
    CONTINUE        reduce using rule 36 (condition -> expression NE expression .)
    IMPORT          reduce using rule 36 (condition -> expression NE expression .)
    LNOT            reduce using rule 36 (condition -> expression NE expression .)
    BOOLEAN         reduce using rule 36 (condition -> expression NE expression .)
    LPAREN          reduce using rule 36 (condition -> expression NE expression .)
    IF              reduce using rule 36 (condition -> expression NE expression .)
    NUMBER          reduce using rule 36 (condition -> expression NE expression .)
    STRING          reduce using rule 36 (condition -> expression NE expression .)
    $end            reduce using rule 36 (condition -> expression NE expression .)
    RPAREN          reduce using rule 36 (condition -> expression NE expression .)
    SEMI            reduce using rule 36 (condition -> expression NE expression .)
    RBRACE          reduce using rule 36 (condition -> expression NE expression .)
    RBRACKET        reduce using rule 36 (condition -> expression NE expression .)
    COMMA           reduce using rule 36 (condition -> expression NE expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57

  ! SUM             [ reduce using rule 36 (condition -> expression NE expression .) ]
  ! SUB             [ reduce using rule 36 (condition -> expression NE expression .) ]
  ! DECR            [ reduce using rule 36 (condition -> expression NE expression .) ]
  ! INCR            [ reduce using rule 36 (condition -> expression NE expression .) ]
  ! GT              [ reduce using rule 36 (condition -> expression NE expression .) ]
  ! LT              [ reduce using rule 36 (condition -> expression NE expression .) ]
  ! GE              [ reduce using rule 36 (condition -> expression NE expression .) ]
  ! LE              [ reduce using rule 36 (condition -> expression NE expression .) ]
  ! NE              [ reduce using rule 36 (condition -> expression NE expression .) ]
  ! EQ              [ reduce using rule 36 (condition -> expression NE expression .) ]
  ! LAND            [ reduce using rule 36 (condition -> expression NE expression .) ]
  ! LOR             [ reduce using rule 36 (condition -> expression NE expression .) ]


state 95

    (37) condition -> expression EQ expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for DECR resolved as shift
  ! shift/reduce conflict for INCR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
    COMMENT         reduce using rule 37 (condition -> expression EQ expression .)
    NEWLINE         reduce using rule 37 (condition -> expression EQ expression .)
    FUNCTION        reduce using rule 37 (condition -> expression EQ expression .)
    ID              reduce using rule 37 (condition -> expression EQ expression .)
    NULL            reduce using rule 37 (condition -> expression EQ expression .)
    SCAN            reduce using rule 37 (condition -> expression EQ expression .)
    PRINT           reduce using rule 37 (condition -> expression EQ expression .)
    FOR             reduce using rule 37 (condition -> expression EQ expression .)
    WHILE           reduce using rule 37 (condition -> expression EQ expression .)
    RETURN          reduce using rule 37 (condition -> expression EQ expression .)
    BREAK           reduce using rule 37 (condition -> expression EQ expression .)
    CONTINUE        reduce using rule 37 (condition -> expression EQ expression .)
    IMPORT          reduce using rule 37 (condition -> expression EQ expression .)
    LNOT            reduce using rule 37 (condition -> expression EQ expression .)
    BOOLEAN         reduce using rule 37 (condition -> expression EQ expression .)
    LPAREN          reduce using rule 37 (condition -> expression EQ expression .)
    IF              reduce using rule 37 (condition -> expression EQ expression .)
    NUMBER          reduce using rule 37 (condition -> expression EQ expression .)
    STRING          reduce using rule 37 (condition -> expression EQ expression .)
    $end            reduce using rule 37 (condition -> expression EQ expression .)
    RPAREN          reduce using rule 37 (condition -> expression EQ expression .)
    SEMI            reduce using rule 37 (condition -> expression EQ expression .)
    RBRACE          reduce using rule 37 (condition -> expression EQ expression .)
    RBRACKET        reduce using rule 37 (condition -> expression EQ expression .)
    COMMA           reduce using rule 37 (condition -> expression EQ expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57

  ! SUM             [ reduce using rule 37 (condition -> expression EQ expression .) ]
  ! SUB             [ reduce using rule 37 (condition -> expression EQ expression .) ]
  ! DECR            [ reduce using rule 37 (condition -> expression EQ expression .) ]
  ! INCR            [ reduce using rule 37 (condition -> expression EQ expression .) ]
  ! GT              [ reduce using rule 37 (condition -> expression EQ expression .) ]
  ! LT              [ reduce using rule 37 (condition -> expression EQ expression .) ]
  ! GE              [ reduce using rule 37 (condition -> expression EQ expression .) ]
  ! LE              [ reduce using rule 37 (condition -> expression EQ expression .) ]
  ! NE              [ reduce using rule 37 (condition -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 37 (condition -> expression EQ expression .) ]
  ! LAND            [ reduce using rule 37 (condition -> expression EQ expression .) ]
  ! LOR             [ reduce using rule 37 (condition -> expression EQ expression .) ]


state 96

    (38) condition -> expression LAND expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for DECR resolved as shift
  ! shift/reduce conflict for INCR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
    COMMENT         reduce using rule 38 (condition -> expression LAND expression .)
    NEWLINE         reduce using rule 38 (condition -> expression LAND expression .)
    FUNCTION        reduce using rule 38 (condition -> expression LAND expression .)
    ID              reduce using rule 38 (condition -> expression LAND expression .)
    NULL            reduce using rule 38 (condition -> expression LAND expression .)
    SCAN            reduce using rule 38 (condition -> expression LAND expression .)
    PRINT           reduce using rule 38 (condition -> expression LAND expression .)
    FOR             reduce using rule 38 (condition -> expression LAND expression .)
    WHILE           reduce using rule 38 (condition -> expression LAND expression .)
    RETURN          reduce using rule 38 (condition -> expression LAND expression .)
    BREAK           reduce using rule 38 (condition -> expression LAND expression .)
    CONTINUE        reduce using rule 38 (condition -> expression LAND expression .)
    IMPORT          reduce using rule 38 (condition -> expression LAND expression .)
    LNOT            reduce using rule 38 (condition -> expression LAND expression .)
    BOOLEAN         reduce using rule 38 (condition -> expression LAND expression .)
    LPAREN          reduce using rule 38 (condition -> expression LAND expression .)
    IF              reduce using rule 38 (condition -> expression LAND expression .)
    NUMBER          reduce using rule 38 (condition -> expression LAND expression .)
    STRING          reduce using rule 38 (condition -> expression LAND expression .)
    $end            reduce using rule 38 (condition -> expression LAND expression .)
    RPAREN          reduce using rule 38 (condition -> expression LAND expression .)
    SEMI            reduce using rule 38 (condition -> expression LAND expression .)
    RBRACE          reduce using rule 38 (condition -> expression LAND expression .)
    RBRACKET        reduce using rule 38 (condition -> expression LAND expression .)
    COMMA           reduce using rule 38 (condition -> expression LAND expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57

  ! SUM             [ reduce using rule 38 (condition -> expression LAND expression .) ]
  ! SUB             [ reduce using rule 38 (condition -> expression LAND expression .) ]
  ! DECR            [ reduce using rule 38 (condition -> expression LAND expression .) ]
  ! INCR            [ reduce using rule 38 (condition -> expression LAND expression .) ]
  ! GT              [ reduce using rule 38 (condition -> expression LAND expression .) ]
  ! LT              [ reduce using rule 38 (condition -> expression LAND expression .) ]
  ! GE              [ reduce using rule 38 (condition -> expression LAND expression .) ]
  ! LE              [ reduce using rule 38 (condition -> expression LAND expression .) ]
  ! NE              [ reduce using rule 38 (condition -> expression LAND expression .) ]
  ! EQ              [ reduce using rule 38 (condition -> expression LAND expression .) ]
  ! LAND            [ reduce using rule 38 (condition -> expression LAND expression .) ]
  ! LOR             [ reduce using rule 38 (condition -> expression LAND expression .) ]


state 97

    (39) condition -> expression LOR expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for DECR resolved as shift
  ! shift/reduce conflict for INCR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
    COMMENT         reduce using rule 39 (condition -> expression LOR expression .)
    NEWLINE         reduce using rule 39 (condition -> expression LOR expression .)
    FUNCTION        reduce using rule 39 (condition -> expression LOR expression .)
    ID              reduce using rule 39 (condition -> expression LOR expression .)
    NULL            reduce using rule 39 (condition -> expression LOR expression .)
    SCAN            reduce using rule 39 (condition -> expression LOR expression .)
    PRINT           reduce using rule 39 (condition -> expression LOR expression .)
    FOR             reduce using rule 39 (condition -> expression LOR expression .)
    WHILE           reduce using rule 39 (condition -> expression LOR expression .)
    RETURN          reduce using rule 39 (condition -> expression LOR expression .)
    BREAK           reduce using rule 39 (condition -> expression LOR expression .)
    CONTINUE        reduce using rule 39 (condition -> expression LOR expression .)
    IMPORT          reduce using rule 39 (condition -> expression LOR expression .)
    LNOT            reduce using rule 39 (condition -> expression LOR expression .)
    BOOLEAN         reduce using rule 39 (condition -> expression LOR expression .)
    LPAREN          reduce using rule 39 (condition -> expression LOR expression .)
    IF              reduce using rule 39 (condition -> expression LOR expression .)
    NUMBER          reduce using rule 39 (condition -> expression LOR expression .)
    STRING          reduce using rule 39 (condition -> expression LOR expression .)
    $end            reduce using rule 39 (condition -> expression LOR expression .)
    RPAREN          reduce using rule 39 (condition -> expression LOR expression .)
    SEMI            reduce using rule 39 (condition -> expression LOR expression .)
    RBRACE          reduce using rule 39 (condition -> expression LOR expression .)
    RBRACKET        reduce using rule 39 (condition -> expression LOR expression .)
    COMMA           reduce using rule 39 (condition -> expression LOR expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57

  ! SUM             [ reduce using rule 39 (condition -> expression LOR expression .) ]
  ! SUB             [ reduce using rule 39 (condition -> expression LOR expression .) ]
  ! DECR            [ reduce using rule 39 (condition -> expression LOR expression .) ]
  ! INCR            [ reduce using rule 39 (condition -> expression LOR expression .) ]
  ! GT              [ reduce using rule 39 (condition -> expression LOR expression .) ]
  ! LT              [ reduce using rule 39 (condition -> expression LOR expression .) ]
  ! GE              [ reduce using rule 39 (condition -> expression LOR expression .) ]
  ! LE              [ reduce using rule 39 (condition -> expression LOR expression .) ]
  ! NE              [ reduce using rule 39 (condition -> expression LOR expression .) ]
  ! EQ              [ reduce using rule 39 (condition -> expression LOR expression .) ]
  ! LAND            [ reduce using rule 39 (condition -> expression LOR expression .) ]
  ! LOR             [ reduce using rule 39 (condition -> expression LOR expression .) ]


state 98

    (51) function_def -> FUNCTION ID LPAREN . param_list RPAREN bloc
    (52) function_def -> FUNCTION ID LPAREN . RPAREN bloc
    (58) param_list -> . param_list COMMA param
    (59) param_list -> . param
    (60) param -> . ID

    RPAREN          shift and go to state 135
    ID              shift and go to state 133

    param_list                     shift and go to state 134
    param                          shift and go to state 136

state 99

    (53) function_call -> ID LPAREN param_list_call . RPAREN
    (55) param_list_call -> param_list_call . COMMA param_call

    RPAREN          shift and go to state 137
    COMMA           shift and go to state 138


state 100

    (54) function_call -> ID LPAREN RPAREN .

    COMMENT         reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    NEWLINE         reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    FUNCTION        reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    ID              reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    NULL            reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    SCAN            reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    PRINT           reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    FOR             reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    WHILE           reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    BREAK           reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    CONTINUE        reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    IMPORT          reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    LNOT            reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    BOOLEAN         reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    LPAREN          reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    IF              reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    NUMBER          reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    STRING          reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    $end            reduce using rule 54 (function_call -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 54 (function_call -> ID LPAREN RPAREN .)


state 101

    (56) param_list_call -> param_call .

    RPAREN          reduce using rule 56 (param_list_call -> param_call .)
    COMMA           reduce using rule 56 (param_list_call -> param_call .)


state 102

    (57) param_call -> factor .

    RPAREN          reduce using rule 57 (param_call -> factor .)
    COMMA           reduce using rule 57 (param_call -> factor .)


state 103

    (25) assignment -> ID ASSIGN expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

    COMMENT         reduce using rule 25 (assignment -> ID ASSIGN expression .)
    NEWLINE         reduce using rule 25 (assignment -> ID ASSIGN expression .)
    FUNCTION        reduce using rule 25 (assignment -> ID ASSIGN expression .)
    ID              reduce using rule 25 (assignment -> ID ASSIGN expression .)
    NULL            reduce using rule 25 (assignment -> ID ASSIGN expression .)
    SCAN            reduce using rule 25 (assignment -> ID ASSIGN expression .)
    PRINT           reduce using rule 25 (assignment -> ID ASSIGN expression .)
    FOR             reduce using rule 25 (assignment -> ID ASSIGN expression .)
    WHILE           reduce using rule 25 (assignment -> ID ASSIGN expression .)
    RETURN          reduce using rule 25 (assignment -> ID ASSIGN expression .)
    BREAK           reduce using rule 25 (assignment -> ID ASSIGN expression .)
    CONTINUE        reduce using rule 25 (assignment -> ID ASSIGN expression .)
    IMPORT          reduce using rule 25 (assignment -> ID ASSIGN expression .)
    LNOT            reduce using rule 25 (assignment -> ID ASSIGN expression .)
    BOOLEAN         reduce using rule 25 (assignment -> ID ASSIGN expression .)
    LPAREN          reduce using rule 25 (assignment -> ID ASSIGN expression .)
    IF              reduce using rule 25 (assignment -> ID ASSIGN expression .)
    NUMBER          reduce using rule 25 (assignment -> ID ASSIGN expression .)
    STRING          reduce using rule 25 (assignment -> ID ASSIGN expression .)
    $end            reduce using rule 25 (assignment -> ID ASSIGN expression .)
    SEMI            reduce using rule 25 (assignment -> ID ASSIGN expression .)
    RBRACE          reduce using rule 25 (assignment -> ID ASSIGN expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57


state 104

    (26) assignment -> ID ASSIGN LBRACKET . list RBRACKET
    (93) list -> . list COMMA factor
    (94) list -> . factor
    (95) list -> .
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    RBRACKET        reduce using rule 95 (list -> .)
    COMMA           reduce using rule 95 (list -> .)
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43
    LPAREN          shift and go to state 88

    list                           shift and go to state 139
    factor                         shift and go to state 140

state 105

    (91) factor -> ID LBRACKET expression . RBRACKET
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

    RBRACKET        shift and go to state 141
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57


state 106

    (77) expression_ass -> ID SUM_ASS expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

    COMMENT         reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    NEWLINE         reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    FUNCTION        reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    ID              reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    NULL            reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    SCAN            reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    PRINT           reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    FOR             reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    WHILE           reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    RETURN          reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    BREAK           reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    CONTINUE        reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    IMPORT          reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    LNOT            reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    BOOLEAN         reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    LPAREN          reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    IF              reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    NUMBER          reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    STRING          reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    $end            reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    RBRACE          reduce using rule 77 (expression_ass -> ID SUM_ASS expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57


state 107

    (78) expression_ass -> ID SUB_ASS expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

    COMMENT         reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    NEWLINE         reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    FUNCTION        reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    ID              reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    NULL            reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    SCAN            reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    PRINT           reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    FOR             reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    WHILE           reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    RETURN          reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    BREAK           reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    CONTINUE        reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    IMPORT          reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    LNOT            reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    BOOLEAN         reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    LPAREN          reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    IF              reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    NUMBER          reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    STRING          reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    $end            reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    RBRACE          reduce using rule 78 (expression_ass -> ID SUB_ASS expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57


state 108

    (79) expression_ass -> ID MUL_ASS expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

    COMMENT         reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    NEWLINE         reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    FUNCTION        reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    ID              reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    NULL            reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    SCAN            reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    PRINT           reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    FOR             reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    WHILE           reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    RETURN          reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    BREAK           reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    CONTINUE        reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    IMPORT          reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    LNOT            reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    BOOLEAN         reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    LPAREN          reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    IF              reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    NUMBER          reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    STRING          reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    $end            reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    RBRACE          reduce using rule 79 (expression_ass -> ID MUL_ASS expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57


state 109

    (80) expression_ass -> ID DIV_ASS expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

    COMMENT         reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    NEWLINE         reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    FUNCTION        reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    ID              reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    NULL            reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    SCAN            reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    PRINT           reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    FOR             reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    WHILE           reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    RETURN          reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    BREAK           reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    CONTINUE        reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    IMPORT          reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    LNOT            reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    BOOLEAN         reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    LPAREN          reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    IF              reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    NUMBER          reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    STRING          reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    $end            reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    RBRACE          reduce using rule 80 (expression_ass -> ID DIV_ASS expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57


state 110

    (81) expression_ass -> ID IDIV_ASS expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

    COMMENT         reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    NEWLINE         reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    FUNCTION        reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    ID              reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    NULL            reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    SCAN            reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    PRINT           reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    FOR             reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    WHILE           reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    RETURN          reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    BREAK           reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    CONTINUE        reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    IMPORT          reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    LNOT            reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    BOOLEAN         reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    LPAREN          reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    IF              reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    NUMBER          reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    STRING          reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    $end            reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    RBRACE          reduce using rule 81 (expression_ass -> ID IDIV_ASS expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57


state 111

    (82) expression_ass -> ID MOD_ASS expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

    COMMENT         reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    NEWLINE         reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    FUNCTION        reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    ID              reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    NULL            reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    SCAN            reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    PRINT           reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    FOR             reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    WHILE           reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    RETURN          reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    BREAK           reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    CONTINUE        reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    IMPORT          reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    LNOT            reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    BOOLEAN         reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    LPAREN          reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    IF              reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    NUMBER          reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    STRING          reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    $end            reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    RBRACE          reduce using rule 82 (expression_ass -> ID MOD_ASS expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57


state 112

    (42) ternary_condition -> LPAREN condition RPAREN . QUES bloc COLON bloc

    QUES            shift and go to state 142


state 113

    (92) factor -> LPAREN expression RPAREN .

    MUL             reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    DIV             reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    IDIV            reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    SUM             reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    SUB             reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    DECR            reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    INCR            reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    LAND            reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    LOR             reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    COMMENT         reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    NULL            reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    SCAN            reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    FOR             reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    CONTINUE        reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    IMPORT          reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    LNOT            reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    STRING          reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 92 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 92 (factor -> LPAREN expression RPAREN .)


state 114

    (46) conditional -> if_elif_bloc ELSE bloc .

    COMMENT         reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    NEWLINE         reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    FUNCTION        reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    ID              reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    NULL            reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    SCAN            reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    PRINT           reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    FOR             reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    WHILE           reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    RETURN          reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    BREAK           reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    CONTINUE        reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    IMPORT          reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    LNOT            reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    BOOLEAN         reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    LPAREN          reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    IF              reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    NUMBER          reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    STRING          reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    $end            reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)
    RBRACE          reduce using rule 46 (conditional -> if_elif_bloc ELSE bloc .)


state 115

    (44) if_elif_bloc -> if_elif_bloc ELSE if_bloc .

    ELSE            reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    COMMENT         reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    NEWLINE         reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    FUNCTION        reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    ID              reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    NULL            reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    SCAN            reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    PRINT           reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    FOR             reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    WHILE           reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    RETURN          reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    BREAK           reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    CONTINUE        reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    IMPORT          reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    LNOT            reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    BOOLEAN         reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    LPAREN          reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    IF              reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    NUMBER          reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    STRING          reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    $end            reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)
    RBRACE          reduce using rule 44 (if_elif_bloc -> if_elif_bloc ELSE if_bloc .)


state 116

    (48) bloc -> LBRACE . stat_bloc RBRACE
    (49) stat_bloc -> . stat_bloc command
    (50) stat_bloc -> . command
    (6) command -> . function_def
    (7) command -> . function_call
    (8) command -> . conditional
    (9) command -> . expression
    (10) command -> . assignment
    (11) command -> . expression_ass
    (12) command -> . input
    (13) command -> . output
    (14) command -> . for_loop
    (15) command -> . while_loop
    (16) command -> . return
    (17) command -> . break
    (18) command -> . continue
    (19) command -> . COMMENT
    (20) command -> . NEWLINE
    (21) command -> . import
    (51) function_def -> . FUNCTION ID LPAREN param_list RPAREN bloc
    (52) function_def -> . FUNCTION ID LPAREN RPAREN bloc
    (53) function_call -> . ID LPAREN param_list_call RPAREN
    (54) function_call -> . ID LPAREN RPAREN
    (46) conditional -> . if_elif_bloc ELSE bloc
    (47) conditional -> . if_elif_bloc
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (25) assignment -> . ID ASSIGN expression
    (26) assignment -> . ID ASSIGN LBRACKET list RBRACKET
    (77) expression_ass -> . ID SUM_ASS expression
    (78) expression_ass -> . ID SUB_ASS expression
    (79) expression_ass -> . ID MUL_ASS expression
    (80) expression_ass -> . ID DIV_ASS expression
    (81) expression_ass -> . ID IDIV_ASS expression
    (82) expression_ass -> . ID MOD_ASS expression
    (27) input -> . SCAN LPAREN ID RPAREN
    (28) output -> . PRINT LPAREN plist RPAREN
    (63) for_loop -> . FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc
    (64) while_loop -> . WHILE LPAREN condition RPAREN bloc
    (61) return -> . RETURN expression
    (62) return -> . RETURN expression SEMI
    (67) break -> . BREAK
    (68) break -> . BREAK SEMI
    (65) continue -> . CONTINUE
    (66) continue -> . CONTINUE SEMI
    (22) import -> . IMPORT files
    (44) if_elif_bloc -> . if_elif_bloc ELSE if_bloc
    (45) if_elif_bloc -> . if_bloc
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (43) if_bloc -> . IF LPAREN condition RPAREN bloc
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    COMMENT         shift and go to state 18
    NEWLINE         shift and go to state 19
    FUNCTION        shift and go to state 21
    ID              shift and go to state 22
    NULL            shift and go to state 28
    SCAN            shift and go to state 29
    PRINT           shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    RETURN          shift and go to state 33
    BREAK           shift and go to state 34
    CONTINUE        shift and go to state 35
    IMPORT          shift and go to state 36
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    IF              shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43

    stat_bloc                      shift and go to state 143
    command                        shift and go to state 144
    function_def                   shift and go to state 5
    function_call                  shift and go to state 6
    conditional                    shift and go to state 7
    expression                     shift and go to state 8
    assignment                     shift and go to state 9
    expression_ass                 shift and go to state 10
    input                          shift and go to state 11
    output                         shift and go to state 12
    for_loop                       shift and go to state 13
    while_loop                     shift and go to state 14
    return                         shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    import                         shift and go to state 20
    if_elif_bloc                   shift and go to state 24
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    if_bloc                        shift and go to state 37
    factor                         shift and go to state 40

state 117

    (71) term -> term MUL factor .

    MUL             reduce using rule 71 (term -> term MUL factor .)
    DIV             reduce using rule 71 (term -> term MUL factor .)
    IDIV            reduce using rule 71 (term -> term MUL factor .)
    MOD             reduce using rule 71 (term -> term MUL factor .)
    SUM             reduce using rule 71 (term -> term MUL factor .)
    SUB             reduce using rule 71 (term -> term MUL factor .)
    DECR            reduce using rule 71 (term -> term MUL factor .)
    INCR            reduce using rule 71 (term -> term MUL factor .)
    GT              reduce using rule 71 (term -> term MUL factor .)
    LT              reduce using rule 71 (term -> term MUL factor .)
    GE              reduce using rule 71 (term -> term MUL factor .)
    LE              reduce using rule 71 (term -> term MUL factor .)
    NE              reduce using rule 71 (term -> term MUL factor .)
    EQ              reduce using rule 71 (term -> term MUL factor .)
    LAND            reduce using rule 71 (term -> term MUL factor .)
    LOR             reduce using rule 71 (term -> term MUL factor .)
    COMMENT         reduce using rule 71 (term -> term MUL factor .)
    NEWLINE         reduce using rule 71 (term -> term MUL factor .)
    FUNCTION        reduce using rule 71 (term -> term MUL factor .)
    ID              reduce using rule 71 (term -> term MUL factor .)
    NULL            reduce using rule 71 (term -> term MUL factor .)
    SCAN            reduce using rule 71 (term -> term MUL factor .)
    PRINT           reduce using rule 71 (term -> term MUL factor .)
    FOR             reduce using rule 71 (term -> term MUL factor .)
    WHILE           reduce using rule 71 (term -> term MUL factor .)
    RETURN          reduce using rule 71 (term -> term MUL factor .)
    BREAK           reduce using rule 71 (term -> term MUL factor .)
    CONTINUE        reduce using rule 71 (term -> term MUL factor .)
    IMPORT          reduce using rule 71 (term -> term MUL factor .)
    LNOT            reduce using rule 71 (term -> term MUL factor .)
    BOOLEAN         reduce using rule 71 (term -> term MUL factor .)
    LPAREN          reduce using rule 71 (term -> term MUL factor .)
    IF              reduce using rule 71 (term -> term MUL factor .)
    NUMBER          reduce using rule 71 (term -> term MUL factor .)
    STRING          reduce using rule 71 (term -> term MUL factor .)
    $end            reduce using rule 71 (term -> term MUL factor .)
    RPAREN          reduce using rule 71 (term -> term MUL factor .)
    SEMI            reduce using rule 71 (term -> term MUL factor .)
    RBRACE          reduce using rule 71 (term -> term MUL factor .)
    RBRACKET        reduce using rule 71 (term -> term MUL factor .)
    COMMA           reduce using rule 71 (term -> term MUL factor .)


state 118

    (72) term -> term DIV factor .

    MUL             reduce using rule 72 (term -> term DIV factor .)
    DIV             reduce using rule 72 (term -> term DIV factor .)
    IDIV            reduce using rule 72 (term -> term DIV factor .)
    MOD             reduce using rule 72 (term -> term DIV factor .)
    SUM             reduce using rule 72 (term -> term DIV factor .)
    SUB             reduce using rule 72 (term -> term DIV factor .)
    DECR            reduce using rule 72 (term -> term DIV factor .)
    INCR            reduce using rule 72 (term -> term DIV factor .)
    GT              reduce using rule 72 (term -> term DIV factor .)
    LT              reduce using rule 72 (term -> term DIV factor .)
    GE              reduce using rule 72 (term -> term DIV factor .)
    LE              reduce using rule 72 (term -> term DIV factor .)
    NE              reduce using rule 72 (term -> term DIV factor .)
    EQ              reduce using rule 72 (term -> term DIV factor .)
    LAND            reduce using rule 72 (term -> term DIV factor .)
    LOR             reduce using rule 72 (term -> term DIV factor .)
    COMMENT         reduce using rule 72 (term -> term DIV factor .)
    NEWLINE         reduce using rule 72 (term -> term DIV factor .)
    FUNCTION        reduce using rule 72 (term -> term DIV factor .)
    ID              reduce using rule 72 (term -> term DIV factor .)
    NULL            reduce using rule 72 (term -> term DIV factor .)
    SCAN            reduce using rule 72 (term -> term DIV factor .)
    PRINT           reduce using rule 72 (term -> term DIV factor .)
    FOR             reduce using rule 72 (term -> term DIV factor .)
    WHILE           reduce using rule 72 (term -> term DIV factor .)
    RETURN          reduce using rule 72 (term -> term DIV factor .)
    BREAK           reduce using rule 72 (term -> term DIV factor .)
    CONTINUE        reduce using rule 72 (term -> term DIV factor .)
    IMPORT          reduce using rule 72 (term -> term DIV factor .)
    LNOT            reduce using rule 72 (term -> term DIV factor .)
    BOOLEAN         reduce using rule 72 (term -> term DIV factor .)
    LPAREN          reduce using rule 72 (term -> term DIV factor .)
    IF              reduce using rule 72 (term -> term DIV factor .)
    NUMBER          reduce using rule 72 (term -> term DIV factor .)
    STRING          reduce using rule 72 (term -> term DIV factor .)
    $end            reduce using rule 72 (term -> term DIV factor .)
    RPAREN          reduce using rule 72 (term -> term DIV factor .)
    SEMI            reduce using rule 72 (term -> term DIV factor .)
    RBRACE          reduce using rule 72 (term -> term DIV factor .)
    RBRACKET        reduce using rule 72 (term -> term DIV factor .)
    COMMA           reduce using rule 72 (term -> term DIV factor .)


state 119

    (73) term -> term IDIV factor .

    MUL             reduce using rule 73 (term -> term IDIV factor .)
    DIV             reduce using rule 73 (term -> term IDIV factor .)
    IDIV            reduce using rule 73 (term -> term IDIV factor .)
    MOD             reduce using rule 73 (term -> term IDIV factor .)
    SUM             reduce using rule 73 (term -> term IDIV factor .)
    SUB             reduce using rule 73 (term -> term IDIV factor .)
    DECR            reduce using rule 73 (term -> term IDIV factor .)
    INCR            reduce using rule 73 (term -> term IDIV factor .)
    GT              reduce using rule 73 (term -> term IDIV factor .)
    LT              reduce using rule 73 (term -> term IDIV factor .)
    GE              reduce using rule 73 (term -> term IDIV factor .)
    LE              reduce using rule 73 (term -> term IDIV factor .)
    NE              reduce using rule 73 (term -> term IDIV factor .)
    EQ              reduce using rule 73 (term -> term IDIV factor .)
    LAND            reduce using rule 73 (term -> term IDIV factor .)
    LOR             reduce using rule 73 (term -> term IDIV factor .)
    COMMENT         reduce using rule 73 (term -> term IDIV factor .)
    NEWLINE         reduce using rule 73 (term -> term IDIV factor .)
    FUNCTION        reduce using rule 73 (term -> term IDIV factor .)
    ID              reduce using rule 73 (term -> term IDIV factor .)
    NULL            reduce using rule 73 (term -> term IDIV factor .)
    SCAN            reduce using rule 73 (term -> term IDIV factor .)
    PRINT           reduce using rule 73 (term -> term IDIV factor .)
    FOR             reduce using rule 73 (term -> term IDIV factor .)
    WHILE           reduce using rule 73 (term -> term IDIV factor .)
    RETURN          reduce using rule 73 (term -> term IDIV factor .)
    BREAK           reduce using rule 73 (term -> term IDIV factor .)
    CONTINUE        reduce using rule 73 (term -> term IDIV factor .)
    IMPORT          reduce using rule 73 (term -> term IDIV factor .)
    LNOT            reduce using rule 73 (term -> term IDIV factor .)
    BOOLEAN         reduce using rule 73 (term -> term IDIV factor .)
    LPAREN          reduce using rule 73 (term -> term IDIV factor .)
    IF              reduce using rule 73 (term -> term IDIV factor .)
    NUMBER          reduce using rule 73 (term -> term IDIV factor .)
    STRING          reduce using rule 73 (term -> term IDIV factor .)
    $end            reduce using rule 73 (term -> term IDIV factor .)
    RPAREN          reduce using rule 73 (term -> term IDIV factor .)
    SEMI            reduce using rule 73 (term -> term IDIV factor .)
    RBRACE          reduce using rule 73 (term -> term IDIV factor .)
    RBRACKET        reduce using rule 73 (term -> term IDIV factor .)
    COMMA           reduce using rule 73 (term -> term IDIV factor .)


state 120

    (74) term -> term MOD factor .

    MUL             reduce using rule 74 (term -> term MOD factor .)
    DIV             reduce using rule 74 (term -> term MOD factor .)
    IDIV            reduce using rule 74 (term -> term MOD factor .)
    MOD             reduce using rule 74 (term -> term MOD factor .)
    SUM             reduce using rule 74 (term -> term MOD factor .)
    SUB             reduce using rule 74 (term -> term MOD factor .)
    DECR            reduce using rule 74 (term -> term MOD factor .)
    INCR            reduce using rule 74 (term -> term MOD factor .)
    GT              reduce using rule 74 (term -> term MOD factor .)
    LT              reduce using rule 74 (term -> term MOD factor .)
    GE              reduce using rule 74 (term -> term MOD factor .)
    LE              reduce using rule 74 (term -> term MOD factor .)
    NE              reduce using rule 74 (term -> term MOD factor .)
    EQ              reduce using rule 74 (term -> term MOD factor .)
    LAND            reduce using rule 74 (term -> term MOD factor .)
    LOR             reduce using rule 74 (term -> term MOD factor .)
    COMMENT         reduce using rule 74 (term -> term MOD factor .)
    NEWLINE         reduce using rule 74 (term -> term MOD factor .)
    FUNCTION        reduce using rule 74 (term -> term MOD factor .)
    ID              reduce using rule 74 (term -> term MOD factor .)
    NULL            reduce using rule 74 (term -> term MOD factor .)
    SCAN            reduce using rule 74 (term -> term MOD factor .)
    PRINT           reduce using rule 74 (term -> term MOD factor .)
    FOR             reduce using rule 74 (term -> term MOD factor .)
    WHILE           reduce using rule 74 (term -> term MOD factor .)
    RETURN          reduce using rule 74 (term -> term MOD factor .)
    BREAK           reduce using rule 74 (term -> term MOD factor .)
    CONTINUE        reduce using rule 74 (term -> term MOD factor .)
    IMPORT          reduce using rule 74 (term -> term MOD factor .)
    LNOT            reduce using rule 74 (term -> term MOD factor .)
    BOOLEAN         reduce using rule 74 (term -> term MOD factor .)
    LPAREN          reduce using rule 74 (term -> term MOD factor .)
    IF              reduce using rule 74 (term -> term MOD factor .)
    NUMBER          reduce using rule 74 (term -> term MOD factor .)
    STRING          reduce using rule 74 (term -> term MOD factor .)
    $end            reduce using rule 74 (term -> term MOD factor .)
    RPAREN          reduce using rule 74 (term -> term MOD factor .)
    SEMI            reduce using rule 74 (term -> term MOD factor .)
    RBRACE          reduce using rule 74 (term -> term MOD factor .)
    RBRACKET        reduce using rule 74 (term -> term MOD factor .)
    COMMA           reduce using rule 74 (term -> term MOD factor .)


state 121

    (27) input -> SCAN LPAREN ID . RPAREN

    RPAREN          shift and go to state 145


state 122

    (28) output -> PRINT LPAREN plist . RPAREN
    (30) plist -> plist . COMMA pitem

    RPAREN          shift and go to state 146
    COMMA           shift and go to state 147


state 123

    (29) plist -> pitem .

    RPAREN          reduce using rule 29 (plist -> pitem .)
    COMMA           reduce using rule 29 (plist -> pitem .)


state 124

    (31) pitem -> expression .
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

    RPAREN          reduce using rule 31 (pitem -> expression .)
    COMMA           reduce using rule 31 (pitem -> expression .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57


state 125

    (63) for_loop -> FOR LPAREN assignment . SEMI condition SEMI expression RPAREN bloc

    SEMI            shift and go to state 148


state 126

    (25) assignment -> ID . ASSIGN expression
    (26) assignment -> ID . ASSIGN LBRACKET list RBRACKET

    ASSIGN          shift and go to state 60


state 127

    (64) while_loop -> WHILE LPAREN condition . RPAREN bloc
    (83) expression -> condition .

    RPAREN          shift and go to state 149
    GT              reduce using rule 83 (expression -> condition .)
    LT              reduce using rule 83 (expression -> condition .)
    GE              reduce using rule 83 (expression -> condition .)
    LE              reduce using rule 83 (expression -> condition .)
    NE              reduce using rule 83 (expression -> condition .)
    EQ              reduce using rule 83 (expression -> condition .)
    LAND            reduce using rule 83 (expression -> condition .)
    LOR             reduce using rule 83 (expression -> condition .)
    SUM             reduce using rule 83 (expression -> condition .)
    SUB             reduce using rule 83 (expression -> condition .)
    DECR            reduce using rule 83 (expression -> condition .)
    INCR            reduce using rule 83 (expression -> condition .)


state 128

    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR

    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49


state 129

    (62) return -> RETURN expression SEMI .

    COMMENT         reduce using rule 62 (return -> RETURN expression SEMI .)
    NEWLINE         reduce using rule 62 (return -> RETURN expression SEMI .)
    FUNCTION        reduce using rule 62 (return -> RETURN expression SEMI .)
    ID              reduce using rule 62 (return -> RETURN expression SEMI .)
    NULL            reduce using rule 62 (return -> RETURN expression SEMI .)
    SCAN            reduce using rule 62 (return -> RETURN expression SEMI .)
    PRINT           reduce using rule 62 (return -> RETURN expression SEMI .)
    FOR             reduce using rule 62 (return -> RETURN expression SEMI .)
    WHILE           reduce using rule 62 (return -> RETURN expression SEMI .)
    RETURN          reduce using rule 62 (return -> RETURN expression SEMI .)
    BREAK           reduce using rule 62 (return -> RETURN expression SEMI .)
    CONTINUE        reduce using rule 62 (return -> RETURN expression SEMI .)
    IMPORT          reduce using rule 62 (return -> RETURN expression SEMI .)
    LNOT            reduce using rule 62 (return -> RETURN expression SEMI .)
    BOOLEAN         reduce using rule 62 (return -> RETURN expression SEMI .)
    LPAREN          reduce using rule 62 (return -> RETURN expression SEMI .)
    IF              reduce using rule 62 (return -> RETURN expression SEMI .)
    NUMBER          reduce using rule 62 (return -> RETURN expression SEMI .)
    STRING          reduce using rule 62 (return -> RETURN expression SEMI .)
    $end            reduce using rule 62 (return -> RETURN expression SEMI .)
    RBRACE          reduce using rule 62 (return -> RETURN expression SEMI .)


state 130

    (23) files -> files COMMA . FILENAME

    FILENAME        shift and go to state 150


state 131

    (43) if_bloc -> IF LPAREN condition . RPAREN bloc
    (83) expression -> condition .

    RPAREN          shift and go to state 151
    GT              reduce using rule 83 (expression -> condition .)
    LT              reduce using rule 83 (expression -> condition .)
    GE              reduce using rule 83 (expression -> condition .)
    LE              reduce using rule 83 (expression -> condition .)
    NE              reduce using rule 83 (expression -> condition .)
    EQ              reduce using rule 83 (expression -> condition .)
    LAND            reduce using rule 83 (expression -> condition .)
    LOR             reduce using rule 83 (expression -> condition .)
    SUM             reduce using rule 83 (expression -> condition .)
    SUB             reduce using rule 83 (expression -> condition .)
    DECR            reduce using rule 83 (expression -> condition .)
    INCR            reduce using rule 83 (expression -> condition .)


state 132

    (92) factor -> LPAREN expression . RPAREN
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

    RPAREN          shift and go to state 113
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57


state 133

    (60) param -> ID .

    RPAREN          reduce using rule 60 (param -> ID .)
    COMMA           reduce using rule 60 (param -> ID .)


state 134

    (51) function_def -> FUNCTION ID LPAREN param_list . RPAREN bloc
    (58) param_list -> param_list . COMMA param

    RPAREN          shift and go to state 152
    COMMA           shift and go to state 153


state 135

    (52) function_def -> FUNCTION ID LPAREN RPAREN . bloc
    (48) bloc -> . LBRACE stat_bloc RBRACE

    LBRACE          shift and go to state 116

    bloc                           shift and go to state 154

state 136

    (59) param_list -> param .

    RPAREN          reduce using rule 59 (param_list -> param .)
    COMMA           reduce using rule 59 (param_list -> param .)


state 137

    (53) function_call -> ID LPAREN param_list_call RPAREN .

    COMMENT         reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    NEWLINE         reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    FUNCTION        reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    ID              reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    NULL            reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    SCAN            reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    PRINT           reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    FOR             reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    WHILE           reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    RETURN          reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    BREAK           reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    CONTINUE        reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    IMPORT          reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    LNOT            reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    BOOLEAN         reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    LPAREN          reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    IF              reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    NUMBER          reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    STRING          reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    $end            reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)
    RBRACE          reduce using rule 53 (function_call -> ID LPAREN param_list_call RPAREN .)


state 138

    (55) param_list_call -> param_list_call COMMA . param_call
    (57) param_call -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43
    LPAREN          shift and go to state 88

    param_call                     shift and go to state 155
    factor                         shift and go to state 102

state 139

    (26) assignment -> ID ASSIGN LBRACKET list . RBRACKET
    (93) list -> list . COMMA factor

    RBRACKET        shift and go to state 156
    COMMA           shift and go to state 157


state 140

    (94) list -> factor .

    RBRACKET        reduce using rule 94 (list -> factor .)
    COMMA           reduce using rule 94 (list -> factor .)


state 141

    (91) factor -> ID LBRACKET expression RBRACKET .

    MUL             reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    DIV             reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    IDIV            reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    MOD             reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    SUM             reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    SUB             reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    DECR            reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    INCR            reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    GT              reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    LT              reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    GE              reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    LE              reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    NE              reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    EQ              reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    LAND            reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    LOR             reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    COMMENT         reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    NEWLINE         reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    FUNCTION        reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    ID              reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    NULL            reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    SCAN            reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    PRINT           reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    FOR             reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    RETURN          reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    BREAK           reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    CONTINUE        reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    IMPORT          reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    LNOT            reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    BOOLEAN         reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    IF              reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    NUMBER          reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    STRING          reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    $end            reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 91 (factor -> ID LBRACKET expression RBRACKET .)


state 142

    (42) ternary_condition -> LPAREN condition RPAREN QUES . bloc COLON bloc
    (48) bloc -> . LBRACE stat_bloc RBRACE

    LBRACE          shift and go to state 116

    bloc                           shift and go to state 158

state 143

    (48) bloc -> LBRACE stat_bloc . RBRACE
    (49) stat_bloc -> stat_bloc . command
    (6) command -> . function_def
    (7) command -> . function_call
    (8) command -> . conditional
    (9) command -> . expression
    (10) command -> . assignment
    (11) command -> . expression_ass
    (12) command -> . input
    (13) command -> . output
    (14) command -> . for_loop
    (15) command -> . while_loop
    (16) command -> . return
    (17) command -> . break
    (18) command -> . continue
    (19) command -> . COMMENT
    (20) command -> . NEWLINE
    (21) command -> . import
    (51) function_def -> . FUNCTION ID LPAREN param_list RPAREN bloc
    (52) function_def -> . FUNCTION ID LPAREN RPAREN bloc
    (53) function_call -> . ID LPAREN param_list_call RPAREN
    (54) function_call -> . ID LPAREN RPAREN
    (46) conditional -> . if_elif_bloc ELSE bloc
    (47) conditional -> . if_elif_bloc
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (25) assignment -> . ID ASSIGN expression
    (26) assignment -> . ID ASSIGN LBRACKET list RBRACKET
    (77) expression_ass -> . ID SUM_ASS expression
    (78) expression_ass -> . ID SUB_ASS expression
    (79) expression_ass -> . ID MUL_ASS expression
    (80) expression_ass -> . ID DIV_ASS expression
    (81) expression_ass -> . ID IDIV_ASS expression
    (82) expression_ass -> . ID MOD_ASS expression
    (27) input -> . SCAN LPAREN ID RPAREN
    (28) output -> . PRINT LPAREN plist RPAREN
    (63) for_loop -> . FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc
    (64) while_loop -> . WHILE LPAREN condition RPAREN bloc
    (61) return -> . RETURN expression
    (62) return -> . RETURN expression SEMI
    (67) break -> . BREAK
    (68) break -> . BREAK SEMI
    (65) continue -> . CONTINUE
    (66) continue -> . CONTINUE SEMI
    (22) import -> . IMPORT files
    (44) if_elif_bloc -> . if_elif_bloc ELSE if_bloc
    (45) if_elif_bloc -> . if_bloc
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (43) if_bloc -> . IF LPAREN condition RPAREN bloc
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 159
    COMMENT         shift and go to state 18
    NEWLINE         shift and go to state 19
    FUNCTION        shift and go to state 21
    ID              shift and go to state 22
    NULL            shift and go to state 28
    SCAN            shift and go to state 29
    PRINT           shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    RETURN          shift and go to state 33
    BREAK           shift and go to state 34
    CONTINUE        shift and go to state 35
    IMPORT          shift and go to state 36
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    IF              shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43

    command                        shift and go to state 160
    function_def                   shift and go to state 5
    function_call                  shift and go to state 6
    conditional                    shift and go to state 7
    expression                     shift and go to state 8
    assignment                     shift and go to state 9
    expression_ass                 shift and go to state 10
    input                          shift and go to state 11
    output                         shift and go to state 12
    for_loop                       shift and go to state 13
    while_loop                     shift and go to state 14
    return                         shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    import                         shift and go to state 20
    if_elif_bloc                   shift and go to state 24
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    if_bloc                        shift and go to state 37
    factor                         shift and go to state 40

state 144

    (50) stat_bloc -> command .

    RBRACE          reduce using rule 50 (stat_bloc -> command .)
    COMMENT         reduce using rule 50 (stat_bloc -> command .)
    NEWLINE         reduce using rule 50 (stat_bloc -> command .)
    FUNCTION        reduce using rule 50 (stat_bloc -> command .)
    ID              reduce using rule 50 (stat_bloc -> command .)
    NULL            reduce using rule 50 (stat_bloc -> command .)
    SCAN            reduce using rule 50 (stat_bloc -> command .)
    PRINT           reduce using rule 50 (stat_bloc -> command .)
    FOR             reduce using rule 50 (stat_bloc -> command .)
    WHILE           reduce using rule 50 (stat_bloc -> command .)
    RETURN          reduce using rule 50 (stat_bloc -> command .)
    BREAK           reduce using rule 50 (stat_bloc -> command .)
    CONTINUE        reduce using rule 50 (stat_bloc -> command .)
    IMPORT          reduce using rule 50 (stat_bloc -> command .)
    LNOT            reduce using rule 50 (stat_bloc -> command .)
    BOOLEAN         reduce using rule 50 (stat_bloc -> command .)
    LPAREN          reduce using rule 50 (stat_bloc -> command .)
    IF              reduce using rule 50 (stat_bloc -> command .)
    NUMBER          reduce using rule 50 (stat_bloc -> command .)
    STRING          reduce using rule 50 (stat_bloc -> command .)


state 145

    (27) input -> SCAN LPAREN ID RPAREN .

    COMMENT         reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    NEWLINE         reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    FUNCTION        reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    ID              reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    NULL            reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    SCAN            reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    PRINT           reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    FOR             reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    WHILE           reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    RETURN          reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    BREAK           reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    CONTINUE        reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    IMPORT          reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    LNOT            reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    BOOLEAN         reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    LPAREN          reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    IF              reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    NUMBER          reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    STRING          reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    $end            reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)
    RBRACE          reduce using rule 27 (input -> SCAN LPAREN ID RPAREN .)


state 146

    (28) output -> PRINT LPAREN plist RPAREN .

    COMMENT         reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    NEWLINE         reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    FUNCTION        reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    ID              reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    NULL            reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    SCAN            reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    PRINT           reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    FOR             reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    WHILE           reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    RETURN          reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    BREAK           reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    CONTINUE        reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    IMPORT          reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    LNOT            reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    BOOLEAN         reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    LPAREN          reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    IF              reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    NUMBER          reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    STRING          reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    $end            reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)
    RBRACE          reduce using rule 28 (output -> PRINT LPAREN plist RPAREN .)


state 147

    (30) plist -> plist COMMA . pitem
    (31) pitem -> . expression
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    pitem                          shift and go to state 161
    expression                     shift and go to state 124
    term                           shift and go to state 25
    condition                      shift and go to state 26
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 148

    (63) for_loop -> FOR LPAREN assignment SEMI . condition SEMI expression RPAREN bloc
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    NULL            shift and go to state 28
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    condition                      shift and go to state 162
    expression                     shift and go to state 128
    term                           shift and go to state 25
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 149

    (64) while_loop -> WHILE LPAREN condition RPAREN . bloc
    (48) bloc -> . LBRACE stat_bloc RBRACE

    LBRACE          shift and go to state 116

    bloc                           shift and go to state 163

state 150

    (23) files -> files COMMA FILENAME .

    COMMA           reduce using rule 23 (files -> files COMMA FILENAME .)
    COMMENT         reduce using rule 23 (files -> files COMMA FILENAME .)
    NEWLINE         reduce using rule 23 (files -> files COMMA FILENAME .)
    FUNCTION        reduce using rule 23 (files -> files COMMA FILENAME .)
    ID              reduce using rule 23 (files -> files COMMA FILENAME .)
    NULL            reduce using rule 23 (files -> files COMMA FILENAME .)
    SCAN            reduce using rule 23 (files -> files COMMA FILENAME .)
    PRINT           reduce using rule 23 (files -> files COMMA FILENAME .)
    FOR             reduce using rule 23 (files -> files COMMA FILENAME .)
    WHILE           reduce using rule 23 (files -> files COMMA FILENAME .)
    RETURN          reduce using rule 23 (files -> files COMMA FILENAME .)
    BREAK           reduce using rule 23 (files -> files COMMA FILENAME .)
    CONTINUE        reduce using rule 23 (files -> files COMMA FILENAME .)
    IMPORT          reduce using rule 23 (files -> files COMMA FILENAME .)
    LNOT            reduce using rule 23 (files -> files COMMA FILENAME .)
    BOOLEAN         reduce using rule 23 (files -> files COMMA FILENAME .)
    LPAREN          reduce using rule 23 (files -> files COMMA FILENAME .)
    IF              reduce using rule 23 (files -> files COMMA FILENAME .)
    NUMBER          reduce using rule 23 (files -> files COMMA FILENAME .)
    STRING          reduce using rule 23 (files -> files COMMA FILENAME .)
    $end            reduce using rule 23 (files -> files COMMA FILENAME .)
    RBRACE          reduce using rule 23 (files -> files COMMA FILENAME .)


state 151

    (43) if_bloc -> IF LPAREN condition RPAREN . bloc
    (48) bloc -> . LBRACE stat_bloc RBRACE

    LBRACE          shift and go to state 116

    bloc                           shift and go to state 164

state 152

    (51) function_def -> FUNCTION ID LPAREN param_list RPAREN . bloc
    (48) bloc -> . LBRACE stat_bloc RBRACE

    LBRACE          shift and go to state 116

    bloc                           shift and go to state 165

state 153

    (58) param_list -> param_list COMMA . param
    (60) param -> . ID

    ID              shift and go to state 133

    param                          shift and go to state 166

state 154

    (52) function_def -> FUNCTION ID LPAREN RPAREN bloc .

    COMMENT         reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    NEWLINE         reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    FUNCTION        reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    ID              reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    NULL            reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    SCAN            reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    PRINT           reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    FOR             reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    WHILE           reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    RETURN          reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    BREAK           reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    CONTINUE        reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    IMPORT          reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    LNOT            reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    BOOLEAN         reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    LPAREN          reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    IF              reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    NUMBER          reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    STRING          reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    $end            reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)
    RBRACE          reduce using rule 52 (function_def -> FUNCTION ID LPAREN RPAREN bloc .)


state 155

    (55) param_list_call -> param_list_call COMMA param_call .

    RPAREN          reduce using rule 55 (param_list_call -> param_list_call COMMA param_call .)
    COMMA           reduce using rule 55 (param_list_call -> param_list_call COMMA param_call .)


state 156

    (26) assignment -> ID ASSIGN LBRACKET list RBRACKET .

    COMMENT         reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    NEWLINE         reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    FUNCTION        reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    ID              reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    NULL            reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    SCAN            reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    PRINT           reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    FOR             reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    WHILE           reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    RETURN          reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    BREAK           reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    CONTINUE        reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    IMPORT          reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    LNOT            reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    BOOLEAN         reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    LPAREN          reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    IF              reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    NUMBER          reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    STRING          reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    $end            reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    SEMI            reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)
    RBRACE          reduce using rule 26 (assignment -> ID ASSIGN LBRACKET list RBRACKET .)


state 157

    (93) list -> list COMMA . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43
    LPAREN          shift and go to state 88

    factor                         shift and go to state 167

state 158

    (42) ternary_condition -> LPAREN condition RPAREN QUES bloc . COLON bloc

    COLON           shift and go to state 168


state 159

    (48) bloc -> LBRACE stat_bloc RBRACE .

    COMMENT         reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    NEWLINE         reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    FUNCTION        reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    ID              reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    NULL            reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    SCAN            reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    PRINT           reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    FOR             reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    WHILE           reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    RETURN          reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    BREAK           reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    CONTINUE        reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    IMPORT          reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    LNOT            reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    BOOLEAN         reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    LPAREN          reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    IF              reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    NUMBER          reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    STRING          reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    $end            reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    RBRACE          reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    COLON           reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    ELSE            reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    SUM             reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    SUB             reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    DECR            reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    INCR            reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    GT              reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    LT              reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    GE              reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    LE              reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    NE              reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    EQ              reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    LAND            reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    LOR             reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    RPAREN          reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    SEMI            reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    RBRACKET        reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)
    COMMA           reduce using rule 48 (bloc -> LBRACE stat_bloc RBRACE .)


state 160

    (49) stat_bloc -> stat_bloc command .

    RBRACE          reduce using rule 49 (stat_bloc -> stat_bloc command .)
    COMMENT         reduce using rule 49 (stat_bloc -> stat_bloc command .)
    NEWLINE         reduce using rule 49 (stat_bloc -> stat_bloc command .)
    FUNCTION        reduce using rule 49 (stat_bloc -> stat_bloc command .)
    ID              reduce using rule 49 (stat_bloc -> stat_bloc command .)
    NULL            reduce using rule 49 (stat_bloc -> stat_bloc command .)
    SCAN            reduce using rule 49 (stat_bloc -> stat_bloc command .)
    PRINT           reduce using rule 49 (stat_bloc -> stat_bloc command .)
    FOR             reduce using rule 49 (stat_bloc -> stat_bloc command .)
    WHILE           reduce using rule 49 (stat_bloc -> stat_bloc command .)
    RETURN          reduce using rule 49 (stat_bloc -> stat_bloc command .)
    BREAK           reduce using rule 49 (stat_bloc -> stat_bloc command .)
    CONTINUE        reduce using rule 49 (stat_bloc -> stat_bloc command .)
    IMPORT          reduce using rule 49 (stat_bloc -> stat_bloc command .)
    LNOT            reduce using rule 49 (stat_bloc -> stat_bloc command .)
    BOOLEAN         reduce using rule 49 (stat_bloc -> stat_bloc command .)
    LPAREN          reduce using rule 49 (stat_bloc -> stat_bloc command .)
    IF              reduce using rule 49 (stat_bloc -> stat_bloc command .)
    NUMBER          reduce using rule 49 (stat_bloc -> stat_bloc command .)
    STRING          reduce using rule 49 (stat_bloc -> stat_bloc command .)


state 161

    (30) plist -> plist COMMA pitem .

    RPAREN          reduce using rule 30 (plist -> plist COMMA pitem .)
    COMMA           reduce using rule 30 (plist -> plist COMMA pitem .)


state 162

    (63) for_loop -> FOR LPAREN assignment SEMI condition . SEMI expression RPAREN bloc
    (83) expression -> condition .

    SEMI            shift and go to state 169
    GT              reduce using rule 83 (expression -> condition .)
    LT              reduce using rule 83 (expression -> condition .)
    GE              reduce using rule 83 (expression -> condition .)
    LE              reduce using rule 83 (expression -> condition .)
    NE              reduce using rule 83 (expression -> condition .)
    EQ              reduce using rule 83 (expression -> condition .)
    LAND            reduce using rule 83 (expression -> condition .)
    LOR             reduce using rule 83 (expression -> condition .)
    SUM             reduce using rule 83 (expression -> condition .)
    SUB             reduce using rule 83 (expression -> condition .)
    DECR            reduce using rule 83 (expression -> condition .)
    INCR            reduce using rule 83 (expression -> condition .)


state 163

    (64) while_loop -> WHILE LPAREN condition RPAREN bloc .

    COMMENT         reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    NEWLINE         reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    FUNCTION        reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    ID              reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    NULL            reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    SCAN            reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    PRINT           reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    FOR             reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    WHILE           reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    RETURN          reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    BREAK           reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    CONTINUE        reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    IMPORT          reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    LNOT            reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    BOOLEAN         reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    LPAREN          reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    IF              reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    NUMBER          reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    STRING          reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    $end            reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)
    RBRACE          reduce using rule 64 (while_loop -> WHILE LPAREN condition RPAREN bloc .)


state 164

    (43) if_bloc -> IF LPAREN condition RPAREN bloc .

    ELSE            reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    COMMENT         reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    NEWLINE         reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    FUNCTION        reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    ID              reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    NULL            reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    SCAN            reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    PRINT           reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    FOR             reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    WHILE           reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    RETURN          reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    BREAK           reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    CONTINUE        reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    IMPORT          reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    LNOT            reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    BOOLEAN         reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    LPAREN          reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    IF              reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    NUMBER          reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    STRING          reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    $end            reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)
    RBRACE          reduce using rule 43 (if_bloc -> IF LPAREN condition RPAREN bloc .)


state 165

    (51) function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .

    COMMENT         reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    NEWLINE         reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    FUNCTION        reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    ID              reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    NULL            reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    SCAN            reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    PRINT           reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    FOR             reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    WHILE           reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    RETURN          reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    BREAK           reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    CONTINUE        reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    IMPORT          reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    LNOT            reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    BOOLEAN         reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    LPAREN          reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    IF              reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    NUMBER          reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    STRING          reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    $end            reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)
    RBRACE          reduce using rule 51 (function_def -> FUNCTION ID LPAREN param_list RPAREN bloc .)


state 166

    (58) param_list -> param_list COMMA param .

    RPAREN          reduce using rule 58 (param_list -> param_list COMMA param .)
    COMMA           reduce using rule 58 (param_list -> param_list COMMA param .)


state 167

    (93) list -> list COMMA factor .

    RBRACKET        reduce using rule 93 (list -> list COMMA factor .)
    COMMA           reduce using rule 93 (list -> list COMMA factor .)


state 168

    (42) ternary_condition -> LPAREN condition RPAREN QUES bloc COLON . bloc
    (48) bloc -> . LBRACE stat_bloc RBRACE

    LBRACE          shift and go to state 116

    bloc                           shift and go to state 170

state 169

    (63) for_loop -> FOR LPAREN assignment SEMI condition SEMI . expression RPAREN bloc
    (69) expression -> . expression SUM term
    (70) expression -> . expression SUB term
    (75) expression -> . expression DECR
    (76) expression -> . expression INCR
    (83) expression -> . condition
    (84) expression -> . ternary_condition
    (85) expression -> . term
    (86) expression -> . NULL
    (32) condition -> . expression GT expression
    (33) condition -> . expression LT expression
    (34) condition -> . expression GE expression
    (35) condition -> . expression LE expression
    (36) condition -> . expression NE expression
    (37) condition -> . expression EQ expression
    (38) condition -> . expression LAND expression
    (39) condition -> . expression LOR expression
    (40) condition -> . LNOT expression
    (41) condition -> . BOOLEAN
    (42) ternary_condition -> . LPAREN condition RPAREN QUES bloc COLON bloc
    (71) term -> . term MUL factor
    (72) term -> . term DIV factor
    (73) term -> . term IDIV factor
    (74) term -> . term MOD factor
    (87) term -> . factor
    (88) factor -> . NUMBER
    (89) factor -> . ID
    (90) factor -> . STRING
    (91) factor -> . ID LBRACKET expression RBRACKET
    (92) factor -> . LPAREN expression RPAREN

    NULL            shift and go to state 28
    LNOT            shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 42
    ID              shift and go to state 70
    STRING          shift and go to state 43

    condition                      shift and go to state 26
    expression                     shift and go to state 171
    term                           shift and go to state 25
    ternary_condition              shift and go to state 27
    factor                         shift and go to state 40

state 170

    (42) ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .

    SUM             reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    SUB             reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    DECR            reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    INCR            reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    GT              reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    LT              reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    GE              reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    LE              reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    NE              reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    EQ              reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    LAND            reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    LOR             reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    COMMENT         reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    NEWLINE         reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    FUNCTION        reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    ID              reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    NULL            reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    SCAN            reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    PRINT           reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    FOR             reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    WHILE           reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    RETURN          reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    BREAK           reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    CONTINUE        reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    IMPORT          reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    LNOT            reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    BOOLEAN         reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    LPAREN          reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    IF              reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    NUMBER          reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    STRING          reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    $end            reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    RPAREN          reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    SEMI            reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    RBRACE          reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    RBRACKET        reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)
    COMMA           reduce using rule 42 (ternary_condition -> LPAREN condition RPAREN QUES bloc COLON bloc .)


state 171

    (63) for_loop -> FOR LPAREN assignment SEMI condition SEMI expression . RPAREN bloc
    (69) expression -> expression . SUM term
    (70) expression -> expression . SUB term
    (75) expression -> expression . DECR
    (76) expression -> expression . INCR
    (32) condition -> expression . GT expression
    (33) condition -> expression . LT expression
    (34) condition -> expression . GE expression
    (35) condition -> expression . LE expression
    (36) condition -> expression . NE expression
    (37) condition -> expression . EQ expression
    (38) condition -> expression . LAND expression
    (39) condition -> expression . LOR expression

    RPAREN          shift and go to state 172
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DECR            shift and go to state 48
    INCR            shift and go to state 49
    GT              shift and go to state 50
    LT              shift and go to state 51
    GE              shift and go to state 52
    LE              shift and go to state 53
    NE              shift and go to state 54
    EQ              shift and go to state 55
    LAND            shift and go to state 56
    LOR             shift and go to state 57


state 172

    (63) for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN . bloc
    (48) bloc -> . LBRACE stat_bloc RBRACE

    LBRACE          shift and go to state 116

    bloc                           shift and go to state 173

state 173

    (63) for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .

    COMMENT         reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    NEWLINE         reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    FUNCTION        reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    ID              reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    NULL            reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    SCAN            reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    PRINT           reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    FOR             reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    WHILE           reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    RETURN          reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    BREAK           reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    CONTINUE        reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    IMPORT          reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    LNOT            reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    BOOLEAN         reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    LPAREN          reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    IF              reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    NUMBER          reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    STRING          reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    $end            reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)
    RBRACE          reduce using rule 63 (for_loop -> FOR LPAREN assignment SEMI condition SEMI expression RPAREN bloc .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMENT in state 2 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for NULL in state 2 resolved as shift
WARNING: shift/reduce conflict for SCAN in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 2 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 2 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 2 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 2 resolved as shift
WARNING: shift/reduce conflict for LNOT in state 2 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 2 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 2 resolved as shift
WARNING: shift/reduce conflict for STRING in state 2 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 22 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 44 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 44 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 44 resolved as shift
WARNING: shift/reduce conflict for ID in state 44 resolved as shift
WARNING: shift/reduce conflict for NULL in state 44 resolved as shift
WARNING: shift/reduce conflict for SCAN in state 44 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 44 resolved as shift
WARNING: shift/reduce conflict for FOR in state 44 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 44 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 44 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 44 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 44 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 44 resolved as shift
WARNING: shift/reduce conflict for LNOT in state 44 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 44 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 44 resolved as shift
WARNING: shift/reduce conflict for IF in state 44 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 44 resolved as shift
WARNING: shift/reduce conflict for STRING in state 44 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 68 resolved as shift
WARNING: shift/reduce conflict for SUM in state 85 resolved as shift
WARNING: shift/reduce conflict for SUB in state 85 resolved as shift
WARNING: shift/reduce conflict for DECR in state 85 resolved as shift
WARNING: shift/reduce conflict for INCR in state 85 resolved as shift
WARNING: shift/reduce conflict for GT in state 85 resolved as shift
WARNING: shift/reduce conflict for LT in state 85 resolved as shift
WARNING: shift/reduce conflict for GE in state 85 resolved as shift
WARNING: shift/reduce conflict for LE in state 85 resolved as shift
WARNING: shift/reduce conflict for NE in state 85 resolved as shift
WARNING: shift/reduce conflict for EQ in state 85 resolved as shift
WARNING: shift/reduce conflict for LAND in state 85 resolved as shift
WARNING: shift/reduce conflict for LOR in state 85 resolved as shift
WARNING: shift/reduce conflict for SUM in state 92 resolved as shift
WARNING: shift/reduce conflict for SUB in state 92 resolved as shift
WARNING: shift/reduce conflict for DECR in state 92 resolved as shift
WARNING: shift/reduce conflict for INCR in state 92 resolved as shift
WARNING: shift/reduce conflict for GT in state 92 resolved as shift
WARNING: shift/reduce conflict for LT in state 92 resolved as shift
WARNING: shift/reduce conflict for GE in state 92 resolved as shift
WARNING: shift/reduce conflict for LE in state 92 resolved as shift
WARNING: shift/reduce conflict for NE in state 92 resolved as shift
WARNING: shift/reduce conflict for EQ in state 92 resolved as shift
WARNING: shift/reduce conflict for LAND in state 92 resolved as shift
WARNING: shift/reduce conflict for LOR in state 92 resolved as shift
WARNING: shift/reduce conflict for SUM in state 93 resolved as shift
WARNING: shift/reduce conflict for SUB in state 93 resolved as shift
WARNING: shift/reduce conflict for DECR in state 93 resolved as shift
WARNING: shift/reduce conflict for INCR in state 93 resolved as shift
WARNING: shift/reduce conflict for GT in state 93 resolved as shift
WARNING: shift/reduce conflict for LT in state 93 resolved as shift
WARNING: shift/reduce conflict for GE in state 93 resolved as shift
WARNING: shift/reduce conflict for LE in state 93 resolved as shift
WARNING: shift/reduce conflict for NE in state 93 resolved as shift
WARNING: shift/reduce conflict for EQ in state 93 resolved as shift
WARNING: shift/reduce conflict for LAND in state 93 resolved as shift
WARNING: shift/reduce conflict for LOR in state 93 resolved as shift
WARNING: shift/reduce conflict for SUM in state 94 resolved as shift
WARNING: shift/reduce conflict for SUB in state 94 resolved as shift
WARNING: shift/reduce conflict for DECR in state 94 resolved as shift
WARNING: shift/reduce conflict for INCR in state 94 resolved as shift
WARNING: shift/reduce conflict for GT in state 94 resolved as shift
WARNING: shift/reduce conflict for LT in state 94 resolved as shift
WARNING: shift/reduce conflict for GE in state 94 resolved as shift
WARNING: shift/reduce conflict for LE in state 94 resolved as shift
WARNING: shift/reduce conflict for NE in state 94 resolved as shift
WARNING: shift/reduce conflict for EQ in state 94 resolved as shift
WARNING: shift/reduce conflict for LAND in state 94 resolved as shift
WARNING: shift/reduce conflict for LOR in state 94 resolved as shift
WARNING: shift/reduce conflict for SUM in state 95 resolved as shift
WARNING: shift/reduce conflict for SUB in state 95 resolved as shift
WARNING: shift/reduce conflict for DECR in state 95 resolved as shift
WARNING: shift/reduce conflict for INCR in state 95 resolved as shift
WARNING: shift/reduce conflict for GT in state 95 resolved as shift
WARNING: shift/reduce conflict for LT in state 95 resolved as shift
WARNING: shift/reduce conflict for GE in state 95 resolved as shift
WARNING: shift/reduce conflict for LE in state 95 resolved as shift
WARNING: shift/reduce conflict for NE in state 95 resolved as shift
WARNING: shift/reduce conflict for EQ in state 95 resolved as shift
WARNING: shift/reduce conflict for LAND in state 95 resolved as shift
WARNING: shift/reduce conflict for LOR in state 95 resolved as shift
WARNING: shift/reduce conflict for SUM in state 96 resolved as shift
WARNING: shift/reduce conflict for SUB in state 96 resolved as shift
WARNING: shift/reduce conflict for DECR in state 96 resolved as shift
WARNING: shift/reduce conflict for INCR in state 96 resolved as shift
WARNING: shift/reduce conflict for GT in state 96 resolved as shift
WARNING: shift/reduce conflict for LT in state 96 resolved as shift
WARNING: shift/reduce conflict for GE in state 96 resolved as shift
WARNING: shift/reduce conflict for LE in state 96 resolved as shift
WARNING: shift/reduce conflict for NE in state 96 resolved as shift
WARNING: shift/reduce conflict for EQ in state 96 resolved as shift
WARNING: shift/reduce conflict for LAND in state 96 resolved as shift
WARNING: shift/reduce conflict for LOR in state 96 resolved as shift
WARNING: shift/reduce conflict for SUM in state 97 resolved as shift
WARNING: shift/reduce conflict for SUB in state 97 resolved as shift
WARNING: shift/reduce conflict for DECR in state 97 resolved as shift
WARNING: shift/reduce conflict for INCR in state 97 resolved as shift
WARNING: shift/reduce conflict for GT in state 97 resolved as shift
WARNING: shift/reduce conflict for LT in state 97 resolved as shift
WARNING: shift/reduce conflict for GE in state 97 resolved as shift
WARNING: shift/reduce conflict for LE in state 97 resolved as shift
WARNING: shift/reduce conflict for NE in state 97 resolved as shift
WARNING: shift/reduce conflict for EQ in state 97 resolved as shift
WARNING: shift/reduce conflict for LAND in state 97 resolved as shift
WARNING: shift/reduce conflict for LOR in state 97 resolved as shift
